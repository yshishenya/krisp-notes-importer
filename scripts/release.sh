#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–ª–∏–∑–∞ Krisp Notes Importer
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/release.sh [patch|minor|major]

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${BLUE}[RELEASE]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
RELEASE_TYPE=${1:-patch}
if [[ ! "$RELEASE_TYPE" =~ ^(patch|minor|major)$ ]]; then
    error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —Ä–µ–ª–∏–∑–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: patch, minor –∏–ª–∏ major"
fi

log "–ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑ (—Ç–∏–ø: $RELEASE_TYPE)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
if [[ ! -f "package.json" ]] || [[ ! -f "manifest.json" ]]; then
    error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å—Ç–æ—Ç—ã Git
if [[ -n $(git status --porcelain) ]]; then
    error "–ï—Å—Ç—å –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è. –°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –∏—Ö."
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
CURRENT_VERSION=$(node -p "require('./package.json').version")
log "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $CURRENT_VERSION"

# –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏
IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
MAJOR=${VERSION_PARTS[0]}
MINOR=${VERSION_PARTS[1]}
PATCH=${VERSION_PARTS[2]}

case $RELEASE_TYPE in
    "major")
        MAJOR=$((MAJOR + 1))
        MINOR=0
        PATCH=0
        ;;
    "minor")
        MINOR=$((MINOR + 1))
        PATCH=0
        ;;
    "patch")
        PATCH=$((PATCH + 1))
        ;;
esac

NEW_VERSION="$MAJOR.$MINOR.$PATCH"
log "–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: $NEW_VERSION"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json
log "–û–±–Ω–æ–≤–ª—è—é package.json..."
sed -i.bak "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" package.json
rm package.json.bak

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ manifest.json
log "–û–±–Ω–æ–≤–ª—è—é manifest.json..."
sed -i.bak "s/\"version\": \"$CURRENT_VERSION\"/\"version\": \"$NEW_VERSION\"/" manifest.json
rm manifest.json.bak

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –≤ SettingsTab.ts
log "–û–±–Ω–æ–≤–ª—è—é –≤–µ—Ä—Å–∏—é –≤ SettingsTab.ts..."
sed -i.bak "s/version.*: v$CURRENT_VERSION/version.*: v$NEW_VERSION/" src/ui/SettingsTab.ts
rm src/ui/SettingsTab.ts.bak

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
log "–°–æ–±–∏—Ä–∞—é –ø—Ä–æ–µ–∫—Ç..."
npm run build || error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
log "–ü—Ä–æ–≤–µ—Ä—è—é –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ —Ä–µ–ª–∏–∑–∞..."
for file in main.js manifest.json styles.css; do
    if [[ ! -f "$file" ]]; then
        error "–§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ CHANGELOG.md
log "–û–±–Ω–æ–≤–ª—è—é CHANGELOG.md..."
CURRENT_DATE=$(date +%Y-%m-%d)
CHANGELOG_ENTRY="## [$NEW_VERSION] - $CURRENT_DATE

### üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑
- –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å $CURRENT_VERSION –¥–æ $NEW_VERSION
- –ü—Ä–æ–µ–∫—Ç –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
- –í—Å–µ —Ñ–∞–π–ª—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã

---

"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å—å—é
echo "$CHANGELOG_ENTRY" > temp_changelog.md
# –î–æ–±–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π CHANGELOG –ø–æ—Å–ª–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
tail -n +4 CHANGELOG.md >> temp_changelog.md
# –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
mv temp_changelog.md CHANGELOG.md

# Git –æ–ø–µ—Ä–∞—Ü–∏–∏
log "–°–æ–∑–¥–∞—é –∫–æ–º–º–∏—Ç..."
git add .
git commit -m "v$NEW_VERSION: Automated release - update version and rebuild"

log "–°–æ–∑–¥–∞—é —Ç–µ–≥..."
git tag "$NEW_VERSION"

log "–û—Ç–ø—Ä–∞–≤–ª—è—é –≤ GitHub..."
git push origin master --tags

# –°–æ–∑–¥–∞–Ω–∏–µ ZIP –∞—Ä—Ö–∏–≤–∞ –¥–ª—è —Ä–µ–ª–∏–∑–∞
log "–°–æ–∑–¥–∞—é –∞—Ä—Ö–∏–≤ —Ä–µ–ª–∏–∑–∞..."
ZIP_NAME="krisp-notes-importer-$NEW_VERSION.zip"
zip -r "$ZIP_NAME" main.js manifest.json styles.css

# –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å GitHub —Ä–µ–ª–∏–∑ —á–µ—Ä–µ–∑ API
log "–°–æ–∑–¥–∞—é GitHub —Ä–µ–ª–∏–∑..."
RELEASE_NOTES="# Krisp Notes Importer v$NEW_VERSION

## üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–ª–∏–∑

–í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å $CURRENT_VERSION –¥–æ $NEW_VERSION.

### üì¶ –§–∞–π–ª—ã —Ä–µ–ª–∏–∑–∞:
- \`main.js\` - –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ –ø–ª–∞–≥–∏–Ω–∞
- \`manifest.json\` - –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –¥–ª—è Obsidian
- \`styles.css\` - —Å—Ç–∏–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

### üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞:
1. –°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ —ç—Ç–æ–≥–æ —Ä–µ–ª–∏–∑–∞
2. –ü–æ–º–µ—Å—Ç–∏—Ç–µ –∏—Ö –≤ –ø–∞–ø–∫—É \`.obsidian/plugins/krisp-notes-importer/\`
3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Obsidian –∏ –≤–∫–ª—é—á–∏—Ç–µ –ø–ª–∞–≥–∏–Ω

### üîó –°—Å—ã–ª–∫–∏:
- [–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è](https://github.com/yshishenya/krisp-notes-importer/blob/master/docs/UserGuide.MD)
- [–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://github.com/yshishenya/krisp-notes-importer/blob/master/README.md)"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ —á–µ—Ä–µ–∑ GitHub API (—Ç—Ä–µ–±—É–µ—Ç GITHUB_TOKEN)
if [[ -n "$GITHUB_TOKEN" ]]; then
    log "–°–æ–∑–¥–∞—é —Ä–µ–ª–∏–∑ —á–µ—Ä–µ–∑ GitHub API..."

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
    RELEASE_RESPONSE=$(curl -s -X POST \
        -H "Authorization: token $GITHUB_TOKEN" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/yshishenya/krisp-notes-importer/releases \
        -d "{
            \"tag_name\": \"$NEW_VERSION\",
            \"target_commitish\": \"master\",
            \"name\": \"v$NEW_VERSION\",
            \"body\": $(echo "$RELEASE_NOTES" | jq -R -s .),
            \"draft\": false,
            \"prerelease\": false
        }")

    RELEASE_ID=$(echo "$RELEASE_RESPONSE" | jq -r '.id')

    if [[ "$RELEASE_ID" != "null" ]] && [[ -n "$RELEASE_ID" ]]; then
        success "–†–µ–ª–∏–∑ —Å–æ–∑–¥–∞–Ω —Å ID: $RELEASE_ID"

        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
        for file in main.js manifest.json styles.css; do
            log "–ó–∞–≥—Ä—É–∂–∞—é $file..."
            curl -s -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: application/octet-stream" \
                --data-binary @"$file" \
                "https://uploads.github.com/repos/yshishenya/krisp-notes-importer/releases/$RELEASE_ID/assets?name=$file"
        done

        success "–í—Å–µ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ —Ä–µ–ª–∏–∑"
    else
        warning "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–ª–∏–∑ —á–µ—Ä–µ–∑ API. –°–æ–∑–¥–∞–π—Ç–µ –≤—Ä—É—á–Ω—É—é –Ω–∞ GitHub."
        echo "–û—Ç–≤–µ—Ç API: $RELEASE_RESPONSE"
    fi
else
    warning "GITHUB_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ –≤—Ä—É—á–Ω—É—é –Ω–∞ GitHub."
    echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–∞–π–ª—ã: main.js, manifest.json, styles.css"
    echo "–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GITHUB_TOKEN –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
fi

# –û—á–∏—Å—Ç–∫–∞
rm -f "$ZIP_NAME"

success "–†–µ–ª–∏–∑ v$NEW_VERSION –∑–∞–≤–µ—Ä—à–µ–Ω!"
success "–¢–µ–≥: $NEW_VERSION"
success "–ö–æ–º–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub"

if [[ -z "$GITHUB_TOKEN" ]]; then
    echo ""
    warning "–î–ª—è –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GITHUB_TOKEN:"
    echo "export GITHUB_TOKEN=your_github_token"
    echo ""
    echo "–ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ –≤—Ä—É—á–Ω—É—é:"
    echo "https://github.com/yshishenya/krisp-notes-importer/releases/new?tag=$NEW_VERSION"
fi
