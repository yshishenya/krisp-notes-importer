/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var re=Object.create;var Et=Object.defineProperty;var ae=Object.getOwnPropertyDescriptor;var oe=Object.getOwnPropertyNames;var le=Object.getPrototypeOf,ce=Object.prototype.hasOwnProperty;var ge=(c,t)=>()=>(c&&(t=c(c=0)),t);var pe=(c,t)=>()=>(t||c((t={exports:{}}).exports,t),t.exports),Yt=(c,t)=>{for(var e in t)Et(c,e,{get:t[e],enumerable:!0})},Vt=(c,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of oe(t))!ce.call(c,i)&&i!==e&&Et(c,i,{get:()=>t[i],enumerable:!(s=ae(t,i))||s.enumerable});return c};var ct=(c,t,e)=>(e=c!=null?re(le(c)):{},Vt(t||!c||!c.__esModule?Et(e,"default",{value:c,enumerable:!0}):e,c)),he=c=>Vt(Et({},"__esModule",{value:!0}),c);var Mt={};Yt(Mt,{COMPACT_NOTE_TEMPLATE:()=>de,DEFAULT_SETTINGS:()=>A,IMPROVED_NOTE_TEMPLATE:()=>ue});var A,ue,de,ft=ge(()=>{A={watchedFolderPath:"",notesFolderPath:"KrispNotes/Notes",attachmentsFolderPath:"KrispNotes/Attachments",noteNameTemplate:"{{YYYY}}-{{MM}}-{{DD}}_{{HHMM}}_{{meetingTitle}}",attachmentNameTemplate:"{{YYYY}}-{{MM}}-{{DD}}_{{meetingTitle}}_audio",noteContentTemplate:`---
title: {{meetingTitle}}
date: {{date}}
time: {{time}}
type: meeting
source: krisp
tags:
{{yamlTags}}
  - meeting
  - krisp
audio: "{{audioPathForYaml}}"
participants: [{{participants}}]
duration: {{duration}}
meeting_stats:
  participants_count: {{participantsCount}}
  transcript_length: {{transcriptWords}}
  most_active_speaker: "{{mostActiveSpeaker}}"
---

# \u{1F399}\uFE0F {{meetingTitle}}

**\u{1F4C5} {{date}}** \u2022 **\u23F0 {{time}}** \u2022 **\u23F1\uFE0F {{duration}}** \u2022 **\u{1F465} {{participantsCount}} \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432**

---

## \u{1F525} \u0417\u0430\u0434\u0430\u0447\u0438 \u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F

> [!todo]+ \u{1F4CB} Action Items \u2014 \u0422\u0440\u0435\u0431\u0443\u044E\u0442 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F
>
> {{actionItemsList}}

---

## \u{1F4DD} \u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0438

> [!note]+ \u{1F4A1} \u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u0442\u0435\u043C\u044B \u0438 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B
>
> {{summary}}

---

## \u{1F511} \u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B

> [!important]+ \u2B50 Key Points \u2014 \u0412\u0430\u0436\u043D\u044B\u0435 \u0440\u0435\u0448\u0435\u043D\u0438\u044F \u0438 \u0432\u044B\u0432\u043E\u0434\u044B
>
> {{keyPointsList}}

---

## \u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0438 \u0438 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C

> [!info]+ \u{1F464} \u0421\u043E\u0441\u0442\u0430\u0432 \u0432\u0441\u0442\u0440\u0435\u0447\u0438 ({{participantsCount}} \u0447\u0435\u043B\u043E\u0432\u0435\u043A)
>
> {{participantsList}}
>
> ### \u{1F4CA} \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438
> {{participantsStats}}
>
> **\u{1F5E3}\uFE0F \u0421\u0430\u043C\u044B\u0439 \u0430\u043A\u0442\u0438\u0432\u043D\u044B\u0439 \u0441\u043F\u0438\u043A\u0435\u0440:** {{mostActiveSpeaker}}

---

## \u{1F3A7} \u0410\u0443\u0434\u0438\u043E\u0437\u0430\u043F\u0438\u0441\u044C

{{audioEmbed}}

*\u{1F4C2} \u0424\u0430\u0439\u043B \u0430\u0443\u0434\u0438\u043E\u0437\u0430\u043F\u0438\u0441\u0438: [[{{audioPathForYaml}}]]*

---

## \u{1F3F7}\uFE0F \u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F

> [!abstract]+ \u{1F50D} \u0418\u0437\u0432\u043B\u0435\u0447\u0435\u043D\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u0438 \u0441\u0432\u044F\u0437\u0438
>
> {{extractedEntities}}
>
> ### \u{1F517} \u0421\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0435 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u044B
> {{relatedLinks}}

---

## \u{1F4CB} \u041F\u043E\u043B\u043D\u0430\u044F \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0446\u0438\u044F

> [!quote]- \u{1F399}\uFE0F \u0422\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u0432\u0441\u0442\u0440\u0435\u0447\u0438 ({{transcriptWords}} \u0441\u043B\u043E\u0432) \u2014 \u0420\u0430\u0437\u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0434\u043B\u044F \u0447\u0442\u0435\u043D\u0438\u044F
>
> {{formattedTranscript}}

---

> [!tip]+ \u{1F916} \u041C\u0435\u0442\u0430\u0434\u0430\u043D\u043D\u044B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430
>
> **\u0418\u0441\u0442\u043E\u0447\u043D\u0438\u043A:** Krisp Meeting Archive
> **\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043E:** {{importDate}}
> **\u041F\u043B\u0430\u0433\u0438\u043D:** Krisp Notes Importer
`,duplicateStrategy:"rename",deleteZipAfterImport:!1,openNoteAfterImport:!0,autoScanEnabled:!1,language:"en"},ue=`---
title: {{meetingTitle}}
date: {{date}}
time: {{time}}
type: meeting
source: krisp
tags:
{{yamlTags}}
  - meeting
  - krisp
audio: "{{audioPathForYaml}}"
participants: [{{participants}}]
duration: {{duration}}
meeting_stats:
  participants_count: {{participantsCount}}
  transcript_length: {{transcriptWords}}
  most_active_speaker: "{{mostActiveSpeaker}}"
---

# \u{1F399}\uFE0F {{meetingTitle}}

**\u{1F4C5} {{date}}** \u2022 **\u23F0 {{time}}** \u2022 **\u23F1\uFE0F {{duration}}** \u2022 **\u{1F465} {{participantsCount}} \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432**

---

## \u{1F525} \u0417\u0430\u0434\u0430\u0447\u0438 \u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F

> [!todo]+ \u{1F4CB} Action Items \u2014 \u0422\u0440\u0435\u0431\u0443\u044E\u0442 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F
>
> {{actionItemsList}}

---

## \u{1F4DD} \u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0438

> [!note]+ \u{1F4A1} \u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u0442\u0435\u043C\u044B \u0438 \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u044B
>
> {{summary}}

---

## \u{1F511} \u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B

> [!important]+ \u2B50 Key Points \u2014 \u0412\u0430\u0436\u043D\u044B\u0435 \u0440\u0435\u0448\u0435\u043D\u0438\u044F \u0438 \u0432\u044B\u0432\u043E\u0434\u044B
>
> {{keyPointsList}}

---

## \u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0438 \u0438 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C

> [!info]+ \u{1F464} \u0421\u043E\u0441\u0442\u0430\u0432 \u0432\u0441\u0442\u0440\u0435\u0447\u0438 ({{participantsCount}} \u0447\u0435\u043B\u043E\u0432\u0435\u043A)
>
> {{participantsList}}
>
> ### \u{1F4CA} \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438
> {{participantsStats}}
>
> **\u{1F5E3}\uFE0F \u0421\u0430\u043C\u044B\u0439 \u0430\u043A\u0442\u0438\u0432\u043D\u044B\u0439 \u0441\u043F\u0438\u043A\u0435\u0440:** {{mostActiveSpeaker}}

---

## \u{1F3A7} \u0410\u0443\u0434\u0438\u043E\u0437\u0430\u043F\u0438\u0441\u044C

{{audioEmbed}}

*\u{1F4C2} \u0424\u0430\u0439\u043B \u0430\u0443\u0434\u0438\u043E\u0437\u0430\u043F\u0438\u0441\u0438: [[{{audioPathForYaml}}]]*

---

## \u{1F3F7}\uFE0F \u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F

> [!abstract]+ \u{1F50D} \u0418\u0437\u0432\u043B\u0435\u0447\u0435\u043D\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435 \u0438 \u0441\u0432\u044F\u0437\u0438
>
> {{extractedEntities}}
>
> ### \u{1F517} \u0421\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0435 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u044B
> {{relatedLinks}}

---

## \u{1F4CB} \u041F\u043E\u043B\u043D\u0430\u044F \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0446\u0438\u044F

> [!quote]- \u{1F399}\uFE0F \u0422\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u0432\u0441\u0442\u0440\u0435\u0447\u0438 ({{transcriptWords}} \u0441\u043B\u043E\u0432) \u2014 \u0420\u0430\u0437\u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0434\u043B\u044F \u0447\u0442\u0435\u043D\u0438\u044F
>
> {{formattedTranscript}}

---

> [!tip]+ \u{1F916} \u041C\u0435\u0442\u0430\u0434\u0430\u043D\u043D\u044B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430
>
> **\u0418\u0441\u0442\u043E\u0447\u043D\u0438\u043A:** Krisp Meeting Archive
> **\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043E:** {{importDate}}
> **\u041F\u043B\u0430\u0433\u0438\u043D:** Krisp Notes Importer
`,de=`---
title: {{meetingTitle}}
date: {{date}}
time: {{time}}
type: meeting
source: krisp
audio: "{{audioPathForYaml}}"
participants: [{{participants}}]
tags:
{{yamlTags}}
  - meeting
  - krisp
---

# {{meetingTitle}}

*{{date}} \u2022 {{time}} \u2022 {{duration}} \u2022 {{participantsCount}} \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432*

## \u2705 Action Items

{{actionItemsList}}

## \u{1F4DD} Summary

{{summary}}

## \u{1F511} Key Points

{{keyPointsList}}

## \u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0438

{{participantsList}}

## \u{1F3A7} \u0410\u0443\u0434\u0438\u043E

{{audioEmbed}}

## \u{1F4CB} \u0422\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442

> [!quote]- \u041F\u043E\u043B\u043D\u044B\u0439 \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 ({{transcriptWords}} \u0441\u043B\u043E\u0432)
> {{formattedTranscript}}

*\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043E {{importDate}} | Krisp Notes Importer*
`});var te=pe((ke,Qt)=>{var _=require("fs"),Se=require("util"),pt=require("path"),Ut=require("events"),jt=require("zlib"),Jt=require("stream"),p={LOCHDR:30,LOCSIG:67324752,LOCVER:4,LOCFLG:6,LOCHOW:8,LOCTIM:10,LOCCRC:14,LOCSIZ:18,LOCLEN:22,LOCNAM:26,LOCEXT:28,EXTSIG:134695760,EXTHDR:16,EXTCRC:4,EXTSIZ:8,EXTLEN:12,CENHDR:46,CENSIG:33639248,CENVEM:4,CENVER:6,CENFLG:8,CENHOW:10,CENTIM:12,CENCRC:16,CENSIZ:20,CENLEN:24,CENNAM:28,CENEXT:30,CENCOM:32,CENDSK:34,CENATT:36,CENATX:38,CENOFF:42,ENDHDR:22,ENDSIG:101010256,ENDSIGFIRST:80,ENDSUB:8,ENDTOT:10,ENDSIZ:12,ENDOFF:16,ENDCOM:20,MAXFILECOMMENT:65535,ENDL64HDR:20,ENDL64SIG:117853008,ENDL64SIGFIRST:80,ENDL64OFS:8,END64HDR:56,END64SIG:101075792,END64SIGFIRST:80,END64SUB:24,END64TOT:32,END64SIZ:40,END64OFF:48,STORED:0,SHRUNK:1,REDUCED1:2,REDUCED2:3,REDUCED3:4,REDUCED4:5,IMPLODED:6,DEFLATED:8,ENHANCED_DEFLATED:9,PKWARE:10,BZIP2:12,LZMA:14,IBM_TERSE:18,IBM_LZ77:19,FLG_ENC:0,FLG_COMP1:1,FLG_COMP2:2,FLG_DESC:4,FLG_ENH:8,FLG_STR:16,FLG_LNG:1024,FLG_MSK:4096,FLG_ENTRY_ENC:1,EF_ID:0,EF_SIZE:2,ID_ZIP64:1,ID_AVINFO:7,ID_PFS:8,ID_OS2:9,ID_NTFS:10,ID_OPENVMS:12,ID_UNIX:13,ID_FORK:14,ID_PATCH:15,ID_X509_PKCS7:20,ID_X509_CERTID_F:21,ID_X509_CERTID_C:22,ID_STRONGENC:23,ID_RECORD_MGT:24,ID_X509_PKCS7_RL:25,ID_IBM1:101,ID_IBM2:102,ID_POSZIP:18064,EF_ZIP64_OR_32:4294967295,EF_ZIP64_OR_16:65535},it=function(c){let t,e,s,i,n,r,a=this,g=c.storeEntries!==!1?{}:null,h=c.file,f=c.nameEncoding?new TextDecoder(c.nameEncoding):null;T();function T(){c.fd?(t=c.fd,b()):_.open(h,"r",(o,u)=>{if(o)return a.emit("error",o);t=u,b()})}function b(){_.fstat(t,(o,u)=>{if(o)return a.emit("error",o);e=u.size,s=c.chunkSize||Math.round(e/1e3),s=Math.max(Math.min(s,Math.min(128*1024,e)),Math.min(1024,e)),P()})}function I(o,u){if(o||!u)return a.emit("error",o||new Error("Archive read error"));let d=i.lastPos,m=d-i.win.position,v=i.win.buffer,y=i.minPos;for(;--d>=y&&--m>=0;)if(v.length-m>=4&&v[m]===i.firstByte&&v.readUInt32LE(m)===i.sig){i.lastBufferPosition=m,i.lastBytesRead=u,i.complete();return}if(d===y)return a.emit("error",new Error("Bad archive"));if(i.lastPos=d+1,i.chunkSize*=2,d<=y)return a.emit("error",new Error("Bad archive"));let L=Math.min(i.chunkSize,d-y);i.win.expandLeft(L,I)}function P(){let o=Math.min(p.ENDHDR+p.MAXFILECOMMENT,e);i={win:new Tt(t),totalReadLength:o,minPos:e-o,lastPos:e,chunkSize:Math.min(1024,s),firstByte:p.ENDSIGFIRST,sig:p.ENDSIG,complete:S},i.win.read(e-i.chunkSize,i.chunkSize,I)}function S(){let o=i.win.buffer,u=i.lastBufferPosition;try{n=new Rt,n.read(o.slice(u,u+p.ENDHDR)),n.headerOffset=i.win.position+u,n.commentLength?a.comment=o.slice(u+p.ENDHDR,u+p.ENDHDR+n.commentLength).toString():a.comment=null,a.entriesCount=n.volumeEntries,a.centralDirectory=n,n.volumeEntries===p.EF_ZIP64_OR_16&&n.totalEntries===p.EF_ZIP64_OR_16||n.size===p.EF_ZIP64_OR_32||n.offset===p.EF_ZIP64_OR_32?w():(i={},W())}catch(d){a.emit("error",d)}}function w(){let o=p.ENDL64HDR;i.lastBufferPosition>o?(i.lastBufferPosition-=o,N()):(i={win:i.win,totalReadLength:o,minPos:i.win.position-o,lastPos:i.win.position,chunkSize:i.chunkSize,firstByte:p.ENDL64SIGFIRST,sig:p.ENDL64SIG,complete:N},i.win.read(i.lastPos-i.chunkSize,i.chunkSize,I))}function N(){let o=i.win.buffer,u=new Ot;u.read(o.slice(i.lastBufferPosition,i.lastBufferPosition+p.ENDL64HDR));let d=e-u.headerOffset;i={win:i.win,totalReadLength:d,minPos:u.headerOffset,lastPos:i.lastPos,chunkSize:i.chunkSize,firstByte:p.END64SIGFIRST,sig:p.END64SIG,complete:$},i.win.read(e-i.chunkSize,i.chunkSize,I)}function $(){let o=i.win.buffer,u=new _t;u.read(o.slice(i.lastBufferPosition,i.lastBufferPosition+p.END64HDR)),a.centralDirectory.volumeEntries=u.volumeEntries,a.centralDirectory.totalEntries=u.totalEntries,a.centralDirectory.size=u.size,a.centralDirectory.offset=u.offset,a.entriesCount=u.volumeEntries,i={},W()}function W(){i={win:new Tt(t),pos:n.offset,chunkSize:s,entriesLeft:n.volumeEntries},i.win.read(i.pos,Math.min(s,e-i.pos),x)}function x(o,u){if(o||!u)return a.emit("error",o||new Error("Entries read error"));let d=i.pos-i.win.position,m=i.entry,v=i.win.buffer,y=v.length;try{for(;i.entriesLeft>0;){m||(m=new zt,m.readHeader(v,d),m.headerOffset=i.win.position+d,i.entry=m,i.pos+=p.CENHDR,d+=p.CENHDR);let L=m.fnameLen+m.extraLen+m.comLen,D=L+(i.entriesLeft>1?p.CENHDR:0);if(y-d<D){i.win.moveRight(s,x,d),i.move=!0;return}m.read(v,d,f),c.skipEntryNameValidation||m.validateName(),g&&(g[m.name]=m),a.emit("entry",m),i.entry=m=null,i.entriesLeft--,i.pos+=L,d+=L}a.emit("ready")}catch(L){a.emit("error",L)}}function G(){if(!g)throw new Error("storeEntries disabled")}Object.defineProperty(this,"ready",{get(){return!1}}),this.entry=function(o){return G(),g[o]},this.entries=function(){return G(),g},this.stream=function(o,u){return this.openEntry(o,(d,m)=>{if(d)return u(d);let v=U(m),y=new Bt(t,v,m.compressedSize);if(m.method!==p.STORED)if(m.method===p.DEFLATED)y=y.pipe(jt.createInflateRaw());else return u(new Error("Unknown compression method: "+m.method));Y(m)&&(y=y.pipe(new Wt(y,m.crc,m.size))),u(null,y)},!1)},this.entryDataSync=function(o){let u=null;if(this.openEntry(o,(m,v)=>{u=m,o=v},!0),u)throw u;let d=Buffer.alloc(o.compressedSize);if(new Q(t,d,0,o.compressedSize,U(o),m=>{u=m}).read(!0),u)throw u;if(o.method!==p.STORED)if(o.method===p.DEFLATED||o.method===p.ENHANCED_DEFLATED)d=jt.inflateRawSync(d);else throw new Error("Unknown compression method: "+o.method);if(d.length!==o.size)throw new Error("Invalid size");return Y(o)&&new et(o.crc,o.size).data(d),d},this.openEntry=function(o,u,d){if(typeof o=="string"&&(G(),o=g[o],!o))return u(new Error("Entry not found"));if(!o.isFile)return u(new Error("Entry is not file"));if(!t)return u(new Error("Archive closed"));let m=Buffer.alloc(p.LOCHDR);new Q(t,m,0,m.length,o.offset,v=>{if(v)return u(v);let y;try{o.readDataHeader(m),o.encrypted&&(y=new Error("Entry encrypted"))}catch(L){y=L}u(y,o)}).read(d)};function U(o){return o.offset+p.LOCHDR+o.fnameLen+o.extraLen}function Y(o){return(o.flags&8)!==8}function X(o,u,d){a.stream(o,(m,v)=>{if(m)d(m);else{let y,L;v.on("error",D=>{L=D,y&&(v.unpipe(y),y.close(()=>{d(D)}))}),_.open(u,"w",(D,Z)=>{if(D)return d(D);if(L){_.close(t,()=>{d(L)});return}y=_.createWriteStream(u,{fd:Z}),y.on("finish",()=>{a.emit("extract",o,u),L||d()}),v.pipe(y)})}})}function C(o,u,d){if(!u.length)return d();let m=u.shift();m=pt.join(o,pt.join(...m)),_.mkdir(m,{recursive:!0},v=>{if(v&&v.code!=="EEXIST")return d(v);C(o,u,d)})}function at(o,u,d,m,v){if(!d.length)return m(null,v);let y=d.shift(),L=pt.join(o,y.name.replace(u,""));X(y,L,D=>{if(D)return m(D,v);at(o,u,d,m,v+1)})}this.extract=function(o,u,d){let m=o||"";if(typeof o=="string"&&(o=this.entry(o),o?m=o.name:m.length&&m[m.length-1]!=="/"&&(m+="/")),!o||o.isDirectory){let v=[],y=[],L={};for(let D in g)if(Object.prototype.hasOwnProperty.call(g,D)&&D.lastIndexOf(m,0)===0){let Z=D.replace(m,""),Gt=g[D];if(Gt.isFile&&(v.push(Gt),Z=pt.dirname(Z)),Z&&!L[Z]&&Z!=="."){L[Z]=!0;let q=Z.split("/").filter(mt=>mt);for(q.length&&y.push(q);q.length>1;){q=q.slice(0,q.length-1);let mt=q.join("/");if(L[mt]||mt===".")break;L[mt]=!0,y.push(q)}}}y.sort((D,Z)=>D.length-Z.length),y.length?C(u,y,D=>{D?d(D):at(u,m,v,d,0)}):at(u,m,v,d,0)}else _.stat(u,(v,y)=>{y&&y.isDirectory()?X(o,pt.join(u,pt.basename(o.name)),d):X(o,u,d)})},this.close=function(o){r||!t?(r=!0,o&&o()):(r=!0,_.close(t,u=>{t=null,o&&o(u)}))};let vt=Ut.EventEmitter.prototype.emit;this.emit=function(...o){if(!r)return vt.call(this,...o)}};it.setFs=function(c){_=c};it.debugLog=(...c)=>{it.debug&&console.log(...c)};Se.inherits(it,Ut.EventEmitter);var J=Symbol("zip");it.async=class extends Ut.EventEmitter{constructor(t){super();let e=new it(t);e.on("entry",s=>this.emit("entry",s)),e.on("extract",(s,i)=>this.emit("extract",s,i)),this[J]=new Promise((s,i)=>{e.on("ready",()=>{e.removeListener("error",i),s(e)}),e.on("error",i)})}get entriesCount(){return this[J].then(t=>t.entriesCount)}get comment(){return this[J].then(t=>t.comment)}async entry(t){return(await this[J]).entry(t)}async entries(){return(await this[J]).entries()}async stream(t){let e=await this[J];return new Promise((s,i)=>{e.stream(t,(n,r)=>{n?i(n):s(r)})})}async entryData(t){let e=await this.stream(t);return new Promise((s,i)=>{let n=[];e.on("data",r=>n.push(r)),e.on("end",()=>{s(Buffer.concat(n))}),e.on("error",r=>{e.removeAllListeners("end"),i(r)})})}async extract(t,e){let s=await this[J];return new Promise((i,n)=>{s.extract(t,e,(r,l)=>{r?n(r):i(l)})})}async close(){let t=await this[J];return new Promise((e,s)=>{t.close(i=>{i?s(i):e()})})}};var Rt=class{read(t){if(t.length!==p.ENDHDR||t.readUInt32LE(0)!==p.ENDSIG)throw new Error("Invalid central directory");this.volumeEntries=t.readUInt16LE(p.ENDSUB),this.totalEntries=t.readUInt16LE(p.ENDTOT),this.size=t.readUInt32LE(p.ENDSIZ),this.offset=t.readUInt32LE(p.ENDOFF),this.commentLength=t.readUInt16LE(p.ENDCOM)}},Ot=class{read(t){if(t.length!==p.ENDL64HDR||t.readUInt32LE(0)!==p.ENDL64SIG)throw new Error("Invalid zip64 central directory locator");this.headerOffset=tt(t,p.ENDSUB)}},_t=class{read(t){if(t.length!==p.END64HDR||t.readUInt32LE(0)!==p.END64SIG)throw new Error("Invalid central directory");this.volumeEntries=tt(t,p.END64SUB),this.totalEntries=tt(t,p.END64TOT),this.size=tt(t,p.END64SIZ),this.offset=tt(t,p.END64OFF)}},zt=class{readHeader(t,e){if(t.length<e+p.CENHDR||t.readUInt32LE(e)!==p.CENSIG)throw new Error("Invalid entry header");this.verMade=t.readUInt16LE(e+p.CENVEM),this.version=t.readUInt16LE(e+p.CENVER),this.flags=t.readUInt16LE(e+p.CENFLG),this.method=t.readUInt16LE(e+p.CENHOW);let s=t.readUInt16LE(e+p.CENTIM),i=t.readUInt16LE(e+p.CENTIM+2);this.time=Xt(s,i),this.crc=t.readUInt32LE(e+p.CENCRC),this.compressedSize=t.readUInt32LE(e+p.CENSIZ),this.size=t.readUInt32LE(e+p.CENLEN),this.fnameLen=t.readUInt16LE(e+p.CENNAM),this.extraLen=t.readUInt16LE(e+p.CENEXT),this.comLen=t.readUInt16LE(e+p.CENCOM),this.diskStart=t.readUInt16LE(e+p.CENDSK),this.inattr=t.readUInt16LE(e+p.CENATT),this.attr=t.readUInt32LE(e+p.CENATX),this.offset=t.readUInt32LE(e+p.CENOFF)}readDataHeader(t){if(t.readUInt32LE(0)!==p.LOCSIG)throw new Error("Invalid local header");this.version=t.readUInt16LE(p.LOCVER),this.flags=t.readUInt16LE(p.LOCFLG),this.method=t.readUInt16LE(p.LOCHOW);let e=t.readUInt16LE(p.LOCTIM),s=t.readUInt16LE(p.LOCTIM+2);this.time=Xt(e,s),this.crc=t.readUInt32LE(p.LOCCRC)||this.crc;let i=t.readUInt32LE(p.LOCSIZ);i&&i!==p.EF_ZIP64_OR_32&&(this.compressedSize=i);let n=t.readUInt32LE(p.LOCLEN);n&&n!==p.EF_ZIP64_OR_32&&(this.size=n),this.fnameLen=t.readUInt16LE(p.LOCNAM),this.extraLen=t.readUInt16LE(p.LOCEXT)}read(t,e,s){let i=t.slice(e,e+=this.fnameLen);this.name=s?s.decode(new Uint8Array(i)):i.toString("utf8");let n=t[e-1];this.isDirectory=n===47||n===92,this.extraLen&&(this.readExtra(t,e),e+=this.extraLen),this.comment=this.comLen?t.slice(e,e+this.comLen).toString():null}validateName(){if(/\\|^\w+:|^\/|(^|\/)\.\.(\/|$)/.test(this.name))throw new Error("Malicious entry: "+this.name)}readExtra(t,e){let s,i,n=e+this.extraLen;for(;e<n;)s=t.readUInt16LE(e),e+=2,i=t.readUInt16LE(e),e+=2,p.ID_ZIP64===s&&this.parseZip64Extra(t,e,i),e+=i}parseZip64Extra(t,e,s){s>=8&&this.size===p.EF_ZIP64_OR_32&&(this.size=tt(t,e),e+=8,s-=8),s>=8&&this.compressedSize===p.EF_ZIP64_OR_32&&(this.compressedSize=tt(t,e),e+=8,s-=8),s>=8&&this.offset===p.EF_ZIP64_OR_32&&(this.offset=tt(t,e),e+=8,s-=8),s>=4&&this.diskStart===p.EF_ZIP64_OR_16&&(this.diskStart=t.readUInt32LE(e))}get encrypted(){return(this.flags&p.FLG_ENTRY_ENC)===p.FLG_ENTRY_ENC}get isFile(){return!this.isDirectory}},Q=class{constructor(t,e,s,i,n,r){this.fd=t,this.buffer=e,this.offset=s,this.length=i,this.position=n,this.callback=r,this.bytesRead=0,this.waiting=!1}read(t){it.debugLog("read",this.position,this.bytesRead,this.length,this.offset),this.waiting=!0;let e;if(t){let s=0;try{s=_.readSync(this.fd,this.buffer,this.offset+this.bytesRead,this.length-this.bytesRead,this.position+this.bytesRead)}catch(i){e=i}this.readCallback(t,e,e?s:null)}else _.read(this.fd,this.buffer,this.offset+this.bytesRead,this.length-this.bytesRead,this.position+this.bytesRead,this.readCallback.bind(this,t))}readCallback(t,e,s){if(typeof s=="number"&&(this.bytesRead+=s),e||!s||this.bytesRead===this.length)return this.waiting=!1,this.callback(e,this.bytesRead);this.read(t)}},Tt=class{constructor(t){this.position=0,this.buffer=Buffer.alloc(0),this.fd=t,this.fsOp=null}checkOp(){if(this.fsOp&&this.fsOp.waiting)throw new Error("Operation in progress")}read(t,e,s){this.checkOp(),this.buffer.length<e&&(this.buffer=Buffer.alloc(e)),this.position=t,this.fsOp=new Q(this.fd,this.buffer,0,e,this.position,s).read()}expandLeft(t,e){this.checkOp(),this.buffer=Buffer.concat([Buffer.alloc(t),this.buffer]),this.position-=t,this.position<0&&(this.position=0),this.fsOp=new Q(this.fd,this.buffer,0,t,this.position,e).read()}expandRight(t,e){this.checkOp();let s=this.buffer.length;this.buffer=Buffer.concat([this.buffer,Buffer.alloc(t)]),this.fsOp=new Q(this.fd,this.buffer,s,t,this.position+s,e).read()}moveRight(t,e,s){this.checkOp(),s?this.buffer.copy(this.buffer,0,s):s=0,this.position+=s,this.fsOp=new Q(this.fd,this.buffer,this.buffer.length-s,s,this.position+this.buffer.length-s,e).read()}},Bt=class extends Jt.Readable{constructor(t,e,s){super(),this.fd=t,this.offset=e,this.length=s,this.pos=0,this.readCallback=this.readCallback.bind(this)}_read(t){let e=Buffer.alloc(Math.min(t,this.length-this.pos));e.length?_.read(this.fd,e,0,e.length,this.offset+this.pos,this.readCallback):this.push(null)}readCallback(t,e,s){this.pos+=e,t?(this.emit("error",t),this.push(null)):e?(e!==s.length&&(s=s.slice(0,e)),this.push(s)):this.push(null)}},Wt=class extends Jt.Transform{constructor(t,e,s){super(),this.verify=new et(e,s),t.on("error",i=>{this.emit("error",i)})}_transform(t,e,s){let i;try{this.verify.data(t)}catch(n){i=n}s(i,t)}},et=class{constructor(t,e){this.crc=t,this.size=e,this.state={crc:-1,size:0}}data(t){let e=et.getCrcTable(),s=this.state.crc,i=0,n=t.length;for(;--n>=0;)s=e[(s^t[i++])&255]^s>>>8;if(this.state.crc=s,this.state.size+=t.length,this.state.size>=this.size){let r=Buffer.alloc(4);if(r.writeInt32LE(~this.state.crc&4294967295,0),s=r.readUInt32LE(0),s!==this.crc)throw new Error("Invalid CRC");if(this.state.size!==this.size)throw new Error("Invalid size")}}static getCrcTable(){let t=et.crcTable;if(!t){et.crcTable=t=[];let e=Buffer.alloc(4);for(let s=0;s<256;s++){let i=s;for(let n=8;--n>=0;)i&1?i=3988292384^i>>>1:i=i>>>1;i<0&&(e.writeInt32LE(i,0),i=e.readUInt32LE(0)),t[s]=i}}return t}};function Xt(c,t){let e=qt(c,16),s=qt(t,16),i={h:parseInt(e.slice(0,5).join(""),2),m:parseInt(e.slice(5,11).join(""),2),s:parseInt(e.slice(11,16).join(""),2)*2,Y:parseInt(s.slice(0,7).join(""),2)+1980,M:parseInt(s.slice(7,11).join(""),2),D:parseInt(s.slice(11,16).join(""),2)},n=[i.Y,i.M,i.D].join("-")+" "+[i.h,i.m,i.s].join(":")+" GMT+0";return new Date(n).getTime()}function qt(c,t){let e=(c>>>0).toString(2);for(;e.length<t;)e="0"+e;return e.split("")}function tt(c,t){return c.readUInt32LE(t+4)*4294967296+c.readUInt32LE(t)}Qt.exports=it});var ve={};Yt(ve,{default:()=>At});module.exports=he(ve);var O=require("obsidian");ft();var R={ENTITIES_TEXT_LIMIT:5e3,SMART_TAGS_TEXT_LIMIT:3e3,MAX_PROJECTS_ENTITIES:5,MAX_COMPANIES_ENTITIES:5,MAX_DATES_ENTITIES:5,FILE_STABILITY_CHECK_INTERVAL:500,FILE_STABILITY_MAX_WAIT:5e3,FILE_STABILITY_REQUIRED_CHECKS:3,MAX_TRANSCRIPT_MEMORY_MB:50,LARGE_FILE_CHUNK_SIZE:65536,STREAMING_BUFFER_SIZE:1048576},F={SUCCESS:5e3,ERROR:8e3,INFO:5e3,WARNING:5e3,TEMPORARY_STATUS:3e3},St={MEETING_NOTES:"meeting_notes.txt",TRANSCRIPT:"transcript.txt",AUDIO_DEFAULT:"recording.mp3",AUDIO_PATTERN:/^recording\.(mp3|m4a)$/i},It={MAX_LOG_ENTRIES:1e3,LOG_TTL_HOURS:24,CLEANUP_INTERVAL_MINUTES:30},H={VALID_STRATEGIES:["skip","overwrite","rename"],VALID_LANGUAGES:["en","ru"],MIN_UUID_LENGTH:32,MIN_DATE_LENGTH:10,MIN_TIME_LENGTH:5},M={sanitizeFileName:c=>!c||typeof c!="string"?"untitled":c.replace(/[\/:\[\]\*\?"<>\|#\^]/g,"_").replace(/\s+/g,"_").replace(/^_+|_+$/g,"").substring(0,200)||"untitled",safeSubstring:(c,t,e,s="")=>!c||typeof c!="string"||c.length<e?s:c.substring(t,e),isValidFileName:c=>!c||typeof c!="string"?!1:!/[\/:\[\]\*\?"<>\|#\^]/.test(c)&&c.length>0&&c.length<=255};var wt=class{constructor(t){this.plugin=t,this.settings={...A}}async loadSettings(){let t=await this.plugin.loadData();this.settings={...A,...t}}async saveSettings(){await this.plugin.saveData(this.settings)}getAllSettings(){return this.getSettingsWithDefaults()}getSetting(t){return this.getSettingsWithDefaults()[t]}async updateSetting(t,e){this.settings||await this.loadSettings(),this.settings[t]=e,await this.saveSettings()}isValidPath(t){return!!t&&typeof t=="string"&&t.trim()!==""}isValidTemplate(t){return!!t&&typeof t=="string"&&t.trim()!==""}isValidStrategy(t){return!!t&&typeof t=="string"&&H.VALID_STRATEGIES.includes(t)}isValidLanguage(t){return!!t&&typeof t=="string"&&H.VALID_LANGUAGES.includes(t)}validateSettings(){let t=[];return this.isValidPath(this.settings.watchedFolderPath)||t.push("\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),this.isValidPath(this.settings.notesFolderPath)||t.push("\u041F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435 \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),this.isValidPath(this.settings.attachmentsFolderPath)||t.push("\u041F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435 \u0432\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),this.isValidTemplate(this.settings.noteNameTemplate)||t.push("Note name template cannot be empty"),this.isValidTemplate(this.settings.attachmentNameTemplate)||t.push("Audio name template cannot be empty"),this.isValidStrategy(this.settings.duplicateStrategy)||t.push(`\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430\u044F \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432: ${this.settings.duplicateStrategy}`),this.isValidLanguage(this.settings.language)||t.push(`\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u044F\u0437\u044B\u043A: ${this.settings.language}`),{isValid:t.length===0,errors:t}}getSettingsWithDefaults(){return{...A,...this.settings,watchedFolderPath:this.isValidPath(this.settings.watchedFolderPath)?this.settings.watchedFolderPath.trim():A.watchedFolderPath,notesFolderPath:this.isValidPath(this.settings.notesFolderPath)?this.settings.notesFolderPath.trim():A.notesFolderPath,attachmentsFolderPath:this.isValidPath(this.settings.attachmentsFolderPath)?this.settings.attachmentsFolderPath.trim():A.attachmentsFolderPath,noteNameTemplate:this.isValidTemplate(this.settings.noteNameTemplate)?this.settings.noteNameTemplate.trim():A.noteNameTemplate,attachmentNameTemplate:this.isValidTemplate(this.settings.attachmentNameTemplate)?this.settings.attachmentNameTemplate.trim():A.attachmentNameTemplate,duplicateStrategy:this.isValidStrategy(this.settings.duplicateStrategy)?this.settings.duplicateStrategy:A.duplicateStrategy,language:this.isValidLanguage(this.settings.language)?this.settings.language:A.language}}};var E=require("obsidian");ft();var me={settings:{title:"Krisp Notes Importer Settings",sections:{basic:"\u{1F527} Basic Settings",storage:"\u{1F4BE} Obsidian Storage",templates:"\u{1F4DD} Templates & Naming",duplicates:"\u{1F504} Duplicate Handling",postImport:"\u26A1 Post-Import Actions",advanced:"\u{1F6E0}\uFE0F Advanced & Maintenance",coreAutomation:"\u{1F4C2} Core: Watching & Automation",namingAndTemplates:"\u{1F3A8} Appearance & Naming",importBehavior:"\u2699\uFE0F Import Behavior",manualOperations:"\u{1F6E0}\uFE0F Manual Operations & Diagnostics",aboutPlugin:"\u2139\uFE0F About Plugin"},fields:{watchedFolder:{name:"Watched Folder Path",desc:"Full path to the folder where Krisp saves ZIP archives"},autoScan:{name:"Enable Auto-Watching",desc:"Automatically monitor the folder for new ZIP files"},notesFolder:{name:"Notes Folder",desc:"Folder in your Obsidian vault for saving meeting notes"},attachmentsFolder:{name:"Attachments Folder",desc:"Folder in your Obsidian vault for saving audio files"},noteNameTemplate:{name:"Note Name Template",desc:"Template for naming note files. Available variables: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"},attachmentNameTemplate:{name:"Audio Name Template",desc:"Template for naming audio files. Same variables available"},noteContentTemplate:{name:"Note Content Template",desc:"Template for note content. Available variables: {{title}}, {{date}}, {{time}}, {{participants}}, {{summary}}, {{actionItems}}, {{keyPoints}}, {{transcript}}, {{audioLink}}"},duplicateStrategy:{name:"Duplicate Strategy",desc:"What to do when a meeting with the same name already exists",options:{skip:"Skip import",overwrite:"Overwrite existing",rename:"Create with suffix"}},deleteZipAfterImport:{name:"Delete ZIP after import",desc:"Automatically delete the ZIP file after successful import"},openNoteAfterImport:{name:"Open note after import",desc:"Automatically open the created note in Obsidian"},language:{name:"Interface Language",desc:"Choose the language for the plugin interface"}},buttons:{testImport:"Test Import",massImport:"Import All Files",resetSettings:"Reset Settings",showLogs:"Show Logs",restoreTemplate:"Restore Default Template",restoreImprovedTemplate:"Use Improved Template",restoreCompactTemplate:"Use Compact Template"},info:{title:"Plugin Information",version:"Version",status:"Status",features:["\u2705 Manual ZIP import","\u2705 Automatic folder watching","\u2705 Beautiful note formatting with callouts","\u2705 Advanced participant analytics","\u2705 Complete UI settings","\u2705 Logging and diagnostic system","\u2705 Bilingual support (English/Russian)"],commands:["Import ZIP file manually","Start auto-watching folder","Stop auto-watching","Scan existing files","Check watching status","Debug current settings"],errors:{watchedFolderMissing:"Watched folder path is not specified. Auto-watching cannot start.",watchedFolderEmptyAutoscan:"Watched folder path is empty. Auto-watching stopped if it was active for a previous path."}},status:{title:"\u{1F4CA} Current Status",watchingActive:"Auto-watching is ACTIVE for folder: {{path}}",watchingInactive:"Auto-watching is INACTIVE.",watchingWarningFolderMissing:"Auto-watching is ON, but no folder specified. Please set the 'Watched Folder Path'.",watchingStarting:"Auto-watching is starting...",inactiveDetailEnableAutoScan:"Hint: Enable 'Enable Auto-Watching' option.",inactiveDetailSetPath:"Hint: Set the 'Watched Folder Path'.",serviceUnavailable:"File Watcher Service is not available. Please check plugin logs or restart Obsidian."}},commands:{importZip:"Import ZIP file manually",startWatching:"Start auto-watching folder",stopWatching:"Stop auto-watching",scanExisting:"Process All Existing Files",checkStatus:"Check watching status",debugSettings:"Debug current settings",scanExistingDesc:"Scan the watched folder and import all existing ZIP files that haven't been processed yet."},notifications:{success:{imported:"Successfully imported: {{fileName}}",watchingStarted:"Started watching folder: {{folderPath}}",watchingStopped:"Stopped watching folder.",settingsReset:"Settings have been reset to default."},error:{invalidZip:"Invalid ZIP file: {{fileName}}",missingFiles:"Missing required files in ZIP: {{fileName}}",createNote:"Error creating note for: {{fileName}} - {{error}}",copyAudio:"Error copying audio for: {{fileName}} - {{error}}",watchingFailed:"Failed to start watching: {{error}}",noFileSelected:"No file selected.",importFailedGeneral:"Import failed: {{error}}",massImportFailed:"Mass import failed. Check logs for details."},warning:{duplicateSkipped:"Skipped duplicate: {{fileName}}",duplicateRenamed:"Renamed duplicate: {{newName}} from {{originalName}}",duplicateOverwritten:"Overwritten duplicate: {{fileName}}"},info:{processing:"Processing: {{fileName}}...",scanningFolder:"Scanning folder: {{folderPath}}...",scanningFolderComplete:"Folder scan and import complete!"}},statusBar:{idle:"Idle",watching:"Watching: {{path}}",processing:"Processing...",error:"Error: {{message}}"},modals:{testImport:{title:"Test Manual Import",placeholder:"Select Krisp ZIP file...",button:"Import Selected File",description:"Manually select a ZIP file to test the import process.",importing:"Importing..."},confirmReset:{title:"Confirm Reset",message:"Are you sure you want to reset all settings to their default values? This action cannot be undone.",confirm:"Reset Settings",cancel:"Cancel"},logs:{title:"Plugin Logs",export:"Export Logs",clear:"Clear Logs",close:"Close",description:"View recent activity logs for troubleshooting.",noLogs:"No logs yet.",copy:"Copy Logs",copiedNotice:"Logs copied to clipboard!",clearedNotice:"Logs cleared!"}},settingsInfoTooltips:{githubRepoTooltip:"Visit GitHub Repository",reportIssueTooltip:"Report an Issue",developer:"Developed by: {{author}}",supportDevelopment:"If you find this plugin useful, consider supporting its development: ",donateLinkText:"Buy Me a Coffee",pluginDescription:"Description: {{description}}",resetSettingsDesc:"Reset all plugin settings to their default values.",supportDevelopmentPlaceholder:"Support information for this plugin is not specified by the author."}},fe={settings:{title:"\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 Krisp Notes Importer",sections:{basic:"\u{1F527} \u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",storage:"\u{1F4BE} \u0425\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0432 Obsidian",templates:"\u{1F4DD} \u0428\u0430\u0431\u043B\u043E\u043D\u044B \u0438 \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435",duplicates:"\u{1F504} \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432",postImport:"\u26A1 \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",advanced:"\u{1F6E0}\uFE0F \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u043D\u044B\u0435 \u0438 \u041E\u0431\u0441\u043B\u0443\u0436\u0438\u0432\u0430\u043D\u0438\u0435",coreAutomation:"\u{1F4C2} \u042F\u0434\u0440\u043E: \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0438 \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044F",namingAndTemplates:"\u{1F3A8} \u0412\u043D\u0435\u0448\u043D\u0438\u0439 \u0432\u0438\u0434 \u0438 \u0418\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435",importBehavior:"\u2699\uFE0F \u041F\u043E\u0432\u0435\u0434\u0435\u043D\u0438\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",manualOperations:"\u{1F6E0}\uFE0F \u0420\u0443\u0447\u043D\u044B\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438 \u0438 \u0414\u0438\u0430\u0433\u043D\u043E\u0441\u0442\u0438\u043A\u0430",aboutPlugin:"\u2139\uFE0F \u041E \u043F\u043B\u0430\u0433\u0438\u043D\u0435"},fields:{watchedFolder:{name:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430",desc:"\u041F\u043E\u043B\u043D\u044B\u0439 \u043F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435, \u0433\u0434\u0435 Krisp \u0441\u043E\u0445\u0440\u0430\u043D\u044F\u0435\u0442 ZIP-\u0430\u0440\u0445\u0438\u0432\u044B"},autoScan:{name:"\u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0442\u044C \u043F\u0430\u043F\u043A\u0443 \u043D\u0430 \u043F\u0440\u0435\u0434\u043C\u0435\u0442 \u043D\u043E\u0432\u044B\u0445 ZIP-\u0444\u0430\u0439\u043B\u043E\u0432"},notesFolder:{name:"\u041F\u0430\u043F\u043A\u0430 \u0434\u043B\u044F \u0437\u0430\u043C\u0435\u0442\u043E\u043A",desc:"\u041F\u0430\u043F\u043A\u0430 \u0432 \u0432\u0430\u0448\u0435\u043C \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 Obsidian \u0434\u043B\u044F \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u0432\u0441\u0442\u0440\u0435\u0447"},attachmentsFolder:{name:"\u041F\u0430\u043F\u043A\u0430 \u0434\u043B\u044F \u0432\u043B\u043E\u0436\u0435\u043D\u0438\u0439",desc:"\u041F\u0430\u043F\u043A\u0430 \u0432 \u0432\u0430\u0448\u0435\u043C \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 Obsidian \u0434\u043B\u044F \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B\u043E\u0432"},noteNameTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0438\u043C\u0435\u043D\u0438 \u0437\u0430\u043C\u0435\u0442\u043A\u0438",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u044F \u0444\u0430\u0439\u043B\u043E\u0432 \u0437\u0430\u043C\u0435\u0442\u043E\u043A. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"},attachmentNameTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0438\u043C\u0435\u043D\u0438 \u0430\u0443\u0434\u0438\u043E",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B\u043E\u0432. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B \u0442\u0435 \u0436\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435"},noteContentTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u043C\u043E\u0433\u043E \u0437\u0430\u043C\u0435\u0442\u043A\u0438",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u043C\u043E\u0433\u043E \u0437\u0430\u043C\u0435\u0442\u043A\u0438. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435: {{title}}, {{date}}, {{time}}, {{participants}}, {{summary}}, {{actionItems}}, {{keyPoints}}, {{transcript}}, {{audioLink}}"},duplicateStrategy:{name:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432",desc:"\u0427\u0442\u043E \u0434\u0435\u043B\u0430\u0442\u044C, \u043A\u043E\u0433\u0434\u0430 \u0432\u0441\u0442\u0440\u0435\u0447\u0430 \u0441 \u0442\u0430\u043A\u0438\u043C \u0436\u0435 \u0438\u043C\u0435\u043D\u0435\u043C \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",options:{skip:"\u041F\u0440\u043E\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u0438\u043C\u043F\u043E\u0440\u0442",overwrite:"\u041F\u0435\u0440\u0435\u0437\u0430\u043F\u0438\u0441\u0430\u0442\u044C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0443\u044E",rename:"\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0441 \u0441\u0443\u0444\u0444\u0438\u043A\u0441\u043E\u043C"}},deleteZipAfterImport:{name:"\u0423\u0434\u0430\u043B\u044F\u0442\u044C ZIP \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u0443\u0434\u0430\u043B\u044F\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u043F\u043E\u0441\u043B\u0435 \u0443\u0441\u043F\u0435\u0448\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430"},openNoteAfterImport:{name:"\u041E\u0442\u043A\u0440\u044B\u0432\u0430\u0442\u044C \u0437\u0430\u043C\u0435\u0442\u043A\u0443 \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043E\u0442\u043A\u0440\u044B\u0432\u0430\u0442\u044C \u0441\u043E\u0437\u0434\u0430\u043D\u043D\u0443\u044E \u0437\u0430\u043C\u0435\u0442\u043A\u0443 \u0432 Obsidian"},language:{name:"\u042F\u0437\u044B\u043A \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430",desc:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u044F\u0437\u044B\u043A \u0434\u043B\u044F \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043F\u043B\u0430\u0433\u0438\u043D\u0430"}},buttons:{testImport:"\u0422\u0435\u0441\u0442\u043E\u0432\u044B\u0439 \u0438\u043C\u043F\u043E\u0440\u0442",massImport:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u0441\u0435 \u0444\u0430\u0439\u043B\u044B",resetSettings:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",showLogs:"\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043B\u043E\u0433\u0438",restoreTemplate:"\u0412\u043E\u0441\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0441\u0442\u0430\u043D\u0434\u0430\u0440\u0442\u043D\u044B\u0439 \u0448\u0430\u0431\u043B\u043E\u043D",restoreImprovedTemplate:"\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u0443\u043B\u0443\u0447\u0448\u0435\u043D\u043D\u044B\u0439 \u0448\u0430\u0431\u043B\u043E\u043D",restoreCompactTemplate:"\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u043A\u043E\u043C\u043F\u0430\u043A\u0442\u043D\u044B\u0439 \u0448\u0430\u0431\u043B\u043E\u043D"},info:{title:"\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u043F\u043B\u0430\u0433\u0438\u043D\u0435",version:"\u0412\u0435\u0440\u0441\u0438\u044F",status:"\u0421\u0442\u0430\u0442\u0443\u0441",features:["\u2705 \u0420\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 ZIP","\u2705 \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438","\u2705 \u041A\u0440\u0430\u0441\u0438\u0432\u043E\u0435 \u043E\u0444\u043E\u0440\u043C\u043B\u0435\u043D\u0438\u0435 \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u0441 callouts","\u2705 \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u043D\u0430\u044F \u0430\u043D\u0430\u043B\u0438\u0442\u0438\u043A\u0430 \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432","\u2705 \u041F\u043E\u043B\u043D\u044B\u0439 UI \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043A","\u2705 \u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u043B\u043E\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438 \u0434\u0438\u0430\u0433\u043D\u043E\u0441\u0442\u0438\u043A\u0438","\u2705 \u0414\u0432\u0443\u044F\u0437\u044B\u0447\u043D\u0430\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0430 (English/\u0420\u0443\u0441\u0441\u043A\u0438\u0439)"],commands:["\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u0432\u0440\u0443\u0447\u043D\u0443\u044E","\u0417\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438","\u041E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435","\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0444\u0430\u0439\u043B\u044B","\u041F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F","\u041E\u0442\u043B\u0430\u0434\u0438\u0442\u044C \u0442\u0435\u043A\u0443\u0449\u0438\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438"],errors:{watchedFolderMissing:"\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D. \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0437\u0430\u043F\u0443\u0449\u0435\u043D\u043E.",watchedFolderEmptyAutoscan:"\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043F\u0443\u0441\u0442. \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E, \u0435\u0441\u043B\u0438 \u0431\u044B\u043B\u043E \u0430\u043A\u0442\u0438\u0432\u043D\u043E \u0434\u043B\u044F \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0435\u0433\u043E \u043F\u0443\u0442\u0438."}},status:{title:"\u{1F4CA} \u0422\u0435\u043A\u0443\u0449\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441",watchingActive:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0410\u041A\u0422\u0418\u0412\u041D\u041E \u0434\u043B\u044F \u043F\u0430\u043F\u043A\u0438: {{path}}",watchingInactive:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u041D\u0415\u0410\u041A\u0422\u0418\u0412\u041D\u041E.",watchingWarningFolderMissing:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0412\u041A\u041B\u042E\u0427\u0415\u041D\u041E, \u043D\u043E \u043F\u0430\u043F\u043A\u0430 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430. \u0423\u043A\u0430\u0436\u0438\u0442\u0435 '\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430'.",watchingStarting:"\u0417\u0430\u043F\u0443\u0441\u043A \u0430\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F...",inactiveDetailEnableAutoScan:"\u041F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0430: \u0412\u043A\u043B\u044E\u0447\u0438\u0442\u0435 \u043E\u043F\u0446\u0438\u044E '\u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435'.",inactiveDetailSetPath:"\u041F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0430: \u0423\u043A\u0430\u0436\u0438\u0442\u0435 '\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430'.",serviceUnavailable:"\u0421\u0435\u0440\u0432\u0438\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F \u0444\u0430\u0439\u043B\u043E\u0432 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043B\u043E\u0433\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u0438\u043B\u0438 \u043F\u0435\u0440\u0435\u0437\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u0435 Obsidian."}},commands:{importZip:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u0432\u0440\u0443\u0447\u043D\u0443\u044E",startWatching:"\u041D\u0430\u0447\u0430\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438",stopWatching:"\u041E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435",scanExisting:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0444\u0430\u0439\u043B\u044B",checkStatus:"\u041F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F",debugSettings:"\u041E\u0442\u043B\u0430\u0434\u0438\u0442\u044C \u0442\u0435\u043A\u0443\u0449\u0438\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",scanExistingDesc:"\u041F\u0440\u043E\u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0443\u044E \u043F\u0430\u043F\u043A\u0443 \u0438 \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 ZIP-\u0444\u0430\u0439\u043B\u044B, \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u0435\u0449\u0435 \u043D\u0435 \u0431\u044B\u043B\u0438 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u044B."},notifications:{success:{imported:"\u0423\u0441\u043F\u0435\u0448\u043D\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D: {{fileName}}",watchingStarted:"\u041D\u0430\u0447\u0430\u0442\u043E \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: {{folderPath}}",watchingStopped:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E.",settingsReset:"\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0431\u044B\u043B\u0438 \u0441\u0431\u0440\u043E\u0448\u0435\u043D\u044B \u0434\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E."},error:{invalidZip:"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 ZIP-\u0444\u0430\u0439\u043B: {{fileName}}",missingFiles:"\u0412 ZIP \u043E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u044B\u0435 \u0444\u0430\u0439\u043B\u044B: {{fileName}}",createNote:"\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0437\u0430\u043C\u0435\u0442\u043A\u0438 \u0434\u043B\u044F: {{fileName}} - {{error}}",copyAudio:"\u041E\u0448\u0438\u0431\u043A\u0430 \u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E \u0434\u043B\u044F: {{fileName}} - {{error}}",watchingFailed:"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0447\u0430\u0442\u044C \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435: {{error}}",noFileSelected:"\u0424\u0430\u0439\u043B \u043D\u0435 \u0432\u044B\u0431\u0440\u0430\u043D.",importFailedGeneral:"\u041E\u0448\u0438\u0431\u043A\u0430 \u0438\u043C\u043F\u043E\u0440\u0442\u0430: {{error}}",massImportFailed:"\u041C\u0430\u0441\u0441\u043E\u0432\u044B\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u043D\u0435 \u0443\u0434\u0430\u043B\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043B\u043E\u0433\u0438 \u0434\u043B\u044F \u0434\u0435\u0442\u0430\u043B\u0435\u0439."},warning:{duplicateSkipped:"\u041F\u0440\u043E\u043F\u0443\u0449\u0435\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{fileName}}",duplicateRenamed:"\u041F\u0435\u0440\u0435\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{newName}} \u0438\u0437 {{originalName}}",duplicateOverwritten:"\u041F\u0435\u0440\u0435\u0437\u0430\u043F\u0438\u0441\u0430\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{fileName}}"},info:{processing:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430: {{fileName}}...",scanningFolder:"\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: {{folderPath}}...",scanningFolderComplete:"\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u0438 \u0438\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u044B!"}},statusBar:{idle:"\u041E\u0436\u0438\u0434\u0430\u043D\u0438\u0435",watching:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435: {{path}}",processing:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430...",error:"\u041E\u0448\u0438\u0431\u043A\u0430: {{message}}"},modals:{testImport:{title:"\u0422\u0435\u0441\u0442\u043E\u0432\u044B\u0439 \u0440\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442",placeholder:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 ZIP-\u0430\u0440\u0445\u0438\u0432 Krisp...",button:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0439 \u0444\u0430\u0439\u043B",description:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 ZIP-\u0430\u0440\u0445\u0438\u0432 \u0432\u0440\u0443\u0447\u043D\u0443\u044E, \u0447\u0442\u043E\u0431\u044B \u043F\u0440\u043E\u0442\u0435\u0441\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0441\u0441 \u0438\u043C\u043F\u043E\u0440\u0442\u0430.",importing:"\u0418\u043C\u043F\u043E\u0440\u0442..."},confirmReset:{title:"\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0441\u0431\u0440\u043E\u0441",message:"\u0412\u044B \u0443\u0432\u0435\u0440\u0435\u043D\u044B, \u0447\u0442\u043E \u0445\u043E\u0442\u0438\u0442\u0435 \u0441\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u0432\u0441\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0434\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E? \u042D\u0442\u043E \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043D\u0435\u043B\u044C\u0437\u044F \u0431\u0443\u0434\u0435\u0442 \u043E\u0442\u043C\u0435\u043D\u0438\u0442\u044C.",confirm:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",cancel:"\u041E\u0442\u043C\u0435\u043D\u0430"},logs:{title:"\u041B\u043E\u0433\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430",export:"\u042D\u043A\u0441\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043B\u043E\u0433\u0438",clear:"\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u044C \u043B\u043E\u0433\u0438",close:"\u0417\u0430\u043A\u0440\u044B\u0442\u044C",description:"\u041F\u0440\u043E\u0441\u043C\u043E\u0442\u0440 \u043D\u0435\u0434\u0430\u0432\u043D\u0438\u0445 \u043B\u043E\u0433\u043E\u0432 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438 \u0434\u043B\u044F \u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u043D\u0435\u043F\u043E\u043B\u0430\u0434\u043E\u043A.",noLogs:"\u041B\u043E\u0433\u043E\u0432 \u043F\u043E\u043A\u0430 \u043D\u0435\u0442.",copy:"\u041A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043B\u043E\u0433\u0438",copiedNotice:"\u041B\u043E\u0433\u0438 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u044B \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430!",clearedNotice:"\u041B\u043E\u0433\u0438 \u043E\u0447\u0438\u0449\u0435\u043D\u044B!"}},settingsInfoTooltips:{githubRepoTooltip:"\u041F\u043E\u0441\u0435\u0442\u0438\u0442\u044C \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439 GitHub",reportIssueTooltip:"\u0421\u043E\u043E\u0431\u0449\u0438\u0442\u044C \u043E \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0435",developer:"\u0420\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u043E: {{author}}",supportDevelopment:"\u0415\u0441\u043B\u0438 \u0432\u044B \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u0435 \u044D\u0442\u043E\u0442 \u043F\u043B\u0430\u0433\u0438\u043D \u043F\u043E\u043B\u0435\u0437\u043D\u044B\u043C, \u0440\u0430\u0441\u0441\u043C\u043E\u0442\u0440\u0438\u0442\u0435 \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438 \u0435\u0433\u043E \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438: ",donateLinkText:"\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0430\u0432\u0442\u043E\u0440\u0430",pluginDescription:"\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435: {{description}}",resetSettingsDesc:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u0432\u0441\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u043A \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\u043C \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E.",supportDevelopmentPlaceholder:"\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0435 \u0434\u043B\u044F \u044D\u0442\u043E\u0433\u043E \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u043E\u043C."}},gt=class{constructor(t){this.currentLanguage="en";this.strings={en:me,ru:fe};t&&(this.currentLanguage=t)}setLanguage(t){this.currentLanguage=t}getCurrentLanguage(){return this.currentLanguage}t(t,e){let s=t.split("."),i=this.getValueByKeys(this.strings[this.currentLanguage],s),n=this.currentLanguage!=="en"?this.getValueByKeys(this.strings.en,s):null,r=i!=null?i:n;return typeof r!="string"?`[Missing: ${t}]`:this.replaceVariables(r,e)}getValueByKeys(t,e){let s=t;for(let i of e)if(s&&typeof s=="object"&&i in s)s=s[i];else return null;return s}replaceVariables(t,e){if(!e)return t;let s=t;for(let[i,n]of Object.entries(e))s=s.replace(new RegExp(`{{${i}}}`,"g"),n);return s}getSettingsStrings(){return this.strings[this.currentLanguage].settings}getCommandStrings(){return this.strings[this.currentLanguage].commands}getNotificationStrings(){return this.strings[this.currentLanguage].notifications}getStatusBarStrings(){return this.strings[this.currentLanguage].statusBar}getModalStrings(){return this.strings[this.currentLanguage].modals}};var yt=class extends E.PluginSettingTab{constructor(e,s){super(e,s);this.plugin=s,this.plugin.settingsTab=this;let i=this.plugin.settingsManager.getSetting("language")||"en";this.localization=s.localizationService||new gt(i)}updateLanguage(e){this.localization.setLanguage(e),this.display()}display(){let{containerEl:e}=this;e.empty(),e.createEl("h1",{text:this.localization.t("settings.title",{fallback:"Krisp Notes Importer Settings"})}),this.renderCurrentStatus(e),this.renderLanguageSetting(e),this.renderCoreAutomationSettings(e),this.renderStorageSettings(e),this.renderNamingAndTemplateSettings(e),this.renderImportBehaviorSettings(e),this.renderManualOperationsAndDiagnostics(e),this.renderAboutPlugin(e)}renderCurrentStatus(e){let s=e.createDiv({cls:"krisp-importer-status-section"});s.createEl("h2",{text:this.localization.t("settings.status.title",{fallback:"\u{1F4CA} Current Status"})});let i=s.createEl("div",{cls:"krisp-status-messages"});i.style.padding="10px",i.style.backgroundColor="var(--background-secondary)",i.style.borderRadius="5px",i.style.marginBottom="15px",i.style.borderLeft="4px solid var(--text-muted)";let n=[],r="var(--color-grey)";if(this.plugin.fileWatcherService&&this.plugin.settingsManager){let a=this.plugin.fileWatcherService.isCurrentlyWatching(),g=this.plugin.fileWatcherService.getWatchedPath(),h=this.plugin.settingsManager.getSetting("autoScanEnabled");a&&g?(n.push(this.localization.t("settings.status.watchingActive",{path:g})),r="var(--color-green)"):h&&(!g||g.trim()==="")?(n.push(this.localization.t("settings.status.watchingWarningFolderMissing")),r="var(--color-yellow)"):h&&g&&!a?(n.push(this.localization.t("settings.status.watchingStarting")),r="var(--color-blue)"):(n.push(this.localization.t("settings.status.watchingInactive")),r="var(--color-red)",h||n.push(`- ${this.localization.t("settings.status.inactiveDetailEnableAutoScan")}`),(!g||g.trim()==="")&&n.push(`- ${this.localization.t("settings.status.inactiveDetailSetPath")}`))}else n.push(this.localization.t("settings.status.serviceUnavailable")),r="var(--color-orange)";i.empty(),n.forEach(a=>{i.createEl("p",{text:a,cls:"krisp-status-message-line"}).style.margin="3px 0"}),i.style.borderLeftColor=r;let l="krisp-importer-status-styles";if(!document.getElementById(l)){let a=document.createElement("style");a.id=l,a.textContent=`
                .krisp-importer-status-section { margin-bottom: 20px; }
                .krisp-importer-status-section h2 { margin-bottom: 8px; }
            `,e.appendChild(a)}}renderLanguageSetting(e){new E.Setting(e).setName(this.localization.t("settings.fields.language.name",{fallback:"Interface Language"})).setDesc(this.localization.t("settings.fields.language.desc",{fallback:"Choose the language for the plugin interface"})).addDropdown(s=>s.addOption("en","English").addOption("ru","\u0420\u0443\u0441\u0441\u043A\u0438\u0439").setValue(this.plugin.settingsManager.getSetting("language")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("language",i),this.updateLanguage(i)}))}renderCoreAutomationSettings(e){e.createEl("h2",{text:this.localization.t("settings.sections.coreAutomation",{fallback:"\u{1F4C2} Core: Watching & Automation"})}),new E.Setting(e).setName(this.localization.t("settings.fields.watchedFolder.name",{fallback:"Watched Folder Path"})).setDesc(this.localization.t("settings.fields.watchedFolder.desc",{fallback:"Full path to the folder where Krisp saves ZIP archives"})).addText(s=>s.setPlaceholder("/Users/username/Downloads/Krisp").setValue(this.plugin.settingsManager.getSetting("watchedFolderPath")).onChange(async i=>{let n=this.plugin.settingsManager.getSetting("watchedFolderPath"),r=i.trim();await this.plugin.settingsManager.updateSetting("watchedFolderPath",r),this.plugin.settingsManager.getSetting("autoScanEnabled")&&this.plugin.fileWatcherService&&(r&&r!==""?(n&&n.trim()!==""&&n.trim()!==r&&this.plugin.fileWatcherService.isCurrentlyWatching()&&this.plugin.fileWatcherService.getWatchedPath()===n.trim()&&await this.plugin.fileWatcherService.stopWatching(),await this.plugin.fileWatcherService.startWatching(r)):this.plugin.fileWatcherService.isCurrentlyWatching()&&await this.plugin.fileWatcherService.stopWatching()),this.display()})),new E.Setting(e).setName(this.localization.t("settings.fields.autoScan.name")).setDesc(this.localization.t("settings.fields.autoScan.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("autoScanEnabled")).onChange(async i=>{if(await this.plugin.settingsManager.updateSetting("autoScanEnabled",i),this.plugin.fileWatcherService)if(i){let n=this.plugin.settingsManager.getSetting("watchedFolderPath");n&&n.trim()!==""&&await this.plugin.fileWatcherService.startWatching(n.trim())}else await this.plugin.fileWatcherService.stopWatching();this.display()}))}renderStorageSettings(e){e.createEl("h2",{text:this.localization.t("settings.sections.storage",{fallback:"\u{1F5C4}\uFE0F Obsidian Storage"})}),new E.Setting(e).setName(this.localization.t("settings.fields.notesFolder.name",{fallback:"Notes Folder"})).setDesc(this.localization.t("settings.fields.notesFolder.desc",{fallback:"Folder in your Obsidian vault for saving meeting notes"})).addText(s=>s.setPlaceholder("KrispNotes/Notes").setValue(this.plugin.settingsManager.getSetting("notesFolderPath")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("notesFolderPath",i.trim())})),new E.Setting(e).setName(this.localization.t("settings.fields.attachmentsFolder.name")).setDesc(this.localization.t("settings.fields.attachmentsFolder.desc")).addText(s=>s.setPlaceholder("KrispNotes/Attachments").setValue(this.plugin.settingsManager.getSetting("attachmentsFolderPath")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("attachmentsFolderPath",i.trim())}))}renderNamingAndTemplateSettings(e){e.createEl("h2",{text:this.localization.t("settings.sections.namingAndTemplates",{fallback:"\u{1F3A8} Appearance & Naming"})}),new E.Setting(e).setName(this.localization.t("settings.fields.noteNameTemplate.name",{fallback:"Note Name Template"})).setDesc(this.localization.t("settings.fields.noteNameTemplate.desc",{fallback:"Template for naming note files. Available variables: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"})).addText(s=>s.setPlaceholder("{{YYYY}}-{{MM}}-{{DD}}_{{HHMM}}_{{meetingTitle}}").setValue(this.plugin.settingsManager.getSetting("noteNameTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("noteNameTemplate",i)})),new E.Setting(e).setName(this.localization.t("settings.fields.attachmentNameTemplate.name")).setDesc(this.localization.t("settings.fields.attachmentNameTemplate.desc")).addText(s=>s.setPlaceholder("{{YYYY}}-{{MM}}-{{DD}}_{{meetingTitle}}_audio").setValue(this.plugin.settingsManager.getSetting("attachmentNameTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("attachmentNameTemplate",i)})),new E.Setting(e).setName(this.localization.t("settings.fields.noteContentTemplate.name")).setDesc(this.localization.t("settings.fields.noteContentTemplate.desc")).addTextArea(s=>{s.setValue(this.plugin.settingsManager.getSetting("noteContentTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("noteContentTemplate",i)}),s.inputEl.rows=10,s.inputEl.style.width="100%",s.inputEl.style.minHeight="150px"}).addButton(s=>s.setButtonText(this.localization.t("settings.buttons.restoreTemplate")).onClick(async()=>{await this.plugin.settingsManager.updateSetting("noteContentTemplate",A.noteContentTemplate),this.display(),new E.Notice(this.localization.t("notifications.success.templateRestored",{fallback:"Default template restored."}))})).addButton(s=>s.setButtonText(this.localization.t("settings.buttons.restoreImprovedTemplate")).setClass("mod-cta").onClick(async()=>{let{IMPROVED_NOTE_TEMPLATE:i}=await Promise.resolve().then(()=>(ft(),Mt));await this.plugin.settingsManager.updateSetting("noteContentTemplate",i),this.display(),new E.Notice("\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D \u0443\u043B\u0443\u0447\u0448\u0435\u043D\u043D\u044B\u0439 \u0448\u0430\u0431\u043B\u043E\u043D \u0441 \u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E\u0439 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0435\u0439 \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438!",5e3)})).addButton(s=>s.setButtonText(this.localization.t("settings.buttons.restoreCompactTemplate")).onClick(async()=>{let{COMPACT_NOTE_TEMPLATE:i}=await Promise.resolve().then(()=>(ft(),Mt));await this.plugin.settingsManager.updateSetting("noteContentTemplate",i),this.display(),new E.Notice("\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D \u043A\u043E\u043C\u043F\u0430\u043A\u0442\u043D\u044B\u0439 \u0448\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u043C\u0438\u043D\u0438\u043C\u0430\u043B\u0438\u0441\u0442\u043E\u0432!",5e3)}))}renderImportBehaviorSettings(e){e.createEl("h2",{text:this.localization.t("settings.sections.importBehavior",{fallback:"\u2699\uFE0F Import Behavior"})}),new E.Setting(e).setName(this.localization.t("settings.fields.duplicateStrategy.name")).setDesc(this.localization.t("settings.fields.duplicateStrategy.desc")).addDropdown(s=>s.addOption("skip",this.localization.t("settings.fields.duplicateStrategy.options.skip")).addOption("overwrite",this.localization.t("settings.fields.duplicateStrategy.options.overwrite")).addOption("rename",this.localization.t("settings.fields.duplicateStrategy.options.rename")).setValue(this.plugin.settingsManager.getSetting("duplicateStrategy")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("duplicateStrategy",i)})),new E.Setting(e).setName(this.localization.t("settings.fields.openNoteAfterImport.name")).setDesc(this.localization.t("settings.fields.openNoteAfterImport.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("openNoteAfterImport")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("openNoteAfterImport",i)})),new E.Setting(e).setName(this.localization.t("settings.fields.deleteZipAfterImport.name")).setDesc(this.localization.t("settings.fields.deleteZipAfterImport.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("deleteZipAfterImport")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("deleteZipAfterImport",i)}))}renderManualOperationsAndDiagnostics(e){var s;e.createEl("h2",{text:this.localization.t("settings.sections.manualOperations",{fallback:"\u{1F6E0}\uFE0F Manual Operations & Diagnostics"})}),new E.Setting(e).setName(this.localization.t("settings.buttons.testImport",{fallback:"Test Manual Import"})).setDesc(this.localization.t("modals.testImport.description",{fallback:"Manually select a ZIP file to test the import process."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.testImport",{fallback:"Select & Import File"})).onClick(()=>{new xt(this.plugin,this.localization).open()})),(s=this.plugin.fileWatcherService)!=null&&s.scanExistingFiles&&new E.Setting(e).setName(this.localization.t("commands.scanExisting",{fallback:"Process All Existing Files"})).setDesc(this.localization.t("commands.scanExistingDesc",{fallback:"Scan the watched folder and import all existing ZIP files that haven't been processed yet."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.massImport",{fallback:"Scan and Import All"})).onClick(async()=>{var n;if((n=this.plugin.fileWatcherService)!=null&&n.scanExistingFiles){let r=this.plugin.settingsManager.getSetting("watchedFolderPath");if(!r||r.trim()===""){new E.Notice(this.localization.t("settings.errors.watchedFolderMissing",{fallback:"Watched folder path is not specified."}));return}try{await this.plugin.fileWatcherService.scanExistingFiles(),new E.Notice(this.localization.t("notifications.info.scanningFolderComplete",{fallback:"Folder scan and import complete!"}))}catch(l){console.error("Error during mass import:",l),new E.Notice(this.localization.t("notifications.error.massImportFailed",{fallback:"Mass import failed. Check logs."}))}}else new E.Notice(this.localization.t("settings.status.serviceUnavailable",{fallback:"File Watcher service is not available."}))})),new E.Setting(e).setName(this.localization.t("settings.buttons.showLogs",{fallback:"Show Logs"})).setDesc(this.localization.t("modals.logs.description",{fallback:"View recent activity logs for troubleshooting."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.showLogs",{fallback:"Open Logs"})).onClick(()=>{this.plugin.loggingService?new kt(this.app,this.plugin,this.localization).open():new E.Notice(this.localization.t("settings.status.serviceUnavailable",{fallback:"Logging service not available."}))})),new E.Setting(e).setName(this.localization.t("settings.buttons.resetSettings",{fallback:"Reset Settings"})).setDesc(this.localization.t("settingsInfoTooltips.resetSettingsDesc",{fallback:"Reset all plugin settings to their default values."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.resetSettings",{fallback:"Reset to Defaults"})).setClass("mod-warning").onClick(()=>{new $t(this.app,this.plugin,this.localization).open()}))}renderAboutPlugin(e){var h;e.createEl("h2",{text:this.localization.t("settings.sections.aboutPlugin",{fallback:"\u2139\uFE0F About Plugin"})});let s=this.plugin.manifest,i=s.author||"Unknown Author",n=s.id||"plugin-repo",l=`https://github.com/${((h=s.authorUrl)==null?void 0:h.split("/").pop())||i.toLowerCase().replace(/\s+/g,"-")}/${n}`,a=`${l}/issues`;new E.Setting(e).setName(this.localization.t("settings.info.version",{fallback:"Plugin Version"})).setDesc(s.version).addExtraButton(f=>f.setIcon("github").setTooltip(this.localization.t("settingsInfoTooltips.githubRepoTooltip",{fallback:"Visit GitHub Repository"})).onClick(()=>{window.open(l,"_blank")})).addExtraButton(f=>f.setIcon("bug").setTooltip(this.localization.t("settingsInfoTooltips.reportIssueTooltip",{fallback:"Report an Issue"})).onClick(()=>{window.open(a,"_blank")})),e.createEl("p",{text:this.localization.t("settingsInfoTooltips.developer",{fallback:`Developed by: ${i}`,author:i})});let g=e.createEl("p");g.appendText(this.localization.t("settingsInfoTooltips.supportDevelopment",{fallback:"If you find this plugin useful, consider supporting its development. More information can be found on the plugin's GitHub page: "})),g.createEl("a",{text:this.localization.t("settingsInfoTooltips.githubRepoTooltip",{fallback:"Visit GitHub Repository"}),href:l,attr:{target:"_blank",rel:"noopener noreferrer"}}),s.description&&e.createEl("p",{text:this.localization.t("settingsInfoTooltips.pluginDescription",{fallback:`Description: ${s.description}`,description:s.description})})}},xt=class extends E.Modal{constructor(e,s){super(e.app);this.filePath="";this.inputEl=null;this.keypressHandler=null;this.plugin=e,this.localization=s}onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:this.localization.t("modals.manualImport.title",{fallback:"Manual ZIP Import"})}),e.createEl("p",{text:this.localization.t("modals.manualImport.desc",{fallback:"Enter the full path to the .zip file you want to import."})}),this.inputEl=e.createEl("input",{type:"text",placeholder:"/path/to/your-meeting.zip"}),this.inputEl.style.width="100%",this.inputEl.style.marginBottom="10px",this.inputEl.addEventListener("change",r=>this.filePath=r.target.value.trim());let s=e.createDiv({cls:"modal-button-container"}),i=s.createEl("button",{text:this.localization.t("modals.manualImport.buttonImport",{fallback:"Import"}),cls:"mod-cta"});i.onclick=async()=>{if(this.filePath){if(this.plugin.processingService&&this.plugin.settingsManager)try{new E.Notice(this.localization.t("notifications.info.processing",{file:this.filePath.split("/").pop()||this.filePath}),5e3);let r=this.plugin.settingsManager.getAllSettings();await this.plugin.processingService.processZipFile(this.filePath,r),new E.Notice(this.localization.t("notifications.success.manualImportComplete",{fallback:"Manual import complete."}),5e3)}catch(r){new E.Notice(`${this.localization.t("notifications.error.manualImportFailed",{fallback:"Manual import failed."})}: ${r.message}`,7e3),console.error("[Krisp Importer] Manual import error:",r)}else new E.Notice(this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"Processing or Settings Service",fallback:"Required service not available."}),5e3);this.close()}else new E.Notice(this.localization.t("modals.manualImport.errorNoPath",{fallback:"File path cannot be empty."}),5e3)},s.createEl("button",{text:this.localization.t("modals.confirmReset.cancel",{fallback:"Cancel"})}).onclick=()=>this.close(),this.inputEl.focus(),this.keypressHandler=r=>{r.key==="Enter"&&i.click()},this.inputEl.addEventListener("keypress",this.keypressHandler);let n="krisp-modal-styles";if(!document.getElementById(n)){let r=document.createElement("style");r.id=n,r.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; }
            `,e.appendChild(r)}}onClose(){var e;(e=this.inputEl)==null||e.removeEventListener("keypress",this.keypressHandler),this.inputEl=null,this.keypressHandler=null,this.contentEl.empty()}},kt=class extends E.Modal{constructor(e,s,i){super(e);this.plugin=s,this.localization=i}onOpen(){let{contentEl:e}=this;if(e.createEl("h2",{text:this.localization.t("modals.logs.title",{fallback:"Plugin Logs"})}),!this.plugin.loggingService){e.createEl("p",{text:this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"LoggingService",fallback:"Logging service is not available."})});return}let s=this.plugin.loggingService.getLogStats(),i=e.createDiv({cls:"krisp-log-stats"});i.createEl("p",{text:`${this.localization.t("modals.logs.totalEntries",{fallback:"Total entries"})}: ${s.total}`});let n=Object.entries(s.byLevel).map(([h,f])=>`${h.toUpperCase()}: ${f}`).join(", ");i.createEl("p",{text:`${this.localization.t("modals.logs.byLevel",{fallback:"By level"})}: ${n||this.localization.t("modals.logs.noEntries",{fallback:"No entries"})}`});let r=e.createDiv({cls:"modal-button-container"});r.style.justifyContent="flex-start",r.createEl("button",{text:this.localization.t("modals.logs.copy",{fallback:"Copy"}),cls:"mod-cta"}).onclick=async()=>{this.plugin.loggingService&&(await this.plugin.loggingService.copyLogsToClipboard(),new E.Notice(this.localization.t("modals.logs.copiedNotice",{fallback:"Logs copied to clipboard."}),3e3))},r.createEl("button",{text:this.localization.t("modals.logs.clear",{fallback:"Clear"}),cls:"mod-warning"}).onclick=()=>{this.plugin.loggingService&&(this.plugin.loggingService.clearLogs(),this.close(),new E.Notice(this.localization.t("modals.logs.clearedNotice",{fallback:"Logs cleared."}),3e3))},r.createEl("button",{text:this.localization.t("modals.logs.close",{fallback:"Close"})}).onclick=()=>this.close();let l=e.createDiv({cls:"krisp-logs-display"}),a=this.plugin.loggingService.getRecentLogs(100);if(a.length===0)l.textContent=this.localization.t("modals.logs.noEntries",{fallback:"No log entries."});else{let h=a.map(f=>{let T=f.timestamp.toLocaleString(),b=f.level===0?"DEBUG":f.level===1?"INFO":f.level===2?"WARN":"ERROR";return`[${T}] [${b}] [${f.category}] ${f.message}`}).join(`
`);l.textContent=h}let g="krisp-logs-modal-styles";if(!document.getElementById(g)){let h=document.createElement("style");h.id=g,h.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; } /* Default: flex-end */
                .krisp-log-stats { margin-bottom: 15px; padding: 10px; background-color: var(--background-secondary); border-radius: 5px; }
                .krisp-logs-display { max-height: 400px; overflow: auto; border: 1px solid var(--background-modifier-border); border-radius: 5px; padding: 10px; background-color: var(--background-primary-alt); font-family: monospace; font-size: 0.8em; white-space: pre-wrap; margin-top:15px; }
            `,e.appendChild(h)}}onClose(){this.contentEl.empty()}},$t=class extends E.Modal{constructor(e,s,i){super(e);this.plugin=s,this.localization=i}onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:this.localization.t("modals.confirmReset.title")}),e.createEl("p",{text:this.localization.t("modals.confirmReset.message")});let s=e.createDiv({cls:"modal-button-container"});s.createEl("button",{text:this.localization.t("modals.confirmReset.confirm"),cls:"mod-warning"}).onclick=async()=>{if(this.plugin.settingsManager&&this.plugin.settingsTab)try{for(let[n,r]of Object.entries(A))await this.plugin.settingsManager.updateSetting(n,r);new E.Notice(this.localization.t("notifications.success.settingsReset"),5e3),this.plugin.settingsTab.display()}catch(n){new E.Notice(`${this.localization.t("notifications.error.settingsResetFailed",{fallback:"Failed to reset settings."})}: ${n.message}`,7e3),console.error("[Krisp Importer] Settings reset error:",n)}else new E.Notice(this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"SettingsManager or SettingsTab",fallback:"Required services not available for reset."}),5e3);this.close()},s.createEl("button",{text:this.localization.t("modals.confirmReset.cancel",{fallback:"Cancel"})}).onclick=()=>this.close();let i="krisp-modal-styles";if(!document.getElementById(i)){let n=document.createElement("style");n.id=i,n.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; }
            `,e.appendChild(n)}}onClose(){this.contentEl.empty()}};var nt=require("obsidian");var ee=ct(te()),k=require("fs"),V=require("obsidian"),ht=ct(require("path")),bt=class{constructor(t){this.app=t}async extract(t,e){if(!t||typeof t!="string"||t.trim()==="")return new V.Notice("\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043F\u0443\u0442\u044C \u043A ZIP-\u0444\u0430\u0439\u043B\u0443"),null;if(!e||typeof e!="string"||e.trim()==="")return new V.Notice("\u041D\u0435\u0432\u0435\u0440\u043D\u043E\u0435 \u0438\u043C\u044F \u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0439 \u043F\u0430\u043F\u043A\u0438"),null;if(!(0,k.existsSync)(t))return new V.Notice(`ZIP-\u0444\u0430\u0439\u043B \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D: ${t}`),null;if(!t.toLowerCase().endsWith(".zip"))return new V.Notice(`\u0424\u0430\u0439\u043B \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F ZIP-\u0430\u0440\u0445\u0438\u0432\u043E\u043C: ${t}`),null;try{let i=require("os").tmpdir(),n=ht.join(i,"krisp-importer-temp",e+"_"+Date.now()),r=ht.join(i,"krisp-importer-temp");(0,k.existsSync)(r)||(0,k.mkdirSync)(r,{recursive:!0}),(0,k.existsSync)(n)||(0,k.mkdirSync)(n,{recursive:!0});let l=new ee.async({file:t});try{let a=await l.entries();for(let[g,h]of Object.entries(a))if(!h.isDirectory){let f=(0,V.normalizePath)(ht.join(n,g)),T=ht.dirname(f);(0,k.existsSync)(T)||(0,k.mkdirSync)(T,{recursive:!0});let b=await l.entryData(g);await k.promises.writeFile(f,b)}return console.log(`Successfully extracted to ${n}`),n}finally{await l.close()}}catch(s){return new V.Notice("Error extracting ZIP file: "+s.message),console.error("Error extracting ZIP file:",s),null}}async cleanup(t){if(t)try{(0,k.existsSync)(t)&&((0,k.rmSync)(t,{recursive:!0,force:!0}),console.log(`Successfully cleaned up temp directory: ${t}`))}catch(e){new V.Notice("Error cleaning up temporary directory: "+e.message),console.error("Error cleaning up temporary directory:",e)}}};var ut=require("fs"),ie=require("readline"),Nt=class{constructor(){}parseMeetingNotes(t,e,s){var h;typeof t!="string"&&(console.warn("[NoteParser] notesContent is not a string, using empty string"),t=""),typeof e!="string"&&(console.warn("[NoteParser] transcriptContent is not a string, using empty string"),e=""),(!s||typeof s!="string")&&(console.warn("[NoteParser] meetingFolderName is invalid, using default name"),s="Unknown Meeting");let i={},n=s;n=n.replace(/\s*\([0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}\)$/,""),n=n.replace(new RegExp(`-[0-9a-fA-F]{${H.MIN_UUID_LENGTH}}$`),""),n=n.replace(/\s*-\s*[A-Za-z]+(?:\s+|,\s*)[0-9]{1,2}(?:,\s*[0-9]{4})?(?:\s+[0-9]{1,2}[0-9]{2}(?:\s*(?:AM|PM))?)?$/,"").trim(),i.meetingTitle=n;let r=(h=t.split(`
`)[0])==null?void 0:h.trim(),l=null,a=null;if(r&&(l=this.extractDateFromString(r),a=this.extractTimeFromString(r)),l||(l=this.extractDateFromString(s)),!a&&(a=this.extractTimeFromString(s),a==="00:00"&&e)){let f=e.match(/(\d{2}:\d{2}(?::\d{2})?)/)}i.date=l||void 0,i.time=a||void 0,i.summary=this.extractSection(t,"Summary"),i.actionItems=this.extractSection(t,"Action Items",!0),i.keyPoints=this.extractSection(t,"Key Points",!0),i.actionItems&&i.actionItems.length>0&&(i.actionItems=i.actionItems.map(f=>this.normalizeActionItemDate(f)));let g=this.parseTranscript(e);return i.participants=g.participants,i.rawTranscript=e,i.formattedTranscript=g.formattedTranscript,i.duration=g.duration,i.participantsCount=g.participants.length,i.transcriptWords=this.countWords(e),i.mostActiveSpeaker=this.findMostActiveSpeaker(e),i.participantsStats=this.generateParticipantsStats(e,g.participants),i.extractedEntities=this.extractEntities(t,e),i.relatedLinks=this.generateRelatedLinks(t,n),i.importDate=new Date().toLocaleString("ru-RU",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit"}),i.smartTags=this.generateSmartTags(t,e,n),i.tags=[...i.smartTags||[]],i}async parseTranscriptStreaming(t,e){let s=(e==null?void 0:e.chunkSize)||R.LARGE_FILE_CHUNK_SIZE,i=(e==null?void 0:e.maxMemoryUsage)||R.MAX_TRANSCRIPT_MEMORY_MB*1024*1024;return new Promise((n,r)=>{let l=new Set,a=[],g="00:00:00",h=0,f=0,T=(0,ut.createReadStream)(t,{encoding:"utf8",highWaterMark:s}),b=(0,ie.createInterface)({input:T,crlfDelay:1/0}),I=/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/,P="",S=[];b.on("line",w=>{let N=w.trim();if(N==="")return;let $=Buffer.byteLength(N,"utf8");if(h+$>i){console.warn(`[NoteParser] Streaming stopped at ${Math.round(h/1024/1024)}MB memory limit`),b.close();return}if(f++,h+=$,e!=null&&e.progressCallback&&f%1e3===0){let x=Math.round(h/1024/1024);e.progressCallback(x)}let W=N.match(I);if(W){if(P&&S.length>0){let U=S.join(`
`);a.push(`[[${g}]] **${P}**: ${U}`),S=[]}P=W[1].trim();let x=W[2];P&&!P.toLowerCase().includes("transcription service")&&l.add(P),g=x.length===5?`${x}:00`:x}else P?N.toLowerCase()==="\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442..."?S.push(`_${N}_`):S.push(N):a.push(N)}),b.on("close",()=>{if(P&&S.length>0){let N=S.join(`
`);a.push(`[[${g}]] **${P}**: ${N}`)}let w="N/A";g!=="00:00:00"&&(w=g),console.log(`[NoteParser] Streaming completed: ${f} lines, ${Math.round(h/1024/1024)}MB processed`),n({participants:Array.from(l),formattedTranscript:a.join(`

`),duration:w})}),b.on("error",w=>{r(new Error(`Failed to stream transcript: ${w.message}`))}),T.on("error",w=>{r(new Error(`Failed to read transcript file: ${w.message}`))})})}async parseLargeFileContent(t,e){try{let s=await ut.promises.stat(t);return s.size<=e?await ut.promises.readFile(t,"utf-8"):(console.warn(`[NoteParser] File ${t} is too large (${Math.round(s.size/1024/1024)}MB), reading first ${Math.round(e/1024/1024)}MB`),new Promise((i,n)=>{let r=[],l=0,a=(0,ut.createReadStream)(t,{encoding:"utf8",highWaterMark:R.STREAMING_BUFFER_SIZE});a.on("data",g=>{let h=Buffer.byteLength(g,"utf8");if(l+h>e){let f=e-l;if(f>0){let T=g.substring(0,Math.floor(g.length*f/h));r.push(T)}a.destroy();return}r.push(g),l+=h}),a.on("end",()=>{i(r.join(""))}),a.on("close",()=>{i(r.join(""))}),a.on("error",g=>{n(new Error(`Failed to read large file: ${g.message}`))})}))}catch(s){throw new Error(`Failed to parse large file ${t}: ${s.message}`)}}parseTranscript(t){let e=t.split(`
`),s=new Set,i=[],n="00:00:00",r=/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/;for(let a=0;a<e.length;a++){let h=e[a].trim();if(h==="")continue;let f=h.match(r);if(f){let T=f[1].trim(),b=f[2];T&&!T.toLowerCase().includes("transcription service")&&!T.toLowerCase().includes("meeting summary")&&s.add(T);let I=b.length===5?`${b}:00`:b;n=I;let P=[],S=a+1;for(;S<e.length;){let w=e[S].trim();if(w===""){S++;continue}if(r.test(w))break;w.toLowerCase()==="\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442..."?P.push(`_${w}_`):P.push(w),S++}if(P.length>0){let w=P.join(`
`);i.push(`[[${I}]] **${T}**: ${w}`)}else i.push(`[[${I}]] **${T}**:`);a=S-1}else h.toLowerCase()==="\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442..."?i.push(`_${h}_`):i.length>0?i[i.length-1]+=`
${h}`:i.push(h)}let l="N/A";return n!=="00:00:00"&&(l=n),{participants:Array.from(s),formattedTranscript:i.join(`

`),duration:l}}extractDateFromString(t){if(!t)return null;let e,s,i,n=t.match(/(\d{4})-(\d{2})-(\d{2})/);if(n&&(e=parseInt(n[1],10),s=parseInt(n[2],10),i=parseInt(n[3],10),s>=1&&s<=12&&i>=1&&i<=31))return`${String(e).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`;if(n=t.match(/([A-Za-z]+)\s+(\d{1,2}),\s+(\d{4})/),n){let r=n[1];if(i=parseInt(n[2],10),e=parseInt(n[3],10),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(e).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}if(n=t.match(/([A-Za-z]+),\s*(\d{1,2})(?!\s*,\s*\d{4})/),n){let r=n[1];if(i=parseInt(n[2],10),e=new Date().getFullYear(),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(e).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}if(n=t.match(/(\d{1,2})\s+([A-Za-z]+)\s+(\d{4})/),n){i=parseInt(n[1],10);let r=n[2];if(e=parseInt(n[3],10),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(e).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}return null}extractTimeFromString(t){if(!t)return null;let e=t.match(/(\d{2}):(\d{2})(?!\s*(?:AM|PM))/);if(e){let s=parseInt(e[1],10),i=parseInt(e[2],10);if(s>=0&&s<=23&&i>=0&&i<=59)return`${String(s).padStart(2,"0")}:${String(i).padStart(2,"0")}`}if(e=t.match(/(\d{1,2}):(\d{2})\s*(AM|PM)/i),e){let s=parseInt(e[1],10),i=parseInt(e[2],10),n=e[3].toUpperCase();if(s>=1&&s<=12&&i>=0&&i<=59)return n==="PM"&&s!==12?s+=12:n==="AM"&&s===12&&(s=0),`${String(s).padStart(2,"0")}:${String(i).padStart(2,"0")}`}return"00:00"}extractSection(t,e,s=!1){var h;let i=t.split(`
`),n=[],r=!1,l=new RegExp(`^${e}\\s*$`,"i"),a=["Summary","Action Items","Key Points","Transcript","Transcription"],g=new RegExp(`^(${a.filter(f=>f.toLowerCase()!==e.toLowerCase()).join("|")})\\s*$`,"i");for(let f=0;f<i.length;f++){let b=i[f].trim();if(l.test(b)){r=!0;continue}if(r){if(g.test(b))break;if(b===""){if(e==="Summary"&&n.length>0)n.push("");else if(s){let I=(h=i[f+1])==null?void 0:h.trim();if(!I||g.test(I))break}continue}if(e==="Summary")n.push(b);else if(s){let I=b;I.startsWith("- ")||I.startsWith("* ")?I=I.substring(2).trim():I.match(/^\d+\.\s/)&&(I=I.replace(/^\d+\.\s/,"").trim()),I&&n.push(I)}else n.push(b)}}return n}escapeRegExp(t){return t.replace(/[.*+?^${}()|[\\\]]/g,"\\$&")}isLikelyDateOrTime(t){if(!t)return!1;let e=/^(\d{4}-\d{2}-\d{2}|[A-Za-z]+\s+\d{1,2}(?:,\s*\d{4})?)$/i,s=/^(\d{1,2}:\d{2}(\s*[APap][Mm])?)$/;return e.test(t)||s.test(t)}isSectionHeader(t){if(!t)return!1;let e=t.toLowerCase();return e.startsWith("summary")||e.startsWith("action items")||e.startsWith("key points")||e.startsWith("transcript")}monthNameToNumber(t){if(!t)return null;let e=t.toLowerCase().substring(0,3);return{jan:1,feb:2,mar:3,apr:4,may:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,\u044F\u043D\u0432:1,\u0444\u0435\u0432:2,\u043C\u0430\u0440:3,\u0430\u043F\u0440:4,\u043C\u0430\u044F:5,\u0438\u044E\u043D:6,\u0438\u044E\u043B:7,\u0430\u0432\u0433:8,\u0441\u0435\u043D:9,\u043E\u043A\u0442:10,\u043D\u043E\u044F:11,\u0434\u0435\u043A:12}[e]||null}countWords(t){return t?t.trim().split(/\s+/).filter(e=>e.length>0).length:0}findMostActiveSpeaker(t){let e=t.split(`
`),s={},i="";for(let l of e){let a=l.trim();if(a==="")continue;let g=a.match(/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/);if(g)i=g[1].trim(),s[i]||(s[i]=0);else if(i){let h=this.countWords(a);s[i]+=h}}let n="",r=0;for(let[l,a]of Object.entries(s))a>r&&(r=a,n=l);return n||"N/A"}generateParticipantsStats(t,e){let s=t.split(`
`),i={},n={},r="";for(let g of e)i[g]=0,n[g]=0;for(let g of s){let h=g.trim();if(h==="")continue;let f=h.match(/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/);if(f)r=f[1].trim(),n[r]!==void 0&&n[r]++;else if(r&&i[r]!==void 0){let T=this.countWords(h);i[r]+=T}}let l=[],a=Object.values(i).reduce((g,h)=>g+h,0);for(let g of e){let h=i[g]||0,f=n[g]||0,T=a>0?(h/a*100).toFixed(1):"0";l.push(`- **${g}**: ${h} \u0441\u043B\u043E\u0432 (${T}%), ${f} \u0432\u044B\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u0439`)}return l.length>0?["### \u{1F4CA} \u0410\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432","",...l]:[]}extractEntities(t,e){let s=[],i=`${t} ${e}`.substring(0,R.ENTITIES_TEXT_LIMIT),n={projects:/(?:проект|project|система|платформа|сервис|приложение|продукт)\s+([А-Яа-я\w\s]{3,30})/gi,companies:/(?:компания|компании|организация|корпорация|фирма|бизнес)\s+([А-Яа-я\w\s]{3,30})|([А-Яа-я][А-Яа-я\w]*(?:нефть|банк|групп|холдинг|корп))/gi,dates:/\d{1,2}[\.\-\/]\d{1,2}[\.\-\/]\d{2,4}|\d{4}[\.\-\/]\d{1,2}[\.\-\/]\d{1,2}/g},r=i.match(n.projects);r&&r.length>0&&(s.push("### \u{1F680} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u043F\u0440\u043E\u0435\u043A\u0442\u044B",""),[...new Set(r.slice(0,R.MAX_PROJECTS_ENTITIES))].forEach(h=>s.push(`- ${h.trim()}`)),s.push(""));let l=i.match(n.companies);l&&l.length>0&&(s.push("### \u{1F3E2} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u043A\u043E\u043C\u043F\u0430\u043D\u0438\u0438",""),[...new Set(l.slice(0,R.MAX_COMPANIES_ENTITIES))].forEach(h=>s.push(`- ${h.trim()}`)),s.push(""));let a=i.match(n.dates);return a&&a.length>0&&(s.push("### \u{1F4C5} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u0434\u0430\u0442\u044B",""),[...new Set(a.slice(0,R.MAX_DATES_ENTITIES))].forEach(h=>s.push(`- ${h}`)),s.push("")),s}generateRelatedLinks(t,e){let s=[],i=t.match(/встреча|совещание|планерка|созвон/gi);i&&i.length>1&&s.push("- \u{1F4CB} **\u0421\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0438:** [[\u041F\u043E\u0438\u0441\u043A \u0432\u0441\u0442\u0440\u0435\u0447]]");let n=t.match(/документ|файл|презентация|отчет|план/gi);return n&&n.length>0&&s.push("- \u{1F4C4} **\u0414\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u044B:** [[\u041F\u043E\u0438\u0441\u043A \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u043E\u0432]]"),e.toLowerCase().includes("\u043F\u0440\u043E\u0435\u043A\u0442")&&s.push("- \u{1F680} **\u041F\u0440\u043E\u0435\u043A\u0442:** [[\u041F\u0440\u043E\u0435\u043A\u0442\u044B]]"),s}generateSmartTags(t,e,s){let i=new Set,n=`${t} ${e} ${s}`.toLowerCase().substring(0,R.SMART_TAGS_TEXT_LIMIT);i.add("meeting"),i.add("krisp");let r={\u043F\u0440\u043E\u0435\u043A\u0442:"project",project:"project",\u043F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435:"planning",planning:"planning",\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0430:"development",development:"development",\u043E\u0431\u0441\u0443\u0436\u0434\u0435\u043D\u0438\u0435:"discussion",\u0432\u0441\u0442\u0440\u0435\u0447\u0430:"meeting",\u0430\u043D\u0430\u043B\u0438\u0437:"analysis",strategy:"strategy",\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F:"strategy",\u0432\u043D\u0435\u0434\u0440\u0435\u043D\u0438\u0435:"implementation",\u0442\u0435\u0441\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435:"testing",\u0440\u0435\u0432\u044C\u044E:"review",review:"review",\u0431\u044E\u0434\u0436\u0435\u0442:"budget",budget:"budget",deadline:"deadline",\u0434\u0435\u0434\u043B\u0430\u0439\u043D:"deadline",hr:"hr",\u0440\u0435\u043A\u0440\u0443\u0442\u0438\u043D\u0433:"hr",recruiting:"hr",\u0438\u043D\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044F:"integration",integration:"integration",api:"technical",\u0441\u0438\u0441\u0442\u0435\u043C\u0430:"system",system:"system",\u0431\u0435\u0437\u043E\u043F\u0430\u0441\u043D\u043E\u0441\u0442\u044C:"security",security:"security",\u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0430:"support",support:"support"};for(let[l,a]of Object.entries(r))n.includes(l)&&i.add(a);return(n.includes("ceo")||n.includes("director")||n.includes("\u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440"))&&i.add("management"),(n.includes("developer")||n.includes("\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A")||n.includes("\u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0438\u0441\u0442"))&&i.add("technical"),(n.includes("designer")||n.includes("\u0434\u0438\u0437\u0430\u0439\u043D\u0435\u0440"))&&i.add("design"),(n.includes("\u0440\u0435\u0442\u0440\u043E\u0441\u043F\u0435\u043A\u0442\u0438\u0432\u0430")||n.includes("retrospective"))&&i.add("retrospective"),(n.includes("\u043F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435")||n.includes("planning"))&&i.add("planning"),(n.includes("\u0434\u0435\u043C\u043E")||n.includes("demo")||n.includes("\u043F\u0440\u0435\u0437\u0435\u043D\u0442\u0430\u0446\u0438\u044F"))&&i.add("demo"),Array.from(i)}normalizeActionItemDate(t){let e=[/\b([A-Za-z]+),?\s+(\d{1,2})\b/,/\b(\d{1,2})[\.\-\/](\d{1,2})[\.\-\/](\d{2,4})\b/,/\b(\d{4})-(\d{1,2})-(\d{1,2})\b/];for(let s of e){let i=t.match(s);if(i)try{let n="";if(s===e[0]){let[,r,l]=i,a=new Date().getFullYear(),h=["January","February","March","April","May","June","July","August","September","October","November","December"].findIndex(f=>f.toLowerCase().startsWith(r.toLowerCase()));if(h!==-1)return n=`${a}-${String(h+1).padStart(2,"0")}-${String(l).padStart(2,"0")}`,t.replace(i[0],n)}else{let r=new Date(i[0]);if(!isNaN(r.getTime())){let l=r.getFullYear(),a=String(r.getMonth()+1).padStart(2,"0"),g=String(r.getDate()).padStart(2,"0");return n=`${l}-${a}-${g}`,t.replace(i[0],n)}}}catch(n){console.warn("[NoteParser] Failed to parse date in action item:",i[0])}}return t}};var z=require("obsidian");var j=ct(require("path")),Pt=class{constructor(t,e){this.app=t,this.vault=t.vault,this.settings=e}formatSummaryForCallout(t){if(!t||t.length===0)return"> *\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E*";let e=[],s=0;for(let i=0;i<t.length;i++){let r=t[i].trim();if(r===""){e.push(">");continue}if(s===0&&r.toLowerCase()==="summary")continue;if(this.isLikelyHeader(r,i,t))s++,s>1&&e.push(">"),e.push(`> ## ${s}. ${r}`);else{let a=r.replace(/^[-*•]\s*/,"");e.push(`> - ${a}`)}}return e.join(`
`)}isLikelyHeader(t,e,s){if(t.length>100||t.endsWith(".")||t.endsWith("!")||t.endsWith("?"))return!1;if(e+1<s.length){let i=s[e+1].trim();if(/^[-*•]\s+/.test(i))return!0}return t.length<80&&!t.includes(",")&&!t.includes(".")}applyTemplate(t,e,s,i,n){var N,$,W,x,G,U,Y,X;let r=t;r=r.replace(/{{meetingTitle}}/g,e.meetingTitle||"Untitled Meeting"),r=r.replace(/{{title}}/g,e.meetingTitle||"Untitled Meeting"),r=r.replace(/{{date}}/g,e.date||"YYYY-MM-DD"),r=r.replace(/{{time}}/g,e.time||"HH:MM"),r=r.replace(/{{duration}}/g,e.duration||"N/A");let l=((N=e.participants)==null?void 0:N.map(C=>`- **${C}**`).join(`
`))||"- *\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0430\u0445 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430*";r=r.replace(/{{participantsList}}/g,l),r=r.replace(/{{participants}}/g,(($=e.participants)==null?void 0:$.join(", "))||"N/A"),r=r.replace(/{{participantsCount}}/g,String(e.participantsCount||0)),r=r.replace(/{{transcriptWords}}/g,String(e.transcriptWords||0)),r=r.replace(/{{mostActiveSpeaker}}/g,e.mostActiveSpeaker||"N/A"),r=r.replace(/{{importDate}}/g,e.importDate||new Date().toLocaleDateString("ru-RU"));let a=((W=e.participantsStats)==null?void 0:W.join(`
`))||"*\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430*";r=r.replace(/{{participantsStats}}/g,a);let g=(x=e.extractedEntities)!=null&&x.length?e.extractedEntities.join(`

`):"*\u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u0430*";r=r.replace(/{{extractedEntities}}/g,g);let h=(G=e.relatedLinks)!=null&&G.length?`
`+e.relatedLinks.join(`
`):"";r=r.replace(/{{relatedLinks}}/g,h);let f=(U=e.summary)!=null&&U.length?this.formatSummaryForCallout(e.summary):"*\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E*";r=r.replace(/{{summary}}/g,f);let T=((Y=e.actionItems)==null?void 0:Y.map(C=>`- [ ] ${C}`).join(`
> 
> `))||"*\u041D\u0435\u0442 \u0437\u0430\u0434\u0430\u0447 \u0434\u043B\u044F \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F*";r=r.replace(/{{actionItemsList}}/g,T),r=r.replace(/{{actionItems}}/g,T);let b=((X=e.keyPoints)==null?void 0:X.map(C=>`- ${C}`).join(`
> 
> `))||"*\u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B \u043D\u0435 \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u044B*";r=r.replace(/{{keyPointsList}}/g,b),r=r.replace(/{{keyPoints}}/g,b);let I=e.formattedTranscript?e.formattedTranscript.split(`
`).map(C=>`> ${C}`).join(`
`):"> *\u0422\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D*";r=r.replace(/{{formattedTranscript}}/g,I),r=r.replace(/{{transcript}}/g,I),r=r.replace(/{{rawTranscript}}/g,e.rawTranscript||"\u0421\u044B\u0440\u043E\u0439 \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D");let P=[...e.tags||[],...e.smartTags||[]],S=[...new Set(P)],w=S.length>0?S.map(C=>`  - ${C}`).join(`
`)+`
`:"";if(r=r.replace(/{{yamlTags}}/g,w),n){let C=(0,z.normalizePath)(n);r=r.replace(/{{audioPathForYaml}}/g,C),r=r.replace(/{{audioLink}}/g,C),r=r.replace(/{{audioEmbed}}/g,`![[${C}]]`)}else r=r.replace(/{{audioPathForYaml}}/g,""),r=r.replace(/{{audioLink}}/g,"N/A"),r=r.replace(/{{audioEmbed}}/g,`> [!warning] \u0410\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D
> \u0410\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B \u043D\u0435 \u0431\u044B\u043B \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D \u0438\u043B\u0438 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D \u0432 \u0430\u0440\u0445\u0438\u0432\u0435.`);return i?r=r.replace(/{{noteFileName}}/g,i.replace(/\.md$/,"")):r=r.replace(/{{noteFileName}}/g,e.meetingTitle||"Untitled Meeting"),e.date&&e.date.length>=H.MIN_DATE_LENGTH?(r=r.replace(/{{YYYY}}/g,M.safeSubstring(e.date,0,4,"YYYY")),r=r.replace(/{{MM}}/g,M.safeSubstring(e.date,5,7,"MM")),r=r.replace(/{{DD}}/g,M.safeSubstring(e.date,8,10,"DD"))):(r=r.replace(/{{YYYY}}/g,"YYYY"),r=r.replace(/{{MM}}/g,"MM"),r=r.replace(/{{DD}}/g,"DD")),e.time&&e.time.length>=H.MIN_TIME_LENGTH?(r=r.replace(/{{HH}}/g,M.safeSubstring(e.time,0,2,"HH")),r=r.replace(/{{mm}}/g,M.safeSubstring(e.time,3,5,"MM"))):(r=r.replace(/{{HH}}/g,"HH"),r=r.replace(/{{mm}}/g,"MM")),r}generateFileName(t,e,s){let i=t;return e.date&&e.date.length>=H.MIN_DATE_LENGTH?(i=i.replace(/{{YYYY}}/g,M.safeSubstring(e.date,0,4,"YYYY")),i=i.replace(/{{MM}}/g,M.safeSubstring(e.date,5,7,"MM")),i=i.replace(/{{DD}}/g,M.safeSubstring(e.date,8,10,"DD"))):(i=i.replace(/{{YYYY}}/g,"YYYY"),i=i.replace(/{{MM}}/g,"MM"),i=i.replace(/{{DD}}/g,"DD")),e.time&&e.time.length>=H.MIN_TIME_LENGTH?(i=i.replace(/{{HHMM}}/g,M.safeSubstring(e.time,0,2,"HH")+M.safeSubstring(e.time,3,5,"MM")),i=i.replace(/{{HH}}/g,M.safeSubstring(e.time,0,2,"HH")),i=i.replace(/{{mm}}/g,M.safeSubstring(e.time,3,5,"MM"))):(i=i.replace(/{{HHMM}}/g,"HHMM"),i=i.replace(/{{HH}}/g,"HH"),i=i.replace(/{{mm}}/g,"MM")),i=i.replace(/{{meetingTitle}}/g,e.meetingTitle||"Untitled Meeting"),`${M.sanitizeFileName(i)}.${s}`}async createNote(t,e){var T,b,I;let s=this.generateFileName(this.settings.noteNameTemplate,t,"md"),i=((T=t.date)==null?void 0:T.substring(0,4))||"YYYY",n=((b=t.date)==null?void 0:b.substring(5,7))||"MM",r=(0,z.normalizePath)(j.join(this.settings.notesFolderPath,i,n));await this.ensureFolderExists(r);let l=(0,z.normalizePath)(j.join(r,s)),a=this.vault.getAbstractFileByPath(l);if(a&&a instanceof z.TFile)switch(this.settings.duplicateStrategy){case"skip":return console.log(`Note ${l} already exists. Skipping.`),new Notification("Krisp Importer",{body:`\u0417\u0430\u043C\u0435\u0442\u043A\u0430 ${s} \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442. \u0418\u043C\u043F\u043E\u0440\u0442 \u043F\u0440\u043E\u043F\u0443\u0449\u0435\u043D.`}),{notePath:l,noteFile:a};case"overwrite":console.log(`Note ${l} already exists. Overwriting.`),await this.vault.delete(a);break;case"rename":let P=1,S=s.substring(0,s.lastIndexOf(".")),w=s.substring(s.lastIndexOf(".")+1);for(;a;)l=(0,z.normalizePath)(j.join(r,`${S}_${P}.${w}`)),a=this.vault.getAbstractFileByPath(l),P++;console.log(`Note ${l} will be created with a new name.`);break}let g;if(e&&t.meetingTitle){let P=j.extname(e)||".mp3",S=this.generateFileName(this.settings.attachmentNameTemplate,t,P.substring(1)),w=this.settings.attachmentsFolderPath;!w.includes("{{YYYY}}")&&!w.includes("{{MM}}")&&(w=j.join(w,i,n)),w=w.replace(/{{YYYY}}/g,i).replace(/{{MM}}/g,n).replace(/{{DD}}/g,((I=t.date)==null?void 0:I.substring(8,10))||"DD"),await this.ensureFolderExists((0,z.normalizePath)(w)),g=(0,z.normalizePath)(j.join(w,S)),g=await this.createAudioFile(e,g,w,S)}let h=this.applyTemplate(this.settings.noteContentTemplate,t,this.settings,l.split("/").pop(),g),f=await this.vault.create(l,h);return console.log(`Note created: ${l}`),{notePath:l,audioDestPath:g,noteFile:f}}async handleAudioDuplicate(t,e,s){let i=this.settings.duplicateStrategy;switch(i){case"skip":return console.log(`[NoteCreator] Audio duplicate detected, skipping: ${s}`),t;case"overwrite":return console.log(`[NoteCreator] Audio duplicate detected, will overwrite: ${s}`),t;case"rename":return console.log(`[NoteCreator] Audio duplicate detected, creating unique name: ${s}`),this.generateUniqueAudioPath(e,s);default:return console.warn(`[NoteCreator] Unknown duplicate strategy: ${i}, falling back to rename`),this.generateUniqueAudioPath(e,s)}}async createAudioFile(t,e,s,i){try{let n=require("fs").promises;await n.access(t);let r=await n.readFile(t);console.log(`[NoteCreator] Audio file read, size: ${r.length} bytes`);let l=this.vault.getAbstractFileByPath(e),a=e;if(l){if(a=await this.handleAudioDuplicate(e,s,i),this.settings.duplicateStrategy==="skip")return console.log(`[NoteCreator] Audio file skipped (strategy: skip): ${i}`),a;if(this.settings.duplicateStrategy==="overwrite"){let g=this.vault.getAbstractFileByPath(a);if(g instanceof z.TFile)return await this.vault.modifyBinary(g,r),console.log(`[NoteCreator] Audio file updated: ${a}`),a}}return await this.vault.createBinary(a,r),console.log(`[NoteCreator] Audio file created: ${a}`),a}catch(n){return console.warn(`[NoteCreator] Error creating audio file ${i}:`,n),e}}generateUniqueAudioPath(t,e){let s=1,i=e.substring(0,e.lastIndexOf(".")),n=e.substring(e.lastIndexOf(".")+1),r,l;do{let a=`${i}_${s}.${n}`;r=(0,z.normalizePath)(j.join(t,a)),l=this.vault.getAbstractFileByPath(r),s++}while(l);return r}async ensureFolderExists(t){let e=(0,z.normalizePath)(t);if(e==="/"||e==="")return;if(!this.vault.getAbstractFileByPath(e)){let i=e.split("/"),n="";for(let r of i){if(!r)continue;if(n=n?`${n}/${r}`:r,!this.vault.getAbstractFileByPath(n))try{await this.vault.createFolder(n)}catch(a){if(!this.vault.getAbstractFileByPath(n))throw console.error(`Failed to create folder ${n}:`,a),a}}}}};var K=require("obsidian");var dt=class{constructor(){this.batchMode=!1;this.currentOperationId=null;this.progressNotice=null}startBatchOperation(t){this.batchMode=!0,this.currentOperationId=t,this.hidePreviousNotices()}endBatchOperation(){this.batchMode=!1,this.currentOperationId=null,this.progressNotice&&(this.progressNotice.hide(),this.progressNotice=null)}showBatchProgress(t,e=0){this.batchMode&&(this.progressNotice&&this.progressNotice.hide(),this.progressNotice=new K.Notice(t,e))}hidePreviousNotices(){this.progressNotice&&(this.progressNotice.hide(),this.progressNotice=null)}showSuccess(t,e=F.SUCCESS){if(this.batchMode&&this.isIndividualItemMessage(t)){console.log(`[Krisp Importer] SUCCESS (batch): ${t}`);return}new K.Notice(t,e),console.log(`[Krisp Importer] SUCCESS: ${t}`)}showError(t,e=F.ERROR){new K.Notice(`ERROR: ${t}`,e),console.error(`[Krisp Importer] ERROR: ${t}`)}showWarning(t,e=F.WARNING){new K.Notice(`WARNING: ${t}`,e),console.warn(`[Krisp Importer] WARNING: ${t}`)}showInfo(t,e=F.INFO){if(this.batchMode&&this.isIndividualProgressMessage(t)){console.log(`[Krisp Importer] INFO (batch): ${t}`);return}new K.Notice(t,e),console.log(`[Krisp Importer] INFO: ${t}`)}forceNotification(t,e="info",s){switch(e){case"success":new K.Notice(t,s||F.SUCCESS);break;case"error":new K.Notice(`ERROR: ${t}`,s||F.ERROR);break;case"warning":new K.Notice(`WARNING: ${t}`,s||F.WARNING);break;default:new K.Notice(t,s||F.INFO)}console.log(`[Krisp Importer] FORCE ${e.toUpperCase()}: ${t}`)}isIndividualProgressMessage(t){return t.includes("Processing meeting")||t.includes("\u0421\u043E\u0437\u0434\u0430\u0435\u043C \u0437\u0430\u043C\u0435\u0442\u043A\u0443")||t.includes("Attempting to use alternative")}isIndividualItemMessage(t){return t.includes("Successfully imported meeting")||t.includes("Audio file created")||t.includes("Audio file updated")}showBatchImportResult(t,e,s,i){let n,r,l;e===0&&t>0?(r="success",n=`\u2705 \u0418\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D: ${t} \u0432\u0441\u0442\u0440\u0435\u0447(\u0438) \u0438\u0437 "${i}"`,l=F.SUCCESS):e>0&&t>0?(r="warning",n=`\u26A0\uFE0F \u0418\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D \u0447\u0430\u0441\u0442\u0438\u0447\u043D\u043E: ${t} \u0443\u0441\u043F\u0435\u0448\u043D\u043E, ${e} \u043E\u0448\u0438\u0431\u043E\u043A \u0438\u0437 "${i}"`,l=F.WARNING+2e3):e>0&&t===0?(r="error",n=`\u274C \u0418\u043C\u043F\u043E\u0440\u0442 \u043D\u0435 \u0443\u0434\u0430\u043B\u0441\u044F: ${e} \u043E\u0448\u0438\u0431\u043E\u043A \u0432 "${i}"`,l=F.ERROR+3e3):(r="info",n=`\u2139\uFE0F \u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445 \u0434\u043B\u044F \u0438\u043C\u043F\u043E\u0440\u0442\u0430 \u0432 "${i}"`,l=F.INFO),s>0&&(n+=` (\u043F\u0440\u043E\u043F\u0443\u0449\u0435\u043D\u043E \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432: ${s})`),this.forceNotification(n,r,l)}logDetailedResult(t,e,s,i){console.log(`[Krisp Importer] DETAILED RESULT for "${i}":`,{imported:t,errors:e,skipped:s,total:t+e,successRate:t+e>0?Math.round(t/(t+e)*100):0})}};function Zt(c){return typeof c!="string"?!1:c.includes("Summary")||c.includes("Action Items")||c.includes("Key Points")||c.length>10}function se(c){return typeof c!="string"?!1:c.length===0?!0:/^.+\s*\|\s*\d{2}:\d{2}/m.test(c)}var st=ct(require("path")),ot=require("fs"),Lt=class{constructor(t,e,s){this.app=t,this.zipExtractor=new bt(this.app),this.noteParser=new Nt,this.noteCreator=null,this.notificationService=new dt,this.statusBarService=e||null,this.loggingService=s||null}async processZipFile(t,e){let s=null,i=st.basename(t),n=new nt.Notice(`Processing ${i}...`,0);this.statusBarService&&this.statusBarService.setProcessing(i),this.noteCreator=new Pt(this.app,e);try{let r=`${i.replace(".zip","")}_${Date.now()}`;if(s=await this.extractWithErrorHandling(t,r,i),!s){n&&n.hide();return}let l=await this.discoverMeetingFoldersWithErrorHandling(s,i);if(!l||l.length===0){n&&n.hide(),await this.ensureFinalCleanup(s);return}let a=await this.processMeetingsWithErrorHandling(l,s,i,e);n&&n.hide(),await this.handlePostProcessingWithErrorHandling(a,t,i,e)}catch(r){await this.handleCriticalError(r,i,n,s)}finally{await this.ensureFinalCleanup(s)}}async extractWithErrorHandling(t,e,s){try{return await this.zipExtractor.extract(t,e)}catch(i){let n=i instanceof Error?i.message:String(i);return this.logAndNotifyError(`Failed to extract ZIP file: ${s}`,i,"EXTRACT"),this.loggingService&&this.loggingService.handleError("Processing",`ZIP extraction failed for ${s}`,i),null}}async discoverMeetingFoldersWithErrorHandling(t,e){try{let i=(await ot.promises.readdir(t,{withFileTypes:!0})).filter(n=>n.isDirectory());return i.length===0?(this.notificationService.showError(`No meeting folders found in ZIP: ${e}`),this.loggingService&&this.loggingService.warn("Processing",`No meeting folders found in ${e}`),null):i}catch(s){return this.logAndNotifyError(`Failed to read ZIP contents: ${e}`,s,"DISCOVER"),null}}async processMeetingsWithErrorHandling(t,e,s,i){var g,h,f,T,b;let n=0,r=0,l=null,a=t.length>1;a&&this.notificationService.startBatchOperation(s),this.loggingService&&this.loggingService.info("Processing",`Starting processing of ${t.length} meeting folders from ${s}`),console.log(`[DEBUG] Processing ${t.length} meeting folders`);for(let I=0;I<t.length;I++){let S=t[I].name,w=(0,nt.normalizePath)(st.join(e,S));this.loggingService&&this.loggingService.info("Processing",`Processing meeting ${I+1}/${t.length}: ${S}`);try{if(a&&this.statusBarService&&this.statusBarService.setProcessing(`${I+1}/${t.length}: ${S.substring(0,20)}...`),a)this.notificationService.showBatchProgress(`\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0432\u0441\u0442\u0440\u0435\u0447\u0438 ${I+1}/${t.length}: ${S}`,2e3);else{let d=`Processing meeting: ${S}...`;new nt.Notice(d)}let N=St.MEETING_NOTES,$=St.TRANSCRIPT,W=St.AUDIO_DEFAULT,x=(0,nt.normalizePath)(st.join(w,N)),G=(0,nt.normalizePath)(st.join(w,$)),U=await ot.promises.readdir(w),Y=U.find(d=>St.AUDIO_PATTERN.test(d)),X=Y!=null?Y:W,C=(0,nt.normalizePath)(st.join(w,X)),at="",vt="";try{let d=await ot.promises.readFile(x,"utf-8");Zt(d)?at=d:(this.logAndNotifyError(`Invalid meeting notes format in ${S}`,"File does not contain expected sections (Summary, Action Items, Key Points)","VALIDATE_NOTES"),console.warn(`[ProcessingService] Invalid meeting notes format in ${S}, using empty content`))}catch(d){this.logAndNotifyError(`Failed to read ${N} from ${S} in ${s}`,d,"READ_NOTES"),this.loggingService&&this.loggingService.error("Processing",`Notes file read failed for ${S}`,{errorMessage:d instanceof Error?d.message:String(d),notesPath:x,meetingFolder:S,zipFile:s});let m=U.find(v=>v.toLowerCase().includes("notes")&&v.toLowerCase().endsWith(".txt")&&v!==N);if(m){this.notificationService.showInfo(`Attempting to use alternative notes file: ${m}`);try{let v=await ot.promises.readFile(st.join(w,m),"utf-8");Zt(v)?at=v:console.warn("[ProcessingService] Alternative notes file also has invalid format")}catch(v){this.logAndNotifyError(`Failed to read alternative notes file ${m} for ${S}`,v,"READ_ALT_NOTES"),this.loggingService&&this.loggingService.error("Processing",`Alternative notes file failed for ${S}`,{errorMessage:v instanceof Error?v.message:String(v),altNotesFile:m,meetingFolder:S,zipFile:s}),r++;continue}}else{this.loggingService&&this.loggingService.error("Processing",`No valid notes files found for ${S}`,{meetingFolder:S,zipFile:s,availableFiles:U}),r++;continue}}try{let d=await ot.promises.readFile(G,"utf-8");se(d)||console.warn(`[ProcessingService] Invalid transcript format in ${S}, may not contain speaker|time pattern`),vt=d}catch(d){this.notificationService.showWarning(`Failed to read ${$} for ${S} in ${s}. Transcript might be missing.`)}let o=this.noteParser.parseMeetingNotes(at,vt,S);if(this.loggingService&&this.loggingService.info("Processing",`Parsed data for ${S}`,{title:o.meetingTitle,date:o.date,time:o.time,participantsCount:((g=o.participants)==null?void 0:g.length)||0,hasTranscript:!!o.formattedTranscript,transcriptLength:((h=o.formattedTranscript)==null?void 0:h.length)||0}),console.log(`[DEBUG] Parsed data for ${S}:`,{title:o.meetingTitle,date:o.date,time:o.time,participants:o.participants,hasTranscript:!!o.formattedTranscript,transcriptLength:((f=o.formattedTranscript)==null?void 0:f.length)||0,summaryLength:((T=o.summary)==null?void 0:T.length)||0,actionItemsLength:((b=o.actionItems)==null?void 0:b.length)||0}),!this.noteCreator)throw new Error("NoteCreator is not initialized");if(!C||typeof C!="string")throw new Error(`Invalid audio file path for ${S}`);let u=await this.noteCreator.createNote(o,C);if(!u.notePath){let d=`Failed to create note for ${S}`;this.notificationService.showError(d),this.loggingService&&this.loggingService.error("Processing",d,{meetingFolder:S}),r++;continue}l=u,this.loggingService&&this.loggingService.info("Processing",`Note created successfully for ${S}`,{notePath:u.notePath,audioDestPath:u.audioDestPath}),console.log(`[DEBUG] Note created at: ${u.notePath}, audio dest: ${u.audioDestPath}`),a||this.notificationService.showSuccess(`Successfully imported meeting ${S} to ${u.notePath}`),n++}catch(N){let $=`Unexpected error processing meeting ${S}`;this.logAndNotifyError($,N,"UNEXPECTED_MEETING_ERROR"),this.loggingService&&this.loggingService.error("Processing",$,{errorMessage:N instanceof Error?N.message:String(N),meetingFolder:S,meetingIndex:I+1,totalMeetings:t.length,zipFile:s,stack:N instanceof Error?N.stack:void 0}),r++;continue}}return a&&(this.notificationService.endBatchOperation(),this.notificationService.showBatchImportResult(n,r,0,s),this.notificationService.logDetailedResult(n,r,0,s)),{importedCount:n,errorCount:r,lastCreatedNote:l}}async handlePostProcessingWithErrorHandling(t,e,s,i){var n;if(this.statusBarService&&t.errorCount>0&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043E\u043A: ${t.errorCount}`),console.log(`[DEBUG] deleteZipAfterImport setting: ${i.deleteZipAfterImport}`),console.log(`[DEBUG] errorCount: ${t.errorCount}, importedCount: ${t.importedCount}`),i.deleteZipAfterImport&&t.errorCount===0&&t.importedCount>0)try{console.log(`[DEBUG] Attempting to delete ZIP file: ${e}`),await ot.promises.rm(e),this.notificationService.showInfo(`Deleted original ZIP file: ${s}`),console.log(`[DEBUG] Successfully deleted ZIP file: ${e}`)}catch(r){console.error("[DEBUG] Failed to delete ZIP file:",r),this.notificationService.showError(`Failed to delete original ZIP file ${s}: ${r.message}`)}else i.deleteZipAfterImport?console.log(`[DEBUG] ZIP file not deleted due to errors or no imports. errorCount: ${t.errorCount}, importedCount: ${t.importedCount}`):console.log("[DEBUG] ZIP file deletion disabled in settings");i.openNoteAfterImport&&t.importedCount===1?(n=t.lastCreatedNote)!=null&&n.noteFile&&(this.app.workspace.getLeaf().openFile(t.lastCreatedNote.noteFile),this.notificationService.showInfo(`\u0417\u0430\u043C\u0435\u0442\u043A\u0430 \u043E\u0442\u043A\u0440\u044B\u0442\u0430: ${t.lastCreatedNote.notePath}`)):i.openNoteAfterImport&&t.importedCount>1&&this.notificationService.showInfo(`\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043E ${t.importedCount} \u0437\u0430\u043C\u0435\u0442\u043E\u043A. \u041E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 \u043D\u0443\u0436\u043D\u0443\u044E \u0438\u0437 \u043F\u0430\u043F\u043A\u0438 \u0437\u0430\u043C\u0435\u0442\u043E\u043A.`)}async handleCriticalError(t,e,s,i){s&&s.hide(),this.statusBarService&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ${e}`),this.loggingService?this.loggingService.handleError("Processing",`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ZIP-\u0444\u0430\u0439\u043B\u0430 ${e}`,t):(console.error(`[Krisp Importer] Error processing ZIP file ${e}:`,t),this.notificationService.showError(`An unexpected error occurred while processing ${e}: ${t.message}`))}async ensureFinalCleanup(t){t&&await this.zipExtractor.cleanup(t)}logAndNotifyError(t,e,s){console.error(`[DEBUG] ${s} error:`,e),this.notificationService.showError(t),this.loggingService&&this.loggingService.handleError("Processing",t,e)}};var B=ct(require("fs")),rt=ct(require("path")),Ct=class{constructor(t,e,s,i,n){this.watcher=null;this.isWatching=!1;this.watchedPath="";this.isProcessingFile=!1;this.pendingFiles=new Set;this.app=t,this.processingService=e,this.notificationService=s,this.settingsProvider=i,this.statusBarService=n||null}async startWatching(t){if(this.isWatching&&await this.stopWatching(),!t||t.trim()===""){this.notificationService.showError("No watched folder specified");return}try{if(!B.existsSync(t)){this.notificationService.showError(`Folder does not exist: ${t}`);return}if(!B.statSync(t).isDirectory()){this.notificationService.showError(`\u0423\u043A\u0430\u0437\u0430\u043D\u043D\u044B\u0439 \u043F\u0443\u0442\u044C \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043F\u0430\u043F\u043A\u043E\u0439: ${t}`);return}this.watchedPath=t,this.watcher=B.watch(t,{persistent:!0},async(s,i)=>{if(console.log(`[FileWatcher] Event detected: ${s}, filename: ${i}`),s==="rename"&&i)try{await this.handleFileEvent(i)}catch(n){console.error(`[FileWatcher] Error in file event handler for ${i}:`,n),this.notificationService.showError(`\u041A\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ${i}: ${n.message}`),this.statusBarService&&this.statusBarService.setError(`\u041A\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441 ${i}`)}}),this.isWatching=!0,this.statusBarService&&this.statusBarService.setWatching(t),this.notificationService.showSuccess(`\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u0437\u0430\u043F\u0443\u0449\u0435\u043D\u043E: ${t}`),console.log(`[Krisp Importer] FileWatcher started for: ${t}`)}catch(e){this.watcher&&(this.watcher.close(),this.watcher=null),this.isWatching=!1,this.watchedPath="",this.statusBarService&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F: ${e.message}`),console.error("[Krisp Importer] Error starting file watcher:",e),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0437\u0430\u043F\u0443\u0441\u043A\u0430 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F: ${e.message}`)}}async stopWatching(){this.watcher&&(this.watcher.close(),this.watcher=null),this.isWatching&&(this.isWatching=!1,this.statusBarService&&this.statusBarService.setIdle("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),this.notificationService.showInfo("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),console.log("[Krisp Importer] FileWatcher stopped"))}isCurrentlyWatching(){return this.isWatching}getWatchedPath(){return this.watchedPath}async handleFileEvent(t){if(console.log(`[FileWatcher] Processing file event for: ${t}`),!t.toLowerCase().endsWith(".zip")){console.log(`[FileWatcher] Ignoring non-ZIP file: ${t}`);return}let e=rt.join(this.watchedPath,t);if(!(!B.existsSync(e)||!B.statSync(e).isFile())){if(this.isProcessingFile){console.log(`[FileWatcher] File processing in progress, queuing: ${t}`),this.pendingFiles.add(e);return}await this.processFileWithMutex(e)}}async processFileWithMutex(t){this.isProcessingFile=!0;try{await this.processFileInternal(t)}catch(e){console.error(`[FileWatcher] Critical error processing ${t}:`,e),this.notificationService.showError(`\u041A\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ${rt.basename(t)}: ${e.message}`),this.statusBarService&&this.statusBarService.setError(`\u041A\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441 ${rt.basename(t)}`)}finally{this.isProcessingFile=!1,await this.processNextInQueue()}}async processNextInQueue(){if(this.pendingFiles.size>0&&!this.isProcessingFile){let t=this.pendingFiles.values().next().value;this.pendingFiles.delete(t),console.log(`[FileWatcher] Processing queued file: ${rt.basename(t)}`),await this.processFileWithMutex(t)}}async processFileInternal(t){let e=rt.basename(t);try{console.log(`[Krisp Importer] New ZIP file detected: ${e}`),await this.waitForFileStability(t);let s=this.settingsProvider();this.statusBarService&&this.statusBarService.setProcessing(e),await this.processNewZipFile(t,s)}finally{this.statusBarService&&(this.isWatching&&this.watchedPath?this.statusBarService.setWatching(this.watchedPath):this.statusBarService.setIdle("\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0444\u0430\u0439\u043B\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430"))}}async waitForFileStability(t,e=R.FILE_STABILITY_MAX_WAIT){let s=R.FILE_STABILITY_CHECK_INTERVAL,i=0,n=0,r=R.FILE_STABILITY_REQUIRED_CHECKS;return new Promise(l=>{let a=Date.now(),g=()=>{try{if(!B.existsSync(t)){l();return}let f=B.statSync(t).size;if(f===i&&f>0){if(n++,n>=r){l();return}}else n=0;i=f,Date.now()-a<e?setTimeout(g,s):l()}catch(h){console.error("[FileWatcher] Error checking file stability:",h),l()}};g()})}async processNewZipFile(t,e){try{console.log(`[FileWatcher] Processing new ZIP file: ${t}`),console.log(`[FileWatcher] Settings - deleteZipAfterImport: ${e.deleteZipAfterImport}`),await this.processingService.processZipFile(t,e)}catch(s){console.error("[Krisp Importer] Error processing new ZIP file:",s),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0439 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u0444\u0430\u0439\u043B\u0430: ${s.message}`)}}async scanExistingFiles(){if(!this.watchedPath){this.notificationService.showError("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430 \u043D\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043D\u0430 \u0438\u043B\u0438 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E. \u041D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C.");return}this.statusBarService&&this.statusBarService.setProcessing("\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u0444\u0430\u0439\u043B\u043E\u0432...");try{let e=B.readdirSync(this.watchedPath).filter(r=>r.toLowerCase().endsWith(".zip"));if(e.length===0){this.notificationService.showInfo("\u0412 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435\u0442 ZIP-\u0444\u0430\u0439\u043B\u043E\u0432");return}let s=e.length>1;s?(this.notificationService.startBatchOperation(`\u043C\u0430\u0441\u0441\u043E\u0432\u043E\u0435 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435: ${e.length} \u0444\u0430\u0439\u043B\u043E\u0432`),this.notificationService.showBatchProgress(`\u041D\u0430\u0447\u0438\u043D\u0430\u0435\u043C \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 ${e.length} ZIP-\u0444\u0430\u0439\u043B\u043E\u0432...`,3e3)):this.notificationService.showInfo("\u041D\u0430\u0439\u0434\u0435\u043D 1 ZIP-\u0444\u0430\u0439\u043B \u0434\u043B\u044F \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438");let i=0,n=0;for(let r=0;r<e.length;r++){let l=e[r];try{s&&(this.statusBarService&&this.statusBarService.setProcessing(`\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 ${r+1}/${e.length}: ${l.substring(0,20)}...`),this.notificationService.showBatchProgress(`\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0444\u0430\u0439\u043B\u0430 ${r+1}/${e.length}: ${l}`,2e3));let a=rt.join(this.watchedPath,l),g=this.settingsProvider();await this.processNewZipFile(a,g),i++}catch(a){console.error(`[Krisp Importer] Error processing ${l}:`,a),n++}}s&&(this.notificationService.endBatchOperation(),this.notificationService.showBatchImportResult(i,n,0,"\u043C\u0430\u0441\u0441\u043E\u0432\u043E\u0435 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435"),this.notificationService.logDetailedResult(i,n,0,"\u043C\u0430\u0441\u0441\u043E\u0432\u043E\u0435 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435"))}catch(t){console.error("[Krisp Importer] Error scanning existing files:",t),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u043F\u0430\u043F\u043A\u0438: ${t.message}`),this.statusBarService&&this.statusBarService.setError("\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F")}finally{this.statusBarService&&(this.isWatching&&this.watchedPath?this.statusBarService.setWatching(this.watchedPath):this.statusBarService.setIdle("\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043E"))}}};var Ht=require("obsidian");var lt=(i=>(i[i.DEBUG=0]="DEBUG",i[i.INFO=1]="INFO",i[i.WARN=2]="WARN",i[i.ERROR=3]="ERROR",i))(lt||{}),Dt=class{constructor(t=1){this.logs=[];this.maxLogEntries=It.MAX_LOG_ENTRIES;this.logTTL=It.LOG_TTL_HOURS*60*60*1e3;this.cleanupTimer=null;this.currentLogLevel=t,this.log(1,"System","LoggingService initialized"),this.startPeriodicCleanup()}startPeriodicCleanup(){this.cleanupTimer=setInterval(()=>{this.cleanupExpiredLogs()},It.CLEANUP_INTERVAL_MINUTES*60*1e3)}cleanupExpiredLogs(){let t=Date.now(),e=this.logs.length;this.logs=this.logs.filter(i=>t-i.timestamp.getTime()<=this.logTTL);let s=e-this.logs.length;s>0&&this.info("System",`\u041E\u0447\u0438\u0449\u0435\u043D\u043E \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0445 \u043B\u043E\u0433\u043E\u0432: ${s}`)}destroy(){this.cleanupTimer&&(clearInterval(this.cleanupTimer),this.cleanupTimer=null),this.info("System","LoggingService \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D")}log(t,e,s,i){if(t<this.currentLogLevel)return;let n={timestamp:new Date,level:t,category:e,message:s,details:i};this.logs.push(n),this.logs.length>this.maxLogEntries&&(this.logs=this.logs.slice(-this.maxLogEntries));let r=lt[t],a=`[${n.timestamp.toISOString()}] [${r}] [${e}] ${s}`;switch(t){case 0:console.debug(a,i);break;case 1:console.info(a,i);break;case 2:console.warn(a,i);break;case 3:console.error(a,i);break}}debug(t,e,s){this.log(0,t,e,s)}info(t,e,s){this.log(1,t,e,s)}warn(t,e,s){this.log(2,t,e,s)}error(t,e,s){this.log(3,t,e,s)}logZipProcessingStart(t){this.info("Processing",`\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0443 ZIP-\u0444\u0430\u0439\u043B\u0430: ${t}`)}logZipProcessingSuccess(t,e){this.info("Processing",`\u0423\u0441\u043F\u0435\u0448\u043D\u043E \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D ZIP-\u0444\u0430\u0439\u043B: ${t}`,{noteName:e})}logZipProcessingError(t,e){this.error("Processing",`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ZIP-\u0444\u0430\u0439\u043B\u0430: ${t}`,{error:e.message,stack:e.stack})}logFileWatcherStart(t){this.info("FileWatcher",`\u0417\u0430\u043F\u0443\u0449\u0435\u043D\u043E \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: ${t}`)}logFileWatcherStop(){this.info("FileWatcher","\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E")}logFileWatcherError(t){this.error("FileWatcher","\u041E\u0448\u0438\u0431\u043A\u0430 \u0432 FileWatcher",{error:t.message,stack:t.stack})}logDuplicateHandling(t,e,s){this.info("Duplicates",`\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u0430: ${e}`,{strategy:t,action:s})}logSettingsChange(t,e,s){this.info("Settings",`\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0430 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430: ${t}`,{oldValue:e,newValue:s})}logNoteCreation(t,e){this.info("NoteCreator",`\u0421\u043E\u0437\u0434\u0430\u043D\u0430 \u0437\u0430\u043C\u0435\u0442\u043A\u0430: ${t}`,{templateUsed:e})}logAudioFileCopy(t,e){this.info("AudioCopy",`\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B: ${t} -> ${e}`)}getAllLogs(){return[...this.logs]}getLogsByLevel(t){return this.logs.filter(e=>e.level>=t)}getLogsByCategory(t){return this.logs.filter(e=>e.category===t)}getRecentLogs(t=50){return this.logs.slice(-t)}exportLogsAsText(){return this.logs.map(e=>{let s=e.timestamp.toISOString(),i=lt[e.level].padEnd(5),n=e.category.padEnd(12),r=`[${s}] [${i}] [${n}] ${e.message}`;return e.details&&(r+=`
    Details: ${JSON.stringify(e.details,null,2)}`),r}).join(`
`)}exportLogsAsJSON(){return JSON.stringify(this.logs,null,2)}clearLogs(){let t=this.logs.length;this.logs=[],this.info("System",`\u041E\u0447\u0438\u0449\u0435\u043D\u044B \u043B\u043E\u0433\u0438 (\u0431\u044B\u043B\u043E \u0437\u0430\u043F\u0438\u0441\u0435\u0439: ${t})`)}setLogLevel(t){let e=this.currentLogLevel;this.currentLogLevel=t,this.info("System",`\u0418\u0437\u043C\u0435\u043D\u0435\u043D \u0443\u0440\u043E\u0432\u0435\u043D\u044C \u043B\u043E\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F: ${lt[e]} -> ${lt[t]}`)}getLogStats(){let t={},e={};return this.logs.forEach(s=>{let i=lt[s.level];t[i]=(t[i]||0)+1,e[s.category]=(e[s.category]||0)+1}),{total:this.logs.length,byLevel:t,byCategory:e}}handleError(t,e,s,i=!0){let n=s instanceof Error?s.message:String(s);this.error(t,e,{error:n,stack:s instanceof Error?s.stack:void 0}),i&&new Ht.Notice(`ERROR: ${e}: ${n}`,F.ERROR)}async copyLogsToClipboard(){try{let t=this.exportLogsAsText();await navigator.clipboard.writeText(t),new Ht.Notice("\u{1F4CB} Logs copied to clipboard",F.TEMPORARY_STATUS),this.info("System","\u041B\u043E\u0433\u0438 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u044B \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430")}catch(t){this.handleError("System","\u041E\u0448\u0438\u0431\u043A\u0430 \u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u043B\u043E\u0433\u043E\u0432 \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430",t)}}};var ne=require("obsidian");var Ft=class{constructor(t){this.statusBarItem=null;this.currentStatus="idle";this.currentMessage="";this.plugin=t,this.initialize()}initialize(){this.statusBarItem=this.plugin.addStatusBarItem(),this.statusBarItem.addClass("krisp-importer-status"),this.statusBarItem.style.cursor="pointer",this.statusBarItem.addEventListener("click",()=>{this.plugin.app.setting.open(),this.plugin.app.setting.openTabById("krisp-notes-importer")}),this.updateDisplay()}updateDisplay(){if(!this.statusBarItem)return;let{icon:t,text:e,color:s}=this.getStatusDisplay();this.statusBarItem.empty(),this.statusBarItem.removeClass("idle","watching","processing","error");let i=this.currentStatus.toLowerCase();this.statusBarItem.addClass(i);let n=this.statusBarItem.createEl("span");n.style.marginRight="4px",(0,ne.setIcon)(n,t);let r=this.statusBarItem.createEl("span");r.textContent=e,this.statusBarItem.style.color=s,this.statusBarItem.setAttribute("aria-label",this.getTooltipText())}getStatusDisplay(){switch(this.currentStatus){case"idle":return{icon:"pause-circle",text:"Krisp",color:"var(--text-muted)"};case"watching":return{icon:"eye",text:"Krisp",color:"var(--color-green)"};case"processing":return{icon:"loader-2",text:"Krisp",color:"var(--color-blue)"};case"error":return{icon:"alert-circle",text:"Krisp",color:"var(--color-red)"};default:return{icon:"help-circle",text:"Krisp",color:"var(--text-muted)"}}}getTooltipText(){let t="Krisp Notes Importer";switch(this.currentStatus){case"idle":return`${t}: \u041D\u0435\u0430\u043A\u0442\u0438\u0432\u0435\u043D`;case"watching":return`${t}: \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0430\u043A\u0442\u0438\u0432\u043D\u043E${this.currentMessage?` - ${this.currentMessage}`:""}`;case"processing":return`${t}: \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0444\u0430\u0439\u043B\u0430${this.currentMessage?` - ${this.currentMessage}`:""}`;case"error":return`${t}: \u041E\u0448\u0438\u0431\u043A\u0430${this.currentMessage?` - ${this.currentMessage}`:""}`;default:return t}}setIdle(t){this.currentStatus="idle",this.currentMessage=t||"",this.updateDisplay()}setWatching(t){this.currentStatus="watching",this.currentMessage=t?`Watching: ${t}`:"",this.updateDisplay()}setProcessing(t){this.currentStatus="processing",this.currentMessage=t?`\u0424\u0430\u0439\u043B: ${t}`:"",this.updateDisplay()}setError(t){this.currentStatus="error",this.currentMessage=t||"",this.updateDisplay(),setTimeout(()=>{this.currentStatus==="error"&&this.setIdle()},1e4)}showTemporaryMessage(t,e=F.TEMPORARY_STATUS){let s=this.currentStatus,i=this.currentMessage;this.currentMessage=t,this.updateDisplay(),setTimeout(()=>{this.currentStatus=s,this.currentMessage=i,this.updateDisplay()},e)}getCurrentStatus(){return this.currentStatus}isActive(){return this.currentStatus==="watching"||this.currentStatus==="processing"}destroy(){this.statusBarItem&&(this.statusBarItem.remove(),this.statusBarItem=null)}startProcessingAnimation(){if(!this.statusBarItem||this.currentStatus!=="processing")return;let t=this.statusBarItem.querySelector("span:first-child");t&&(t.style.animation="spin 1s linear infinite")}stopAnimation(){if(!this.statusBarItem)return;let t=this.statusBarItem.querySelector("span:first-child");t&&(t.style.animation="")}updateDisplayWithAnimation(){this.updateDisplay(),this.currentStatus==="processing"?this.startProcessingAnimation():this.stopAnimation()}};var At=class extends O.Plugin{async onload(){console.log("Loading Krisp Notes Importer plugin..."),this.loggingService=new Dt(1),this.loggingService.info("Plugin","\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0443 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 Krisp Notes Importer"),this.settingsManager=new wt(this),await this.settingsManager.loadSettings(),this.loggingService.info("Plugin","Settings loaded");let e=this.settingsManager.getSetting("language")||"en";this.localizationService=new gt(e),this.loggingService.info("Plugin",`\u041B\u043E\u043A\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u0430: ${e}`),this.notificationService=new dt,this.statusBarService=new Ft(this),this.processingService=new Lt(this.app,this.statusBarService,this.loggingService),this.loggingService.info("Plugin","\u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044B \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u044B"),this.fileWatcherService=new Ct(this.app,this.processingService,this.notificationService,()=>this.settingsManager.getAllSettings(),this.statusBarService),this.addSettingTab(new yt(this.app,this)),this.addCommand({id:"import-krisp-zip-manually",name:this.localizationService.t("commands.importZip"),callback:()=>{this.loggingService.info("Commands","\u0417\u0430\u043F\u0443\u0449\u0435\u043D\u0430 \u043A\u043E\u043C\u0430\u043D\u0434\u0430 \u0440\u0443\u0447\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430 ZIP-\u0444\u0430\u0439\u043B\u0430"),new Kt(this.app,async n=>{if(n&&n.trim()!==""){let r=n.trim();this.loggingService.info("Commands",`\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u0440\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u0444\u0430\u0439\u043B\u0430: ${r}`),this.statusBarService&&this.statusBarService.setProcessing(r.split("/").pop()||r);try{await this.processingService.processZipFile(r,this.settingsManager.getAllSettings())}catch(l){this.statusBarService&&this.statusBarService.getCurrentStatus()!=="error"&&this.statusBarService.setError("\u041E\u0448\u0438\u0431\u043A\u0430 \u0440\u0443\u0447\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430")}finally{this.statusBarService&&(this.settingsManager.getSetting("autoScanEnabled")&&this.fileWatcherService.isCurrentlyWatching()?this.statusBarService.setWatching(this.fileWatcherService.getWatchedPath()):this.statusBarService.setIdle("\u0420\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D"))}}else this.loggingService.warn("Commands","\u041F\u043E\u043F\u044B\u0442\u043A\u0430 \u0438\u043C\u043F\u043E\u0440\u0442\u0430 \u0441 \u043F\u0443\u0441\u0442\u044B\u043C \u043F\u0443\u0442\u0435\u043C \u043A \u0444\u0430\u0439\u043B\u0443"),new O.Notice("File path cannot be empty.")},this.localizationService).open()}}),this.addCommand({id:"start-auto-watching",name:this.localizationService.t("commands.startWatching"),callback:async()=>{let n=this.settingsManager.getSetting("watchedFolderPath");n&&n.trim()!==""?(this.statusBarService.setWatching(n),await this.fileWatcherService.startWatching(n)):(this.statusBarService.setError("No watched folder specified"),new O.Notice("Please set the watched folder path in settings first."))}}),this.addCommand({id:"stop-auto-watching",name:this.localizationService.t("commands.stopWatching"),callback:async()=>{this.statusBarService.setIdle("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),await this.fileWatcherService.stopWatching()}}),this.addCommand({id:"scan-existing-files",name:this.localizationService.t("commands.scanExisting"),callback:async()=>{await this.fileWatcherService.scanExistingFiles()}}),this.addCommand({id:"debug-settings",name:this.localizationService.t("commands.debugSettings"),callback:()=>{let n=this.settingsManager.getAllSettings();console.log("[Krisp Importer] Current settings:",n),new O.Notice(`Settings logged to console. deleteZipAfterImport: ${n.deleteZipAfterImport}`,5e3)}}),this.addCommand({id:"check-watching-status",name:this.localizationService.t("commands.checkStatus"),callback:()=>{let n=this.fileWatcherService.isCurrentlyWatching(),r=this.fileWatcherService.getWatchedPath(),l=this.settingsManager.getSetting("autoScanEnabled");console.log("[Krisp Importer] Watching status:",{isWatching:n,watchedPath:r,autoScanEnabled:l});let a=n?`\u2705 \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0430\u043A\u0442\u0438\u0432\u043D\u043E: ${r}`:`\u274C \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E. AutoScan \u0432 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430\u0445: ${l?"\u0432\u043A\u043B\u044E\u0447\u0435\u043D":"\u0432\u044B\u043A\u043B\u044E\u0447\u0435\u043D"}`;new O.Notice(a,7e3)}});let s=this.settingsManager.getSetting("autoScanEnabled"),i=this.settingsManager.getSetting("watchedFolderPath");s&&i&&i.trim()!==""?(this.loggingService.info("Plugin",`\u0410\u0432\u0442\u043E\u0437\u0430\u043F\u0443\u0441\u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F \u043F\u0430\u043F\u043A\u0438: ${i}`),this.statusBarService.setWatching(i),await this.fileWatcherService.startWatching(i)):this.statusBarService.setIdle("\u0413\u043E\u0442\u043E\u0432 \u043A \u0440\u0430\u0431\u043E\u0442\u0435"),this.loggingService.info("Plugin","\u041F\u043B\u0430\u0433\u0438\u043D Krisp Notes Importer \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D \u0443\u0441\u043F\u0435\u0448\u043D\u043E"),console.log("Krisp Notes Importer plugin loaded successfully.")}onunload(){this.fileWatcherService&&this.fileWatcherService.stopWatching(),this.statusBarService&&this.statusBarService.destroy(),this.loggingService&&(this.loggingService.info("Plugin","\u0412\u044B\u0433\u0440\u0443\u0436\u0430\u044E \u043F\u043B\u0430\u0433\u0438\u043D Krisp Notes Importer"),this.loggingService.destroy()),console.log("Unloading Krisp Notes Importer plugin.")}},Kt=class extends O.Modal{constructor(e,s,i){super(e);this.inputEl=null;this.keypressHandler=null;this.onSubmitCallback=s,this.localization=i}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:this.localization.t("modal.importZip.title")}),new O.Setting(e).setName(this.localization.t("modal.importZip.pathLabel")).setDesc(this.localization.t("modal.importZip.pathDesc")).addText(s=>{s.setPlaceholder("/path/to/your/krisp_meeting.zip"),s.onChange(i=>{this.filePath=i}),s.inputEl.style.width="100%",this.keypressHandler=i=>{i.key==="Enter"&&(i.preventDefault(),this.submitForm())},s.inputEl.addEventListener("keypress",this.keypressHandler),this.inputEl=s.inputEl}),new O.Setting(e).addButton(s=>s.setButtonText(this.localization.t("modal.importZip.importButton")).setCta().onClick(()=>{this.submitForm()}))}submitForm(){this.filePath&&this.filePath.trim()!==""?(this.onSubmitCallback(this.filePath.trim()),this.close()):new O.Notice(this.localization.t("modal.importZip.emptyPathError"))}onClose(){let{contentEl:e}=this;e.empty(),this.inputEl&&this.inputEl.removeEventListener("keypress",this.keypressHandler)}};
/*! Bundled license information:

node-stream-zip/node_stream_zip.js:
  (**
   * @license node-stream-zip | (c) 2020 Antelle | https://github.com/antelle/node-stream-zip/blob/master/LICENSE
   * Portions copyright https://github.com/cthackers/adm-zip | https://raw.githubusercontent.com/cthackers/adm-zip/master/LICENSE
   *)
*/
