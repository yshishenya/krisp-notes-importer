/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

\**
['* /** Initializes and reads a chunk of data into a sliding window buffer. */']
\*
\**
['* /** Converts an unsigned integer to a binary string with padding. */']
\*
var Gt=Object.create;var ht=Object.defineProperty;var jt=Object.getOwnPropertyDescriptor;var Yt=Object.getOwnPropertyNames;var Vt=Object.getPrototypeOf,qt=Object.prototype.hasOwnProperty;var Xt=(u,e)=>()=>(e||u((e={exports:{}}).exports,e),e.exports),Jt=(u,e)=>{for(var t in e)ht(u,t,{get:e[t],enumerable:!0})},Rt=(u,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Yt(e))!qt.call(u,i)&&i!==t&&ht(u,i,{get:()=>e[i],enumerable:!(s=jt(e,i))||s.enumerable});return u};var st=(u,e,t)=>(t=u!=null?Gt(Vt(u)):{},Rt(e||!u||!u.__esModule?ht(t,"default",{value:u,enumerable:!0}):t,u)),Qt=u=>Rt(ht({},"__esModule",{value:!0}),u);var Ut=Xt((ve,_t)=>{var M=require("fs"),ie=require("util"),rt=require("path"),Mt=require("events"),Bt=require("zlib"),Zt=require("stream"),c={LOCHDR:30,LOCSIG:67324752,LOCVER:4,LOCFLG:6,LOCHOW:8,LOCTIM:10,LOCCRC:14,LOCSIZ:18,LOCLEN:22,LOCNAM:26,LOCEXT:28,EXTSIG:134695760,EXTHDR:16,EXTCRC:4,EXTSIZ:8,EXTLEN:12,CENHDR:46,CENSIG:33639248,CENVEM:4,CENVER:6,CENFLG:8,CENHOW:10,CENTIM:12,CENCRC:16,CENSIZ:20,CENLEN:24,CENNAM:28,CENEXT:30,CENCOM:32,CENDSK:34,CENATT:36,CENATX:38,CENOFF:42,ENDHDR:22,ENDSIG:101010256,ENDSIGFIRST:80,ENDSUB:8,ENDTOT:10,ENDSIZ:12,ENDOFF:16,ENDCOM:20,MAXFILECOMMENT:65535,ENDL64HDR:20,ENDL64SIG:117853008,ENDL64SIGFIRST:80,ENDL64OFS:8,END64HDR:56,END64SIG:101075792,END64SIGFIRST:80,END64SUB:24,END64TOT:32,END64SIZ:40,END64OFF:48,STORED:0,SHRUNK:1,REDUCED1:2,REDUCED2:3,REDUCED3:4,REDUCED4:5,IMPLODED:6,DEFLATED:8,ENHANCED_DEFLATED:9,PKWARE:10,BZIP2:12,LZMA:14,IBM_TERSE:18,IBM_LZ77:19,FLG_ENC:0,FLG_COMP1:1,FLG_COMP2:2,FLG_DESC:4,FLG_ENH:8,FLG_STR:16,FLG_LNG:1024,FLG_MSK:4096,FLG_ENTRY_ENC:1,EF_ID:0,EF_SIZE:2,ID_ZIP64:1,ID_AVINFO:7,ID_PFS:8,ID_OS2:9,ID_NTFS:10,ID_OPENVMS:12,ID_UNIX:13,ID_FORK:14,ID_PATCH:15,ID_X509_PKCS7:20,ID_X509_CERTID_F:21,ID_X509_CERTID_C:22,ID_STRONGENC:23,ID_RECORD_MGT:24,ID_X509_PKCS7_RL:25,ID_IBM1:101,ID_IBM2:102,ID_POSZIP:18064,EF_ZIP64_OR_32:4294967295,EF_ZIP64_OR_16:65535},J=function(u){let e,t,s,i,n,r,a=this,g=u.storeEntries!==!1?{}:null,m=u.file,f=u.nameEncoding?new TextDecoder(u.nameEncoding):null;E();function E(){u.fd?(e=u.fd,I()):M.open(m,"r",(l,p)=>{if(l)return a.emit("error",l);e=p,I()})}function I(){M.fstat(e,(l,p)=>{if(l)return a.emit("error",l);t=p.size,s=u.chunkSize||Math.round(t/1e3),s=Math.max(Math.min(s,Math.min(128*1024,t)),Math.min(1024,t)),S()})}function L(l,p){if(l||!p)return a.emit("error",l||new Error("Archive read error"));let d=i.lastPos,h=d-i.win.position,b=i.win.buffer,w=i.minPos;for(;--d>=w&&--h>=0;)if(b.length-h>=4&&b[h]===i.firstByte&&b.readUInt32LE(h)===i.sig){i.lastBufferPosition=h,i.lastBytesRead=p,i.complete();return}if(d===w)return a.emit("error",new Error("Bad archive"));if(i.lastPos=d+1,i.chunkSize*=2,d<=w)return a.emit("error",new Error("Bad archive"));let N=Math.min(i.chunkSize,d-w);i.win.expandLeft(N,L)}function S(){let l=Math.min(c.ENDHDR+c.MAXFILECOMMENT,t);i={win:new mt(e),totalReadLength:l,minPos:t-l,lastPos:t,chunkSize:Math.min(1024,s),firstByte:c.ENDSIGFIRST,sig:c.ENDSIG,complete:P},i.win.read(t-i.chunkSize,i.chunkSize,L)}function P(){let l=i.win.buffer,p=i.lastBufferPosition;try{n=new Dt,n.read(l.slice(p,p+c.ENDHDR)),n.headerOffset=i.win.position+p,n.commentLength?a.comment=l.slice(p+c.ENDHDR,p+c.ENDHDR+n.commentLength).toString():a.comment=null,a.entriesCount=n.volumeEntries,a.centralDirectory=n,n.volumeEntries===c.EF_ZIP64_OR_16&&n.totalEntries===c.EF_ZIP64_OR_16||n.size===c.EF_ZIP64_OR_32||n.offset===c.EF_ZIP64_OR_32?y():(i={},Z())}catch(d){a.emit("error",d)}}function y(){let l=c.ENDL64HDR;i.lastBufferPosition>l?(i.lastBufferPosition-=l,k()):(i={win:i.win,totalReadLength:l,minPos:i.win.position-l,lastPos:i.win.position,chunkSize:i.chunkSize,firstByte:c.ENDL64SIGFIRST,sig:c.ENDL64SIG,complete:k},i.win.read(i.lastPos-i.chunkSize,i.chunkSize,L))}function k(){let l=i.win.buffer,p=new Tt;p.read(l.slice(i.lastBufferPosition,i.lastBufferPosition+c.ENDL64HDR));let d=t-p.headerOffset;i={win:i.win,totalReadLength:d,minPos:p.headerOffset,lastPos:i.lastPos,chunkSize:i.chunkSize,firstByte:c.END64SIGFIRST,sig:c.END64SIG,complete:W},i.win.read(t-i.chunkSize,i.chunkSize,L)}function W(){let l=i.win.buffer,p=new xt;p.read(l.slice(i.lastBufferPosition,i.lastBufferPosition+c.END64HDR)),a.centralDirectory.volumeEntries=p.volumeEntries,a.centralDirectory.totalEntries=p.totalEntries,a.centralDirectory.size=p.size,a.centralDirectory.offset=p.offset,a.entriesCount=p.volumeEntries,i={},Z()}function Z(){i={win:new mt(e),pos:n.offset,chunkSize:s,entriesLeft:n.volumeEntries},i.win.read(i.pos,Math.min(s,t-i.pos),_)}function _(l,p){if(l||!p)return a.emit("error",l||new Error("Entries read error"));let d=i.pos-i.win.position,h=i.entry,b=i.win.buffer,w=b.length;try{for(;i.entriesLeft>0;){h||(h=new Ct,h.readHeader(b,d),h.headerOffset=i.win.position+d,i.entry=h,i.pos+=c.CENHDR,d+=c.CENHDR);let N=h.fnameLen+h.extraLen+h.comLen,T=N+(i.entriesLeft>1?c.CENHDR:0);if(w-d<T){i.win.moveRight(s,_,d),i.move=!0;return}h.read(b,d,f),u.skipEntryNameValidation||h.validateName(),g&&(g[h.name]=h),a.emit("entry",h),i.entry=h=null,i.entriesLeft--,i.pos+=N,d+=N}a.emit("ready")}catch(N){a.emit("error",N)}}function U(){if(!g)throw new Error("storeEntries disabled")}Object.defineProperty(this,"ready",{get(){return!1}}),this.entry=function(l){return U(),g[l]},this.entries=function(){return U(),g},this.stream=function(l,p){return this.openEntry(l,(d,h)=>{if(d)return p(d);let b=et(h),w=new Ft(e,b,h.compressedSize);if(h.method!==c.STORED)if(h.method===c.DEFLATED)w=w.pipe(Bt.createInflateRaw());else return p(new Error("Unknown compression method: "+h.method));G(h)&&(w=w.pipe(new kt(w,h.crc,h.size))),p(null,w)},!1)},this.entryDataSync=function(l){let p=null;if(this.openEntry(l,(h,b)=>{p=h,l=b},!0),p)throw p;let d=Buffer.alloc(l.compressedSize);if(new V(e,d,0,l.compressedSize,et(l),h=>{p=h}).read(!0),p)throw p;if(l.method!==c.STORED)if(l.method===c.DEFLATED||l.method===c.ENHANCED_DEFLATED)d=Bt.inflateRawSync(d);else throw new Error("Unknown compression method: "+l.method);if(d.length!==l.size)throw new Error("Invalid size");return G(l)&&new X(l.crc,l.size).data(d),d},this.openEntry=function(l,p,d){if(typeof l=="string"&&(U(),l=g[l],!l))return p(new Error("Entry not found"));if(!l.isFile)return p(new Error("Entry is not file"));if(!e)return p(new Error("Archive closed"));let h=Buffer.alloc(c.LOCHDR);new V(e,h,0,h.length,l.offset,b=>{if(b)return p(b);let w;try{l.readDataHeader(h),l.encrypted&&(w=new Error("Entry encrypted"))}catch(N){w=N}p(w,l)}).read(d)};function et(l){return l.offset+c.LOCHDR+l.fnameLen+l.extraLen}function G(l){return(l.flags&8)!==8}function A(l,p,d){a.stream(l,(h,b)=>{if(h)d(h);else{let w,N;b.on("error",T=>{N=T,w&&(b.unpipe(w),w.close(()=>{d(T)}))}),M.open(p,"w",(T,R)=>{if(T)return d(T);if(N){M.close(e,()=>{d(N)});return}w=M.createWriteStream(p,{fd:R}),w.on("finish",()=>{a.emit("extract",l,p),N||d()}),b.pipe(w)})}})}function D(l,p,d){if(!p.length)return d();let h=p.shift();h=rt.join(l,rt.join(...h)),M.mkdir(h,{recursive:!0},b=>{if(b&&b.code!=="EEXIST")return d(b);D(l,p,d)})}function it(l,p,d,h,b){if(!d.length)return h(null,b);let w=d.shift(),N=rt.join(l,w.name.replace(p,""));A(w,N,T=>{if(T)return h(T,b);it(l,p,d,h,b+1)})}this.extract=function(l,p,d){let h=l||"";if(typeof l=="string"&&(l=this.entry(l),l?h=l.name:h.length&&h[h.length-1]!=="/"&&(h+="/")),!l||l.isDirectory){let b=[],w=[],N={};for(let T in g)if(Object.prototype.hasOwnProperty.call(g,T)&&T.lastIndexOf(h,0)===0){let R=T.replace(h,""),zt=g[T];if(zt.isFile&&(b.push(zt),R=rt.dirname(R)),R&&!N[R]&&R!=="."){N[R]=!0;let j=R.split("/").filter(ct=>ct);for(j.length&&w.push(j);j.length>1;){j=j.slice(0,j.length-1);let ct=j.join("/");if(N[ct]||ct===".")break;N[ct]=!0,w.push(j)}}}w.sort((T,R)=>T.length-R.length),w.length?D(p,w,T=>{T?d(T):it(p,h,b,d,0)}):it(p,h,b,d,0)}else M.stat(p,(b,w)=>{w&&w.isDirectory()?A(l,rt.join(p,rt.basename(l.name)),d):A(l,p,d)})},this.close=function(l){r||!e?(r=!0,l&&l()):(r=!0,M.close(e,p=>{e=null,l&&l(p)}))};let z=Mt.EventEmitter.prototype.emit;this.emit=function(...l){if(!r)return z.call(this,...l)}};J.setFs=function(u){M=u};J.debugLog=(...u)=>{J.debug&&console.log(...u)};ie.inherits(J,Mt.EventEmitter);var Y=Symbol("zip");J.async=class extends Mt.EventEmitter{constructor(e){super();let t=new J(e);t.on("entry",s=>this.emit("entry",s)),t.on("extract",(s,i)=>this.emit("extract",s,i)),this[Y]=new Promise((s,i)=>{t.on("ready",()=>{t.removeListener("error",i),s(t)}),t.on("error",i)})}get entriesCount(){return this[Y].then(e=>e.entriesCount)}get comment(){return this[Y].then(e=>e.comment)}async entry(e){return(await this[Y]).entry(e)}async entries(){return(await this[Y]).entries()}async stream(e){let t=await this[Y];return new Promise((s,i)=>{t.stream(e,(n,r)=>{n?i(n):s(r)})})}async entryData(e){let t=await this.stream(e);return new Promise((s,i)=>{let n=[];t.on("data",r=>n.push(r)),t.on("end",()=>{s(Buffer.concat(n))}),t.on("error",r=>{t.removeAllListeners("end"),i(r)})})}async extract(e,t){let s=await this[Y];return new Promise((i,n)=>{s.extract(e,t,(r,o)=>{r?n(r):i(o)})})}async close(){let e=await this[Y];return new Promise((t,s)=>{e.close(i=>{i?s(i):t()})})}};var Dt=class{read(e){if(e.length!==c.ENDHDR||e.readUInt32LE(0)!==c.ENDSIG)throw new Error("Invalid central directory");this.volumeEntries=e.readUInt16LE(c.ENDSUB),this.totalEntries=e.readUInt16LE(c.ENDTOT),this.size=e.readUInt32LE(c.ENDSIZ),this.offset=e.readUInt32LE(c.ENDOFF),this.commentLength=e.readUInt16LE(c.ENDCOM)}},Tt=class{read(e){if(e.length!==c.ENDL64HDR||e.readUInt32LE(0)!==c.ENDL64SIG)throw new Error("Invalid zip64 central directory locator");this.headerOffset=q(e,c.ENDSUB)}},xt=class{read(e){if(e.length!==c.END64HDR||e.readUInt32LE(0)!==c.END64SIG)throw new Error("Invalid central directory");this.volumeEntries=q(e,c.END64SUB),this.totalEntries=q(e,c.END64TOT),this.size=q(e,c.END64SIZ),this.offset=q(e,c.END64OFF)}},Ct=class{readHeader(e,t){if(e.length<t+c.CENHDR||e.readUInt32LE(t)!==c.CENSIG)throw new Error("Invalid entry header");this.verMade=e.readUInt16LE(t+c.CENVEM),this.version=e.readUInt16LE(t+c.CENVER),this.flags=e.readUInt16LE(t+c.CENFLG),this.method=e.readUInt16LE(t+c.CENHOW);let s=e.readUInt16LE(t+c.CENTIM),i=e.readUInt16LE(t+c.CENTIM+2);this.time=Ot(s,i),this.crc=e.readUInt32LE(t+c.CENCRC),this.compressedSize=e.readUInt32LE(t+c.CENSIZ),this.size=e.readUInt32LE(t+c.CENLEN),this.fnameLen=e.readUInt16LE(t+c.CENNAM),this.extraLen=e.readUInt16LE(t+c.CENEXT),this.comLen=e.readUInt16LE(t+c.CENCOM),this.diskStart=e.readUInt16LE(t+c.CENDSK),this.inattr=e.readUInt16LE(t+c.CENATT),this.attr=e.readUInt32LE(t+c.CENATX),this.offset=e.readUInt32LE(t+c.CENOFF)}readDataHeader(e){if(e.readUInt32LE(0)!==c.LOCSIG)throw new Error("Invalid local header");this.version=e.readUInt16LE(c.LOCVER),this.flags=e.readUInt16LE(c.LOCFLG),this.method=e.readUInt16LE(c.LOCHOW);let t=e.readUInt16LE(c.LOCTIM),s=e.readUInt16LE(c.LOCTIM+2);this.time=Ot(t,s),this.crc=e.readUInt32LE(c.LOCCRC)||this.crc;let i=e.readUInt32LE(c.LOCSIZ);i&&i!==c.EF_ZIP64_OR_32&&(this.compressedSize=i);let n=e.readUInt32LE(c.LOCLEN);n&&n!==c.EF_ZIP64_OR_32&&(this.size=n),this.fnameLen=e.readUInt16LE(c.LOCNAM),this.extraLen=e.readUInt16LE(c.LOCEXT)}read(e,t,s){let i=e.slice(t,t+=this.fnameLen);this.name=s?s.decode(new Uint8Array(i)):i.toString("utf8");let n=e[t-1];this.isDirectory=n===47||n===92,this.extraLen&&(this.readExtra(e,t),t+=this.extraLen),this.comment=this.comLen?e.slice(t,t+this.comLen).toString():null}validateName(){if(/\\|^\w+:|^\/|(^|\/)\.\.(\/|$)/.test(this.name))throw new Error("Malicious entry: "+this.name)}readExtra(e,t){let s,i,n=t+this.extraLen;for(;t<n;)s=e.readUInt16LE(t),t+=2,i=e.readUInt16LE(t),t+=2,c.ID_ZIP64===s&&this.parseZip64Extra(e,t,i),t+=i}parseZip64Extra(e,t,s){s>=8&&this.size===c.EF_ZIP64_OR_32&&(this.size=q(e,t),t+=8,s-=8),s>=8&&this.compressedSize===c.EF_ZIP64_OR_32&&(this.compressedSize=q(e,t),t+=8,s-=8),s>=8&&this.offset===c.EF_ZIP64_OR_32&&(this.offset=q(e,t),t+=8,s-=8),s>=4&&this.diskStart===c.EF_ZIP64_OR_16&&(this.diskStart=e.readUInt32LE(t))}get encrypted(){return(this.flags&c.FLG_ENTRY_ENC)===c.FLG_ENTRY_ENC}get isFile(){return!this.isDirectory}},V=class{constructor(e,t,s,i,n,r){this.fd=e,this.buffer=t,this.offset=s,this.length=i,this.position=n,this.callback=r,this.bytesRead=0,this.waiting=!1}read(e){J.debugLog("read",this.position,this.bytesRead,this.length,this.offset),this.waiting=!0;let t;if(e){let s=0;try{s=M.readSync(this.fd,this.buffer,this.offset+this.bytesRead,this.length-this.bytesRead,this.position+this.bytesRead)}catch(i){t=i}this.readCallback(e,t,t?s:null)}else M.read(this.fd,this.buffer,this.offset+this.bytesRead,this.length-this.bytesRead,this.position+this.bytesRead,this.readCallback.bind(this,e))}readCallback(e,t,s){if(typeof s=="number"&&(this.bytesRead+=s),t||!s||this.bytesRead===this.length)return this.waiting=!1,this.callback(t,this.bytesRead);this.read(e)}},mt=class{constructor(e){this.position=0,this.buffer=Buffer.alloc(0),this.fd=e,this.fsOp=null}checkOp(){if(this.fsOp&&this.fsOp.waiting)throw new Error("Operation in progress")}read(e,t,s){this.checkOp(),this.buffer.length<t&&(this.buffer=Buffer.alloc(t)),this.position=e,this.fsOp=new V(this.fd,this.buffer,0,t,this.position,s).read()}expandLeft(e,t){this.checkOp(),this.buffer=Buffer.concat([Buffer.alloc(e),this.buffer]),this.position-=e,this.position<0&&(this.position=0),this.fsOp=new V(this.fd,this.buffer,0,e,this.position,t).read()}expandRight(e,t){this.checkOp();let s=this.buffer.length;this.buffer=Buffer.concat([this.buffer,Buffer.alloc(e)]),this.fsOp=new V(this.fd,this.buffer,s,e,this.position+s,t).read()}moveRight(e,t,s){this.checkOp(),s?this.buffer.copy(this.buffer,0,s):s=0,this.position+=s,this.fsOp=new V(this.fd,this.buffer,this.buffer.length-s,s,this.position+this.buffer.length-s,t).read()}},Ft=class extends Zt.Readable{constructor(e,t,s){super(),this.fd=e,this.offset=t,this.length=s,this.pos=0,this.readCallback=this.readCallback.bind(this)}_read(e){let t=Buffer.alloc(Math.min(e,this.length-this.pos));t.length?M.read(this.fd,t,0,t.length,this.offset+this.pos,this.readCallback):this.push(null)}readCallback(e,t,s){this.pos+=t,e?(this.emit("error",e),this.push(null)):t?(t!==s.length&&(s=s.slice(0,t)),this.push(s)):this.push(null)}},kt=class extends Zt.Transform{constructor(e,t,s){super(),this.verify=new X(t,s),e.on("error",i=>{this.emit("error",i)})}_transform(e,t,s){let i;try{this.verify.data(e)}catch(n){i=n}s(i,e)}},X=class{constructor(e,t){this.crc=e,this.size=t,this.state={crc:-1,size:0}}data(e){let t=X.getCrcTable(),s=this.state.crc,i=0,n=e.length;for(;--n>=0;)s=t[(s^e[i++])&255]^s>>>8;if(this.state.crc=s,this.state.size+=e.length,this.state.size>=this.size){let r=Buffer.alloc(4);if(r.writeInt32LE(~this.state.crc&4294967295,0),s=r.readUInt32LE(0),s!==this.crc)throw new Error("Invalid CRC");if(this.state.size!==this.size)throw new Error("Invalid size")}}static getCrcTable(){let e=X.crcTable;if(!e){X.crcTable=e=[];let t=Buffer.alloc(4);for(let s=0;s<256;s++){let i=s;for(let n=8;--n>=0;)i&1?i=3988292384^i>>>1:i=i>>>1;i<0&&(t.writeInt32LE(i,0),i=t.readUInt32LE(0)),e[s]=i}}return e}};function Ot(u,e){let t=Wt(u,16),s=Wt(e,16),i={h:parseInt(t.slice(0,5).join(""),2),m:parseInt(t.slice(5,11).join(""),2),s:parseInt(t.slice(11,16).join(""),2)*2,Y:parseInt(s.slice(0,7).join(""),2)+1980,M:parseInt(s.slice(7,11).join(""),2),D:parseInt(s.slice(11,16).join(""),2)},n=[i.Y,i.M,i.D].join("-")+" "+[i.h,i.m,i.s].join(":")+" GMT+0";return new Date(n).getTime()}function Wt(u,e){let t=(u>>>0).toString(2);for(;t.length<e;)t="0"+t;return t.split("")}function q(u,e){return u.readUInt32LE(e+4)*4294967296+u.readUInt32LE(e)}_t.exports=J});var se={};Jt(se,{default:()=>yt});module.exports=Qt(se);var F=require("obsidian");var x={watchedFolderPath:"",notesFolderPath:"KrispNotes/Notes",attachmentsFolderPath:"KrispNotes/Attachments",noteNameTemplate:"{{YYYY}}-{{MM}}-{{DD}}_{{HHMM}}_{{meetingTitle}}",attachmentNameTemplate:"{{YYYY}}-{{MM}}-{{DD}}_{{meetingTitle}}_audio",noteContentTemplate:`---
title: {{meetingTitle}}
date: {{date}}
time: {{time}}
type: meeting
source: krisp
tags:
{{yamlTags}}
  - meeting
  - krisp
audio: "{{audioPathForYaml}}"
participants: [{{participants}}]
duration: {{duration}}
meeting_stats:
  participants_count: {{participantsCount}}
  transcript_length: {{transcriptWords}}
  most_active_speaker: "{{mostActiveSpeaker}}"
---

# \u{1F399}\uFE0F {{meetingTitle}}

> [!info]+ \u{1F4CB} \u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0432\u0441\u0442\u0440\u0435\u0447\u0435
>
> **\u{1F4C5} \u0414\u0430\u0442\u0430:** {{date}}
> **\u23F0 \u0412\u0440\u0435\u043C\u044F:** {{time}}
> **\u23F1\uFE0F \u0414\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C:** {{duration}}
> **\u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0438:** {{participantsCount}} \u0447\u0435\u043B\u043E\u0432\u0435\u043A
> **\u{1F4CA} \u0421\u043B\u043E\u0432 \u0432 \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442\u0435:** {{transcriptWords}}
> **\u{1F5E3}\uFE0F \u0421\u0430\u043C\u044B\u0439 \u0430\u043A\u0442\u0438\u0432\u043D\u044B\u0439:** {{mostActiveSpeaker}}

---

## \u{1F3A7} \u0410\u0443\u0434\u0438\u043E\u0437\u0430\u043F\u0438\u0441\u044C

![[{{audioPathForYaml}}]]

*\u0414\u043B\u044F \u0432\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 \u0432\u0441\u0442\u0440\u043E\u0435\u043D\u043D\u044B\u0439 \u043F\u043B\u0435\u0435\u0440 Obsidian \u0438\u043B\u0438 \u043E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 \u0444\u0430\u0439\u043B: [[{{audioPathForYaml}}]]*

---

## \u{1F4DD} \u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435

> [!note]+ \u{1F4A1} \u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B \u0432\u0441\u0442\u0440\u0435\u0447\u0438
>
> {{summary}}

---

## \u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0438 \u0432\u0441\u0442\u0440\u0435\u0447\u0438

{{participantsList}}

### \u{1F4C8} \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438

{{participantsStats}}

---

## \u2705 \u0417\u0430\u0434\u0430\u0447\u0438 \u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F

> [!todo]+ \u{1F4CB} Action Items
>
> {{actionItemsList}}

---

## \u{1F511} \u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B

> [!important]+ \u2B50 Key Points
>
> {{keyPointsList}}

---

## \u{1F3F7}\uFE0F \u0418\u0437\u0432\u043B\u0435\u0447\u0435\u043D\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F

{{extractedEntities}}

---

## \u{1F4CB} \u041F\u043E\u043B\u043D\u0430\u044F \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0446\u0438\u044F

> [!quote]- \u{1F399}\uFE0F \u0422\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u0432\u0441\u0442\u0440\u0435\u0447\u0438 ({{transcriptWords}} \u0441\u043B\u043E\u0432)
>
> {{formattedTranscript}}

---

## \u{1F517} \u0421\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0435 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u044B

- \u{1F4C4} **\u0417\u0430\u043C\u0435\u0442\u043A\u0430:** [[{{noteFileName}}]]
- \u{1F3B5} **\u0410\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B:** [[{{audioPathForYaml}}]]

{{relatedLinks}}

---

## \u{1F4CA} \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u0432\u0441\u0442\u0440\u0435\u0447\u0438

| \u041F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 | \u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 |
|----------|----------|
| \u{1F4C5} \u0414\u0430\u0442\u0430 | {{date}} |
| \u23F0 \u0412\u0440\u0435\u043C\u044F \u043D\u0430\u0447\u0430\u043B\u0430 | {{time}} |
| \u23F1\uFE0F \u0414\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C | {{duration}} |
| \u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432 | {{participantsCount}} |
| \u{1F4DD} \u0421\u043B\u043E\u0432 \u0432 \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442\u0435 | {{transcriptWords}} |
| \u{1F5E3}\uFE0F \u0421\u0430\u043C\u044B\u0439 \u0430\u043A\u0442\u0438\u0432\u043D\u044B\u0439 | {{mostActiveSpeaker}} |

---

> [!tip]+ \u{1F916} \u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E\u0431 \u0438\u043C\u043F\u043E\u0440\u0442\u0435
>
> **\u0421\u043E\u0437\u0434\u0430\u043D\u043E:** Krisp Notes Importer
> **\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043E:** {{importDate}}
> **\u0418\u0441\u0442\u043E\u0447\u043D\u0438\u043A:** Krisp Meeting Archive
`,duplicateStrategy:"rename",deleteZipAfterImport:!1,openNoteAfterImport:!0,autoScanEnabled:!1,language:"en"};var ut=class{constructor(e){this.plugin=e}async loadSettings(){this.settings=Object.assign({},x,await this.plugin.loadData())}async saveSettings(){await this.plugin.saveData(this.settings)}getSetting(e){return this.settings?this.settings[e]:x[e]}getAllSettings(){return this.settings||x}async updateSetting(e,t){this.settings||await this.loadSettings(),this.settings[e]=t,await this.saveSettings()}validateSettings(){let e=[];return(!this.settings.watchedFolderPath||this.settings.watchedFolderPath.trim()==="")&&e.push("\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),(!this.settings.notesFolderPath||this.settings.notesFolderPath.trim()==="")&&e.push("\u041F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435 \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),(!this.settings.attachmentsFolderPath||this.settings.attachmentsFolderPath.trim()==="")&&e.push("\u041F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435 \u0432\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),(!this.settings.noteNameTemplate||this.settings.noteNameTemplate.trim()==="")&&e.push("Note name template cannot be empty"),(!this.settings.attachmentNameTemplate||this.settings.attachmentNameTemplate.trim()==="")&&e.push("Audio name template cannot be empty"),["skip","overwrite","rename"].includes(this.settings.duplicateStrategy)||e.push(`\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430\u044F \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432: ${this.settings.duplicateStrategy}`),["en","ru"].includes(this.settings.language)||e.push(`\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u044F\u0437\u044B\u043A: ${this.settings.language}`),{isValid:e.length===0,errors:e}}getValidatedSettings(){let e=this.validateSettings();return e.isValid?this.settings:(console.warn("[Krisp Importer] Settings contain errors:",e.errors),this.getSettingsWithDefaults())}getSettingsWithDefaults(){var e,t,s,i,n;return{...x,...this.settings,watchedFolderPath:((e=this.settings.watchedFolderPath)==null?void 0:e.trim())||x.watchedFolderPath,notesFolderPath:((t=this.settings.notesFolderPath)==null?void 0:t.trim())||x.notesFolderPath,attachmentsFolderPath:((s=this.settings.attachmentsFolderPath)==null?void 0:s.trim())||x.attachmentsFolderPath,noteNameTemplate:((i=this.settings.noteNameTemplate)==null?void 0:i.trim())||x.noteNameTemplate,attachmentNameTemplate:((n=this.settings.attachmentNameTemplate)==null?void 0:n.trim())||x.attachmentNameTemplate,duplicateStrategy:["skip","overwrite","rename"].includes(this.settings.duplicateStrategy)?this.settings.duplicateStrategy:x.duplicateStrategy,language:["en","ru"].includes(this.settings.language)?this.settings.language:x.language}}};var v=require("obsidian");var te={settings:{title:"Krisp Notes Importer Settings",sections:{basic:"\u{1F527} Basic Settings",storage:"\u{1F4BE} Obsidian Storage",templates:"\u{1F4DD} Templates & Naming",duplicates:"\u{1F504} Duplicate Handling",postImport:"\u26A1 Post-Import Actions",advanced:"\u{1F6E0}\uFE0F Advanced & Maintenance",coreAutomation:"\u{1F4C2} Core: Watching & Automation",namingAndTemplates:"\u{1F3A8} Appearance & Naming",importBehavior:"\u2699\uFE0F Import Behavior",manualOperations:"\u{1F6E0}\uFE0F Manual Operations & Diagnostics",aboutPlugin:"\u2139\uFE0F About Plugin"},fields:{watchedFolder:{name:"Watched Folder Path",desc:"Full path to the folder where Krisp saves ZIP archives"},autoScan:{name:"Enable Auto-Watching",desc:"Automatically monitor the folder for new ZIP files"},notesFolder:{name:"Notes Folder",desc:"Folder in your Obsidian vault for saving meeting notes"},attachmentsFolder:{name:"Attachments Folder",desc:"Folder in your Obsidian vault for saving audio files"},noteNameTemplate:{name:"Note Name Template",desc:"Template for naming note files. Available variables: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"},attachmentNameTemplate:{name:"Audio Name Template",desc:"Template for naming audio files. Same variables available"},noteContentTemplate:{name:"Note Content Template",desc:"Template for note content. Available variables: {{title}}, {{date}}, {{time}}, {{participants}}, {{summary}}, {{actionItems}}, {{keyPoints}}, {{transcript}}, {{audioLink}}"},duplicateStrategy:{name:"Duplicate Strategy",desc:"What to do when a meeting with the same name already exists",options:{skip:"Skip import",overwrite:"Overwrite existing",rename:"Create with suffix"}},deleteZipAfterImport:{name:"Delete ZIP after import",desc:"Automatically delete the ZIP file after successful import"},openNoteAfterImport:{name:"Open note after import",desc:"Automatically open the created note in Obsidian"},language:{name:"Interface Language",desc:"Choose the language for the plugin interface"}},buttons:{testImport:"Test Import",massImport:"Import All Files",resetSettings:"Reset Settings",showLogs:"Show Logs",restoreTemplate:"Restore Default Template"},info:{title:"Plugin Information",version:"Version",status:"Status",features:["\u2705 Manual ZIP import","\u2705 Automatic folder watching","\u2705 Beautiful note formatting with callouts","\u2705 Advanced participant analytics","\u2705 Complete UI settings","\u2705 Logging and diagnostic system","\u2705 Bilingual support (English/Russian)"],commands:["Import ZIP file manually","Start auto-watching folder","Stop auto-watching","Scan existing files","Check watching status","Debug current settings"],errors:{watchedFolderMissing:"Watched folder path is not specified. Auto-watching cannot start.",watchedFolderEmptyAutoscan:"Watched folder path is empty. Auto-watching stopped if it was active for a previous path."}},status:{title:"\u{1F4CA} Current Status",watchingActive:"Auto-watching is ACTIVE for folder: {{path}}",watchingInactive:"Auto-watching is INACTIVE.",watchingWarningFolderMissing:"Auto-watching is ON, but no folder specified. Please set the 'Watched Folder Path'.",watchingStarting:"Auto-watching is starting...",inactiveDetailEnableAutoScan:"Hint: Enable 'Enable Auto-Watching' option.",inactiveDetailSetPath:"Hint: Set the 'Watched Folder Path'.",serviceUnavailable:"File Watcher Service is not available. Please check plugin logs or restart Obsidian."}},commands:{importZip:"Import ZIP file manually",startWatching:"Start auto-watching folder",stopWatching:"Stop auto-watching",scanExisting:"Process All Existing Files",checkStatus:"Check watching status",debugSettings:"Debug current settings",scanExistingDesc:"Scan the watched folder and import all existing ZIP files that haven't been processed yet."},notifications:{success:{imported:"Successfully imported: {{fileName}}",watchingStarted:"Started watching folder: {{folderPath}}",watchingStopped:"Stopped watching folder.",settingsReset:"Settings have been reset to default."},error:{invalidZip:"Invalid ZIP file: {{fileName}}",missingFiles:"Missing required files in ZIP: {{fileName}}",createNote:"Error creating note for: {{fileName}} - {{error}}",copyAudio:"Error copying audio for: {{fileName}} - {{error}}",watchingFailed:"Failed to start watching: {{error}}",noFileSelected:"No file selected.",importFailedGeneral:"Import failed: {{error}}",massImportFailed:"Mass import failed. Check logs for details."},warning:{duplicateSkipped:"Skipped duplicate: {{fileName}}",duplicateRenamed:"Renamed duplicate: {{newName}} from {{originalName}}",duplicateOverwritten:"Overwritten duplicate: {{fileName}}"},info:{processing:"Processing: {{fileName}}...",scanningFolder:"Scanning folder: {{folderPath}}...",scanningFolderComplete:"Folder scan and import complete!"}},statusBar:{idle:"Idle",watching:"Watching: {{path}}",processing:"Processing...",error:"Error: {{message}}"},modals:{testImport:{title:"Test Manual Import",placeholder:"Select Krisp ZIP file...",button:"Import Selected File",description:"Manually select a ZIP file to test the import process.",importing:"Importing..."},confirmReset:{title:"Confirm Reset",message:"Are you sure you want to reset all settings to their default values? This action cannot be undone.",confirm:"Reset Settings",cancel:"Cancel"},logs:{title:"Plugin Logs",export:"Export Logs",clear:"Clear Logs",close:"Close",description:"View recent activity logs for troubleshooting.",noLogs:"No logs yet.",copy:"Copy Logs",copiedNotice:"Logs copied to clipboard!",clearedNotice:"Logs cleared!"}},settingsInfoTooltips:{githubRepoTooltip:"Visit GitHub Repository",reportIssueTooltip:"Report an Issue",developer:"Developed by: {{author}}",supportDevelopment:"If you find this plugin useful, consider supporting its development: ",donateLinkText:"Buy Me a Coffee",pluginDescription:"Description: {{description}}",resetSettingsDesc:"Reset all plugin settings to their default values.",supportDevelopmentPlaceholder:"Support information for this plugin is not specified by the author."}},ee={settings:{title:"\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 Krisp Notes Importer",sections:{basic:"\u{1F527} \u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",storage:"\u{1F4BE} \u0425\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0432 Obsidian",templates:"\u{1F4DD} \u0428\u0430\u0431\u043B\u043E\u043D\u044B \u0438 \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435",duplicates:"\u{1F504} \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432",postImport:"\u26A1 \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",advanced:"\u{1F6E0}\uFE0F \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u043D\u044B\u0435 \u0438 \u041E\u0431\u0441\u043B\u0443\u0436\u0438\u0432\u0430\u043D\u0438\u0435",coreAutomation:"\u{1F4C2} \u042F\u0434\u0440\u043E: \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0438 \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044F",namingAndTemplates:"\u{1F3A8} \u0412\u043D\u0435\u0448\u043D\u0438\u0439 \u0432\u0438\u0434 \u0438 \u0418\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435",importBehavior:"\u2699\uFE0F \u041F\u043E\u0432\u0435\u0434\u0435\u043D\u0438\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",manualOperations:"\u{1F6E0}\uFE0F \u0420\u0443\u0447\u043D\u044B\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438 \u0438 \u0414\u0438\u0430\u0433\u043D\u043E\u0441\u0442\u0438\u043A\u0430",aboutPlugin:"\u2139\uFE0F \u041E \u043F\u043B\u0430\u0433\u0438\u043D\u0435"},fields:{watchedFolder:{name:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430",desc:"\u041F\u043E\u043B\u043D\u044B\u0439 \u043F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435, \u0433\u0434\u0435 Krisp \u0441\u043E\u0445\u0440\u0430\u043D\u044F\u0435\u0442 ZIP-\u0430\u0440\u0445\u0438\u0432\u044B"},autoScan:{name:"\u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0442\u044C \u043F\u0430\u043F\u043A\u0443 \u043D\u0430 \u043F\u0440\u0435\u0434\u043C\u0435\u0442 \u043D\u043E\u0432\u044B\u0445 ZIP-\u0444\u0430\u0439\u043B\u043E\u0432"},notesFolder:{name:"\u041F\u0430\u043F\u043A\u0430 \u0434\u043B\u044F \u0437\u0430\u043C\u0435\u0442\u043E\u043A",desc:"\u041F\u0430\u043F\u043A\u0430 \u0432 \u0432\u0430\u0448\u0435\u043C \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 Obsidian \u0434\u043B\u044F \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u0432\u0441\u0442\u0440\u0435\u0447"},attachmentsFolder:{name:"\u041F\u0430\u043F\u043A\u0430 \u0434\u043B\u044F \u0432\u043B\u043E\u0436\u0435\u043D\u0438\u0439",desc:"\u041F\u0430\u043F\u043A\u0430 \u0432 \u0432\u0430\u0448\u0435\u043C \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 Obsidian \u0434\u043B\u044F \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B\u043E\u0432"},noteNameTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0438\u043C\u0435\u043D\u0438 \u0437\u0430\u043C\u0435\u0442\u043A\u0438",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u044F \u0444\u0430\u0439\u043B\u043E\u0432 \u0437\u0430\u043C\u0435\u0442\u043E\u043A. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"},attachmentNameTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0438\u043C\u0435\u043D\u0438 \u0430\u0443\u0434\u0438\u043E",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B\u043E\u0432. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B \u0442\u0435 \u0436\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435"},noteContentTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u043C\u043E\u0433\u043E \u0437\u0430\u043C\u0435\u0442\u043A\u0438",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u043C\u043E\u0433\u043E \u0437\u0430\u043C\u0435\u0442\u043A\u0438. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435: {{title}}, {{date}}, {{time}}, {{participants}}, {{summary}}, {{actionItems}}, {{keyPoints}}, {{transcript}}, {{audioLink}}"},duplicateStrategy:{name:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432",desc:"\u0427\u0442\u043E \u0434\u0435\u043B\u0430\u0442\u044C, \u043A\u043E\u0433\u0434\u0430 \u0432\u0441\u0442\u0440\u0435\u0447\u0430 \u0441 \u0442\u0430\u043A\u0438\u043C \u0436\u0435 \u0438\u043C\u0435\u043D\u0435\u043C \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",options:{skip:"\u041F\u0440\u043E\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u0438\u043C\u043F\u043E\u0440\u0442",overwrite:"\u041F\u0435\u0440\u0435\u0437\u0430\u043F\u0438\u0441\u0430\u0442\u044C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0443\u044E",rename:"\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0441 \u0441\u0443\u0444\u0444\u0438\u043A\u0441\u043E\u043C"}},deleteZipAfterImport:{name:"\u0423\u0434\u0430\u043B\u044F\u0442\u044C ZIP \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u0443\u0434\u0430\u043B\u044F\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u043F\u043E\u0441\u043B\u0435 \u0443\u0441\u043F\u0435\u0448\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430"},openNoteAfterImport:{name:"\u041E\u0442\u043A\u0440\u044B\u0432\u0430\u0442\u044C \u0437\u0430\u043C\u0435\u0442\u043A\u0443 \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043E\u0442\u043A\u0440\u044B\u0432\u0430\u0442\u044C \u0441\u043E\u0437\u0434\u0430\u043D\u043D\u0443\u044E \u0437\u0430\u043C\u0435\u0442\u043A\u0443 \u0432 Obsidian"},language:{name:"\u042F\u0437\u044B\u043A \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430",desc:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u044F\u0437\u044B\u043A \u0434\u043B\u044F \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043F\u043B\u0430\u0433\u0438\u043D\u0430"}},buttons:{testImport:"\u0422\u0435\u0441\u0442\u043E\u0432\u044B\u0439 \u0438\u043C\u043F\u043E\u0440\u0442",massImport:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u0441\u0435 \u0444\u0430\u0439\u043B\u044B",resetSettings:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",showLogs:"\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043B\u043E\u0433\u0438",restoreTemplate:"\u0412\u043E\u0441\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0441\u0442\u0430\u043D\u0434\u0430\u0440\u0442\u043D\u044B\u0439 \u0448\u0430\u0431\u043B\u043E\u043D"},info:{title:"\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u043F\u043B\u0430\u0433\u0438\u043D\u0435",version:"\u0412\u0435\u0440\u0441\u0438\u044F",status:"\u0421\u0442\u0430\u0442\u0443\u0441",features:["\u2705 \u0420\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 ZIP","\u2705 \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438","\u2705 \u041A\u0440\u0430\u0441\u0438\u0432\u043E\u0435 \u043E\u0444\u043E\u0440\u043C\u043B\u0435\u043D\u0438\u0435 \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u0441 callouts","\u2705 \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u043D\u0430\u044F \u0430\u043D\u0430\u043B\u0438\u0442\u0438\u043A\u0430 \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432","\u2705 \u041F\u043E\u043B\u043D\u044B\u0439 UI \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043A","\u2705 \u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u043B\u043E\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438 \u0434\u0438\u0430\u0433\u043D\u043E\u0441\u0442\u0438\u043A\u0438","\u2705 \u0414\u0432\u0443\u044F\u0437\u044B\u0447\u043D\u0430\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0430 (English/\u0420\u0443\u0441\u0441\u043A\u0438\u0439)"],commands:["\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u0432\u0440\u0443\u0447\u043D\u0443\u044E","\u0417\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438","\u041E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435","\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0444\u0430\u0439\u043B\u044B","\u041F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F","\u041E\u0442\u043B\u0430\u0434\u0438\u0442\u044C \u0442\u0435\u043A\u0443\u0449\u0438\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438"],errors:{watchedFolderMissing:"\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D. \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0437\u0430\u043F\u0443\u0449\u0435\u043D\u043E.",watchedFolderEmptyAutoscan:"\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043F\u0443\u0441\u0442. \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E, \u0435\u0441\u043B\u0438 \u0431\u044B\u043B\u043E \u0430\u043A\u0442\u0438\u0432\u043D\u043E \u0434\u043B\u044F \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0435\u0433\u043E \u043F\u0443\u0442\u0438."}},status:{title:"\u{1F4CA} \u0422\u0435\u043A\u0443\u0449\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441",watchingActive:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0410\u041A\u0422\u0418\u0412\u041D\u041E \u0434\u043B\u044F \u043F\u0430\u043F\u043A\u0438: {{path}}",watchingInactive:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u041D\u0415\u0410\u041A\u0422\u0418\u0412\u041D\u041E.",watchingWarningFolderMissing:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0412\u041A\u041B\u042E\u0427\u0415\u041D\u041E, \u043D\u043E \u043F\u0430\u043F\u043A\u0430 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430. \u0423\u043A\u0430\u0436\u0438\u0442\u0435 '\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430'.",watchingStarting:"\u0417\u0430\u043F\u0443\u0441\u043A \u0430\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F...",inactiveDetailEnableAutoScan:"\u041F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0430: \u0412\u043A\u043B\u044E\u0447\u0438\u0442\u0435 \u043E\u043F\u0446\u0438\u044E '\u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435'.",inactiveDetailSetPath:"\u041F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0430: \u0423\u043A\u0430\u0436\u0438\u0442\u0435 '\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430'.",serviceUnavailable:"\u0421\u0435\u0440\u0432\u0438\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F \u0444\u0430\u0439\u043B\u043E\u0432 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043B\u043E\u0433\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u0438\u043B\u0438 \u043F\u0435\u0440\u0435\u0437\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u0435 Obsidian."}},commands:{importZip:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u0432\u0440\u0443\u0447\u043D\u0443\u044E",startWatching:"\u041D\u0430\u0447\u0430\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438",stopWatching:"\u041E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435",scanExisting:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0444\u0430\u0439\u043B\u044B",checkStatus:"\u041F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F",debugSettings:"\u041E\u0442\u043B\u0430\u0434\u0438\u0442\u044C \u0442\u0435\u043A\u0443\u0449\u0438\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",scanExistingDesc:"\u041F\u0440\u043E\u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0443\u044E \u043F\u0430\u043F\u043A\u0443 \u0438 \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 ZIP-\u0444\u0430\u0439\u043B\u044B, \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u0435\u0449\u0435 \u043D\u0435 \u0431\u044B\u043B\u0438 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u044B."},notifications:{success:{imported:"\u0423\u0441\u043F\u0435\u0448\u043D\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D: {{fileName}}",watchingStarted:"\u041D\u0430\u0447\u0430\u0442\u043E \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: {{folderPath}}",watchingStopped:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E.",settingsReset:"\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0431\u044B\u043B\u0438 \u0441\u0431\u0440\u043E\u0448\u0435\u043D\u044B \u0434\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E."},error:{invalidZip:"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 ZIP-\u0444\u0430\u0439\u043B: {{fileName}}",missingFiles:"\u0412 ZIP \u043E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u044B\u0435 \u0444\u0430\u0439\u043B\u044B: {{fileName}}",createNote:"\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0437\u0430\u043C\u0435\u0442\u043A\u0438 \u0434\u043B\u044F: {{fileName}} - {{error}}",copyAudio:"\u041E\u0448\u0438\u0431\u043A\u0430 \u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E \u0434\u043B\u044F: {{fileName}} - {{error}}",watchingFailed:"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0447\u0430\u0442\u044C \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435: {{error}}",noFileSelected:"\u0424\u0430\u0439\u043B \u043D\u0435 \u0432\u044B\u0431\u0440\u0430\u043D.",importFailedGeneral:"\u041E\u0448\u0438\u0431\u043A\u0430 \u0438\u043C\u043F\u043E\u0440\u0442\u0430: {{error}}",massImportFailed:"\u041C\u0430\u0441\u0441\u043E\u0432\u044B\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u043D\u0435 \u0443\u0434\u0430\u043B\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043B\u043E\u0433\u0438 \u0434\u043B\u044F \u0434\u0435\u0442\u0430\u043B\u0435\u0439."},warning:{duplicateSkipped:"\u041F\u0440\u043E\u043F\u0443\u0449\u0435\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{fileName}}",duplicateRenamed:"\u041F\u0435\u0440\u0435\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{newName}} \u0438\u0437 {{originalName}}",duplicateOverwritten:"\u041F\u0435\u0440\u0435\u0437\u0430\u043F\u0438\u0441\u0430\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{fileName}}"},info:{processing:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430: {{fileName}}...",scanningFolder:"\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: {{folderPath}}...",scanningFolderComplete:"\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u0438 \u0438\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u044B!"}},statusBar:{idle:"\u041E\u0436\u0438\u0434\u0430\u043D\u0438\u0435",watching:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435: {{path}}",processing:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430...",error:"\u041E\u0448\u0438\u0431\u043A\u0430: {{message}}"},modals:{testImport:{title:"\u0422\u0435\u0441\u0442\u043E\u0432\u044B\u0439 \u0440\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442",placeholder:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 ZIP-\u0430\u0440\u0445\u0438\u0432 Krisp...",button:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0439 \u0444\u0430\u0439\u043B",description:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 ZIP-\u0430\u0440\u0445\u0438\u0432 \u0432\u0440\u0443\u0447\u043D\u0443\u044E, \u0447\u0442\u043E\u0431\u044B \u043F\u0440\u043E\u0442\u0435\u0441\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0441\u0441 \u0438\u043C\u043F\u043E\u0440\u0442\u0430.",importing:"\u0418\u043C\u043F\u043E\u0440\u0442..."},confirmReset:{title:"\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0441\u0431\u0440\u043E\u0441",message:"\u0412\u044B \u0443\u0432\u0435\u0440\u0435\u043D\u044B, \u0447\u0442\u043E \u0445\u043E\u0442\u0438\u0442\u0435 \u0441\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u0432\u0441\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0434\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E? \u042D\u0442\u043E \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043D\u0435\u043B\u044C\u0437\u044F \u0431\u0443\u0434\u0435\u0442 \u043E\u0442\u043C\u0435\u043D\u0438\u0442\u044C.",confirm:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",cancel:"\u041E\u0442\u043C\u0435\u043D\u0430"},logs:{title:"\u041B\u043E\u0433\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430",export:"\u042D\u043A\u0441\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043B\u043E\u0433\u0438",clear:"\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u044C \u043B\u043E\u0433\u0438",close:"\u0417\u0430\u043A\u0440\u044B\u0442\u044C",description:"\u041F\u0440\u043E\u0441\u043C\u043E\u0442\u0440 \u043D\u0435\u0434\u0430\u0432\u043D\u0438\u0445 \u043B\u043E\u0433\u043E\u0432 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438 \u0434\u043B\u044F \u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u043D\u0435\u043F\u043E\u043B\u0430\u0434\u043E\u043A.",noLogs:"\u041B\u043E\u0433\u043E\u0432 \u043F\u043E\u043A\u0430 \u043D\u0435\u0442.",copy:"\u041A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043B\u043E\u0433\u0438",copiedNotice:"\u041B\u043E\u0433\u0438 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u044B \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430!",clearedNotice:"\u041B\u043E\u0433\u0438 \u043E\u0447\u0438\u0449\u0435\u043D\u044B!"}},settingsInfoTooltips:{githubRepoTooltip:"\u041F\u043E\u0441\u0435\u0442\u0438\u0442\u044C \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439 GitHub",reportIssueTooltip:"\u0421\u043E\u043E\u0431\u0449\u0438\u0442\u044C \u043E \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0435",developer:"\u0420\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u043E: {{author}}",supportDevelopment:"\u0415\u0441\u043B\u0438 \u0432\u044B \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u0435 \u044D\u0442\u043E\u0442 \u043F\u043B\u0430\u0433\u0438\u043D \u043F\u043E\u043B\u0435\u0437\u043D\u044B\u043C, \u0440\u0430\u0441\u0441\u043C\u043E\u0442\u0440\u0438\u0442\u0435 \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438 \u0435\u0433\u043E \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438: ",donateLinkText:"\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0430\u0432\u0442\u043E\u0440\u0430",pluginDescription:"\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435: {{description}}",resetSettingsDesc:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u0432\u0441\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u043A \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\u043C \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E.",supportDevelopmentPlaceholder:"\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0435 \u0434\u043B\u044F \u044D\u0442\u043E\u0433\u043E \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u043E\u043C."}},nt=class{constructor(e){this.currentLanguage="en";this.strings={en:te,ru:ee};e&&(this.currentLanguage=e)}setLanguage(e){this.currentLanguage=e}getCurrentLanguage(){return this.currentLanguage}t(e,t){let s=e.split("."),i=this.strings[this.currentLanguage];for(let n of s)if(i&&typeof i=="object"&&n in i)i=i[n];else{i=this.strings.en;for(let r of s)if(i&&typeof i=="object"&&r in i)i=i[r];else return`[Missing: ${e}]`;break}if(typeof i!="string")return`[Invalid: ${e}]`;if(t)for(let[n,r]of Object.entries(t))i=i.replace(new RegExp(`{{${n}}}`,"g"),r);return i}getSettingsStrings(){return this.strings[this.currentLanguage].settings}getCommandStrings(){return this.strings[this.currentLanguage].commands}getNotificationStrings(){return this.strings[this.currentLanguage].notifications}getStatusBarStrings(){return this.strings[this.currentLanguage].statusBar}getModalStrings(){return this.strings[this.currentLanguage].modals}};var dt=class extends v.PluginSettingTab{constructor(t,s){super(t,s);this.plugin=s,this.plugin.settingsTab=this;let i=this.plugin.settingsManager.getSetting("language")||"en";this.localization=s.localizationService||new nt(i)}updateLanguage(t){this.localization.setLanguage(t),this.display()}display(){let{containerEl:t}=this;t.empty(),t.createEl("h1",{text:this.localization.t("settings.title",{fallback:"Krisp Notes Importer Settings"})}),this.renderCurrentStatus(t),this.renderLanguageSetting(t),this.renderCoreAutomationSettings(t),this.renderStorageSettings(t),this.renderNamingAndTemplateSettings(t),this.renderImportBehaviorSettings(t),this.renderManualOperationsAndDiagnostics(t),this.renderAboutPlugin(t)}renderCurrentStatus(t){let s=t.createDiv({cls:"krisp-importer-status-section"});s.createEl("h2",{text:this.localization.t("settings.status.title",{fallback:"\u{1F4CA} Current Status"})});let i=s.createEl("div",{cls:"krisp-status-messages"});i.style.padding="10px",i.style.backgroundColor="var(--background-secondary)",i.style.borderRadius="5px",i.style.marginBottom="15px",i.style.borderLeft="4px solid var(--text-muted)";let n=[],r="var(--color-grey)";if(this.plugin.fileWatcherService&&this.plugin.settingsManager){let a=this.plugin.fileWatcherService.isCurrentlyWatching(),g=this.plugin.fileWatcherService.getWatchedPath(),m=this.plugin.settingsManager.getSetting("autoScanEnabled");a&&g?(n.push(this.localization.t("settings.status.watchingActive",{path:g})),r="var(--color-green)"):m&&(!g||g.trim()==="")?(n.push(this.localization.t("settings.status.watchingWarningFolderMissing")),r="var(--color-yellow)"):m&&g&&!a?(n.push(this.localization.t("settings.status.watchingStarting")),r="var(--color-blue)"):(n.push(this.localization.t("settings.status.watchingInactive")),r="var(--color-red)",m||n.push(`- ${this.localization.t("settings.status.inactiveDetailEnableAutoScan")}`),(!g||g.trim()==="")&&n.push(`- ${this.localization.t("settings.status.inactiveDetailSetPath")}`))}else n.push(this.localization.t("settings.status.serviceUnavailable")),r="var(--color-orange)";i.empty(),n.forEach(a=>{i.createEl("p",{text:a,cls:"krisp-status-message-line"}).style.margin="3px 0"}),i.style.borderLeftColor=r;let o="krisp-importer-status-styles";if(!document.getElementById(o)){let a=document.createElement("style");a.id=o,a.textContent=`
                .krisp-importer-status-section { margin-bottom: 20px; }
                .krisp-importer-status-section h2 { margin-bottom: 8px; }
            `,t.appendChild(a)}}renderLanguageSetting(t){new v.Setting(t).setName(this.localization.t("settings.fields.language.name",{fallback:"Interface Language"})).setDesc(this.localization.t("settings.fields.language.desc",{fallback:"Choose the language for the plugin interface"})).addDropdown(s=>s.addOption("en","English").addOption("ru","\u0420\u0443\u0441\u0441\u043A\u0438\u0439").setValue(this.plugin.settingsManager.getSetting("language")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("language",i),this.updateLanguage(i)}))}renderCoreAutomationSettings(t){t.createEl("h2",{text:this.localization.t("settings.sections.coreAutomation",{fallback:"\u{1F4C2} Core: Watching & Automation"})}),new v.Setting(t).setName(this.localization.t("settings.fields.watchedFolder.name",{fallback:"Watched Folder Path"})).setDesc(this.localization.t("settings.fields.watchedFolder.desc",{fallback:"Full path to the folder where Krisp saves ZIP archives"})).addText(s=>s.setPlaceholder("/Users/username/Downloads/Krisp").setValue(this.plugin.settingsManager.getSetting("watchedFolderPath")).onChange(async i=>{let n=this.plugin.settingsManager.getSetting("watchedFolderPath"),r=i.trim();await this.plugin.settingsManager.updateSetting("watchedFolderPath",r),this.plugin.settingsManager.getSetting("autoScanEnabled")&&this.plugin.fileWatcherService&&(r&&r!==""?(n&&n.trim()!==""&&n.trim()!==r&&this.plugin.fileWatcherService.isCurrentlyWatching()&&this.plugin.fileWatcherService.getWatchedPath()===n.trim()&&await this.plugin.fileWatcherService.stopWatching(),await this.plugin.fileWatcherService.startWatching(r)):this.plugin.fileWatcherService.isCurrentlyWatching()&&await this.plugin.fileWatcherService.stopWatching()),this.display()})),new v.Setting(t).setName(this.localization.t("settings.fields.autoScan.name")).setDesc(this.localization.t("settings.fields.autoScan.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("autoScanEnabled")).onChange(async i=>{if(await this.plugin.settingsManager.updateSetting("autoScanEnabled",i),this.plugin.fileWatcherService)if(i){let n=this.plugin.settingsManager.getSetting("watchedFolderPath");n&&n.trim()!==""&&await this.plugin.fileWatcherService.startWatching(n.trim())}else await this.plugin.fileWatcherService.stopWatching();this.display()}))}renderStorageSettings(t){t.createEl("h2",{text:this.localization.t("settings.sections.storage",{fallback:"\u{1F5C4}\uFE0F Obsidian Storage"})}),new v.Setting(t).setName(this.localization.t("settings.fields.notesFolder.name",{fallback:"Notes Folder"})).setDesc(this.localization.t("settings.fields.notesFolder.desc",{fallback:"Folder in your Obsidian vault for saving meeting notes"})).addText(s=>s.setPlaceholder("KrispNotes/Notes").setValue(this.plugin.settingsManager.getSetting("notesFolderPath")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("notesFolderPath",i.trim())})),new v.Setting(t).setName(this.localization.t("settings.fields.attachmentsFolder.name")).setDesc(this.localization.t("settings.fields.attachmentsFolder.desc")).addText(s=>s.setPlaceholder("KrispNotes/Attachments").setValue(this.plugin.settingsManager.getSetting("attachmentsFolderPath")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("attachmentsFolderPath",i.trim())}))}renderNamingAndTemplateSettings(t){t.createEl("h2",{text:this.localization.t("settings.sections.namingAndTemplates",{fallback:"\u{1F3A8} Appearance & Naming"})}),new v.Setting(t).setName(this.localization.t("settings.fields.noteNameTemplate.name",{fallback:"Note Name Template"})).setDesc(this.localization.t("settings.fields.noteNameTemplate.desc",{fallback:"Template for naming note files. Available variables: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"})).addText(s=>s.setPlaceholder("{{YYYY}}-{{MM}}-{{DD}}_{{HHMM}}_{{meetingTitle}}").setValue(this.plugin.settingsManager.getSetting("noteNameTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("noteNameTemplate",i)})),new v.Setting(t).setName(this.localization.t("settings.fields.attachmentNameTemplate.name")).setDesc(this.localization.t("settings.fields.attachmentNameTemplate.desc")).addText(s=>s.setPlaceholder("{{YYYY}}-{{MM}}-{{DD}}_{{meetingTitle}}_audio").setValue(this.plugin.settingsManager.getSetting("attachmentNameTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("attachmentNameTemplate",i)})),new v.Setting(t).setName(this.localization.t("settings.fields.noteContentTemplate.name")).setDesc(this.localization.t("settings.fields.noteContentTemplate.desc")).addTextArea(s=>{s.setValue(this.plugin.settingsManager.getSetting("noteContentTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("noteContentTemplate",i)}),s.inputEl.rows=10,s.inputEl.style.width="100%",s.inputEl.style.minHeight="150px"}).addButton(s=>s.setButtonText(this.localization.t("settings.buttons.restoreTemplate")).onClick(async()=>{await this.plugin.settingsManager.updateSetting("noteContentTemplate",x.noteContentTemplate),this.display(),new v.Notice(this.localization.t("notifications.success.templateRestored",{fallback:"Default template restored."}))}))}renderImportBehaviorSettings(t){t.createEl("h2",{text:this.localization.t("settings.sections.importBehavior",{fallback:"\u2699\uFE0F Import Behavior"})}),new v.Setting(t).setName(this.localization.t("settings.fields.duplicateStrategy.name")).setDesc(this.localization.t("settings.fields.duplicateStrategy.desc")).addDropdown(s=>s.addOption("skip",this.localization.t("settings.fields.duplicateStrategy.options.skip")).addOption("overwrite",this.localization.t("settings.fields.duplicateStrategy.options.overwrite")).addOption("rename",this.localization.t("settings.fields.duplicateStrategy.options.rename")).setValue(this.plugin.settingsManager.getSetting("duplicateStrategy")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("duplicateStrategy",i)})),new v.Setting(t).setName(this.localization.t("settings.fields.openNoteAfterImport.name")).setDesc(this.localization.t("settings.fields.openNoteAfterImport.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("openNoteAfterImport")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("openNoteAfterImport",i)})),new v.Setting(t).setName(this.localization.t("settings.fields.deleteZipAfterImport.name")).setDesc(this.localization.t("settings.fields.deleteZipAfterImport.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("deleteZipAfterImport")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("deleteZipAfterImport",i)}))}renderManualOperationsAndDiagnostics(t){var s;t.createEl("h2",{text:this.localization.t("settings.sections.manualOperations",{fallback:"\u{1F6E0}\uFE0F Manual Operations & Diagnostics"})}),new v.Setting(t).setName(this.localization.t("settings.buttons.testImport",{fallback:"Test Manual Import"})).setDesc(this.localization.t("modals.testImport.description",{fallback:"Manually select a ZIP file to test the import process."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.testImport",{fallback:"Select & Import File"})).onClick(()=>{new Lt(this.app,this.plugin,this.localization).open()})),(s=this.plugin.fileWatcherService)!=null&&s.scanExistingFiles&&new v.Setting(t).setName(this.localization.t("commands.scanExisting",{fallback:"Process All Existing Files"})).setDesc(this.localization.t("commands.scanExistingDesc",{fallback:"Scan the watched folder and import all existing ZIP files that haven't been processed yet."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.massImport",{fallback:"Scan and Import All"})).onClick(async()=>{var n;if((n=this.plugin.fileWatcherService)!=null&&n.scanExistingFiles){let r=this.plugin.settingsManager.getSetting("watchedFolderPath");if(!r||r.trim()===""){new v.Notice(this.localization.t("settings.errors.watchedFolderMissing",{fallback:"Watched folder path is not specified."}));return}try{await this.plugin.fileWatcherService.scanExistingFiles(),new v.Notice(this.localization.t("notifications.info.scanningFolderComplete",{fallback:"Folder scan and import complete!"}))}catch(o){console.error("Error during mass import:",o),new v.Notice(this.localization.t("notifications.error.massImportFailed",{fallback:"Mass import failed. Check logs."}))}}else new v.Notice(this.localization.t("settings.status.serviceUnavailable",{fallback:"File Watcher service is not available."}))})),new v.Setting(t).setName(this.localization.t("settings.buttons.showLogs",{fallback:"Show Logs"})).setDesc(this.localization.t("modals.logs.description",{fallback:"View recent activity logs for troubleshooting."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.showLogs",{fallback:"Open Logs"})).onClick(()=>{this.plugin.loggingService?new Pt(this.app,this.plugin,this.localization).open():new v.Notice(this.localization.t("settings.status.serviceUnavailable",{fallback:"Logging service not available."}))})),new v.Setting(t).setName(this.localization.t("settings.buttons.resetSettings",{fallback:"Reset Settings"})).setDesc(this.localization.t("settingsInfoTooltips.resetSettingsDesc",{fallback:"Reset all plugin settings to their default values."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.resetSettings",{fallback:"Reset to Defaults"})).setClass("mod-warning").onClick(()=>{new Nt(this.app,this.plugin,this.localization).open()}))}renderAboutPlugin(t){var m;t.createEl("h2",{text:this.localization.t("settings.sections.aboutPlugin",{fallback:"\u2139\uFE0F About Plugin"})});let s=this.plugin.manifest,i=s.author||"Unknown Author",n=s.id||"plugin-repo",o=`https://github.com/${((m=s.authorUrl)==null?void 0:m.split("/").pop())||i.toLowerCase().replace(/\s+/g,"-")}/${n}`,a=`${o}/issues`;new v.Setting(t).setName(this.localization.t("settings.info.version",{fallback:"Plugin Version"})).setDesc(s.version).addExtraButton(f=>f.setIcon("github").setTooltip(this.localization.t("settingsInfoTooltips.githubRepoTooltip",{fallback:"Visit GitHub Repository"})).onClick(()=>{window.open(o,"_blank")})).addExtraButton(f=>f.setIcon("bug").setTooltip(this.localization.t("settingsInfoTooltips.reportIssueTooltip",{fallback:"Report an Issue"})).onClick(()=>{window.open(a,"_blank")})),t.createEl("p",{text:this.localization.t("settingsInfoTooltips.developer",{fallback:`Developed by: ${i}`,author:i})});let g=t.createEl("p");g.appendText(this.localization.t("settingsInfoTooltips.supportDevelopment",{fallback:"If you find this plugin useful, consider supporting its development. More information can be found on the plugin's GitHub page: "})),g.createEl("a",{text:this.localization.t("settingsInfoTooltips.githubRepoTooltip",{fallback:"Visit GitHub Repository"}),href:o,attr:{target:"_blank",rel:"noopener noreferrer"}}),s.description&&t.createEl("p",{text:this.localization.t("settingsInfoTooltips.pluginDescription",{fallback:`Description: ${s.description}`,description:s.description})})}},Lt=class extends v.Modal{constructor(t,s,i){super(t);this.filePath="";this.plugin=s,this.localization=i}onOpen(){let{contentEl:t}=this;t.createEl("h2",{text:this.localization.t("modals.manualImport.title",{fallback:"Manual ZIP Import"})}),t.createEl("p",{text:this.localization.t("modals.manualImport.desc",{fallback:"Enter the full path to the .zip file you want to import."})});let s=t.createEl("input",{type:"text",placeholder:"/path/to/your-meeting.zip"});s.style.width="100%",s.style.marginBottom="10px",s.addEventListener("change",o=>this.filePath=o.target.value.trim());let i=t.createDiv({cls:"modal-button-container"}),n=i.createEl("button",{text:this.localization.t("modals.manualImport.buttonImport",{fallback:"Import"}),cls:"mod-cta"});n.onclick=async()=>{if(this.filePath){if(this.plugin.processingService&&this.plugin.settingsManager)try{new v.Notice(this.localization.t("notifications.info.processing",{file:this.filePath.split("/").pop()||this.filePath}),5e3);let o=this.plugin.settingsManager.getSetting("all");await this.plugin.processingService.processZipFile(this.filePath,o),new v.Notice(this.localization.t("notifications.success.manualImportComplete",{fallback:"Manual import complete."}),5e3)}catch(o){new v.Notice(`${this.localization.t("notifications.error.manualImportFailed",{fallback:"Manual import failed."})}: ${o.message}`,7e3),console.error("[Krisp Importer] Manual import error:",o)}else new v.Notice(this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"Processing or Settings Service",fallback:"Required service not available."}),5e3);this.close()}else new v.Notice(this.localization.t("modals.manualImport.errorNoPath",{fallback:"File path cannot be empty."}),5e3)},i.createEl("button",{text:this.localization.t("modals.confirmReset.cancel",{fallback:"Cancel"})}).onclick=()=>this.close(),s.focus(),s.addEventListener("keypress",o=>{o.key==="Enter"&&n.click()});let r="krisp-modal-styles";if(!document.getElementById(r)){let o=document.createElement("style");o.id=r,o.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; }
            `,t.appendChild(o)}}onClose(){this.contentEl.empty()}},Pt=class extends v.Modal{constructor(t,s,i){super(t);this.plugin=s,this.localization=i}onOpen(){let{contentEl:t}=this;if(t.createEl("h2",{text:this.localization.t("modals.logs.title",{fallback:"Plugin Logs"})}),!this.plugin.loggingService){t.createEl("p",{text:this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"LoggingService",fallback:"Logging service is not available."})});return}let s=this.plugin.loggingService.getLogStats(),i=t.createDiv({cls:"krisp-log-stats"});i.createEl("p",{text:`${this.localization.t("modals.logs.totalEntries",{fallback:"Total entries"})}: ${s.total}`});let n=Object.entries(s.byLevel).map(([m,f])=>`${m.toUpperCase()}: ${f}`).join(", ");i.createEl("p",{text:`${this.localization.t("modals.logs.byLevel",{fallback:"By level"})}: ${n||this.localization.t("modals.logs.noEntries",{fallback:"No entries"})}`});let r=t.createDiv({cls:"modal-button-container"});r.style.justifyContent="flex-start",r.createEl("button",{text:this.localization.t("modals.logs.copy",{fallback:"Copy"}),cls:"mod-cta"}).onclick=async()=>{this.plugin.loggingService&&(await this.plugin.loggingService.copyLogsToClipboard(),new v.Notice(this.localization.t("modals.logs.copiedNotice",{fallback:"Logs copied to clipboard."}),3e3))},r.createEl("button",{text:this.localization.t("modals.logs.clear",{fallback:"Clear"}),cls:"mod-warning"}).onclick=()=>{this.plugin.loggingService&&(this.plugin.loggingService.clearLogs(),this.close(),new v.Notice(this.localization.t("modals.logs.clearedNotice",{fallback:"Logs cleared."}),3e3))},r.createEl("button",{text:this.localization.t("modals.logs.close",{fallback:"Close"})}).onclick=()=>this.close();let o=t.createDiv({cls:"krisp-logs-display"}),a=this.plugin.loggingService.getRecentLogs(100);if(a.length===0)o.textContent=this.localization.t("modals.logs.noEntries",{fallback:"No log entries."});else{let m=a.map(f=>{let E=f.timestamp.toLocaleString(),I=f.level===0?"DEBUG":f.level===1?"INFO":f.level===2?"WARN":"ERROR";return`[${E}] [${I}] [${f.category}] ${f.message}`}).join(`
`);o.textContent=m}let g="krisp-logs-modal-styles";if(!document.getElementById(g)){let m=document.createElement("style");m.id=g,m.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; } /* Default: flex-end */
                .krisp-log-stats { margin-bottom: 15px; padding: 10px; background-color: var(--background-secondary); border-radius: 5px; }
                .krisp-logs-display { max-height: 400px; overflow: auto; border: 1px solid var(--background-modifier-border); border-radius: 5px; padding: 10px; background-color: var(--background-primary-alt); font-family: monospace; font-size: 0.8em; white-space: pre-wrap; margin-top:15px; }
            `,t.appendChild(m)}}onClose(){this.contentEl.empty()}},Nt=class extends v.Modal{constructor(t,s,i){super(t);this.plugin=s,this.localization=i}onOpen(){let{contentEl:t}=this;t.createEl("h2",{text:this.localization.t("modals.confirmReset.title")}),t.createEl("p",{text:this.localization.t("modals.confirmReset.message")});let s=t.createDiv({cls:"modal-button-container"});s.createEl("button",{text:this.localization.t("modals.confirmReset.confirm"),cls:"mod-warning"}).onclick=async()=>{if(this.plugin.settingsManager&&this.plugin.settingsTab)try{for(let[n,r]of Object.entries(x))await this.plugin.settingsManager.updateSetting(n,r);new v.Notice(this.localization.t("notifications.success.settingsReset"),5e3),this.plugin.settingsTab.display()}catch(n){new v.Notice(`${this.localization.t("notifications.error.settingsResetFailed",{fallback:"Failed to reset settings."})}: ${n.message}`,7e3),console.error("[Krisp Importer] Settings reset error:",n)}else new v.Notice(this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"SettingsManager or SettingsTab",fallback:"Required services not available for reset."}),5e3);this.close()},s.createEl("button",{text:this.localization.t("modals.confirmReset.cancel",{fallback:"Cancel"})}).onclick=()=>this.close();let i="krisp-modal-styles";if(!document.getElementById(i)){let n=document.createElement("style");n.id=i,n.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; }
            `,t.appendChild(n)}}onClose(){this.contentEl.empty()}};var O=require("obsidian");var Kt=st(Ut()),C=require("fs"),gt=require("obsidian"),at=st(require("path")),ft=class{constructor(e){this.app=e}async extract(e,t){try{let i=require("os").tmpdir(),n=at.join(i,"krisp-importer-temp",t+"_"+Date.now()),r=at.join(i,"krisp-importer-temp");(0,C.existsSync)(r)||(0,C.mkdirSync)(r,{recursive:!0}),(0,C.existsSync)(n)||(0,C.mkdirSync)(n,{recursive:!0});let o=new Kt.async({file:e});try{let a=await o.entries();for(let[g,m]of Object.entries(a))if(!m.isDirectory){let f=(0,gt.normalizePath)(at.join(n,g)),E=at.dirname(f);(0,C.existsSync)(E)||(0,C.mkdirSync)(E,{recursive:!0});let I=await o.entryData(g);await C.promises.writeFile(f,I)}return console.log(`Successfully extracted to ${n}`),n}finally{await o.close()}}catch(s){return new gt.Notice("Error extracting ZIP file: "+s.message),console.error("Error extracting ZIP file:",s),null}}async cleanup(e){if(e)try{(0,C.existsSync)(e)&&((0,C.rmSync)(e,{recursive:!0,force:!0}),console.log(`Successfully cleaned up temp directory: ${e}`))}catch(t){new gt.Notice("Error cleaning up temporary directory: "+t.message),console.error("Error cleaning up temporary directory:",t)}}};var St=class{constructor(){}parseMeetingNotes(e,t,s){var m;let i={},n=s;n=n.replace(/\s*\([0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}\)$/,""),n=n.replace(/-[0-9a-fA-F]{32}$/,""),n=n.replace(/\s*-\s*[A-Za-z]+(?:\s+|,\s*)[0-9]{1,2}(?:,\s*[0-9]{4})?(?:\s+[0-9]{1,2}[0-9]{2}(?:\s*(?:AM|PM))?)?$/,"").trim(),i.meetingTitle=n;let r=(m=e.split(`
`)[0])==null?void 0:m.trim(),o=null,a=null;if(r&&(o=this.extractDateFromString(r),a=this.extractTimeFromString(r)),o||(o=this.extractDateFromString(s)),!a&&(a=this.extractTimeFromString(s),a==="00:00"&&t)){let f=t.match(/(\d{2}:\d{2}(?::\d{2})?)/)}i.date=o||void 0,i.time=a||void 0,i.summary=this.extractSection(e,"Summary"),i.actionItems=this.extractSection(e,"Action Items",!0),i.keyPoints=this.extractSection(e,"Key Points",!0);let g=this.parseTranscript(t);return i.participants=g.participants,i.rawTranscript=t,i.formattedTranscript=g.formattedTranscript,i.duration=g.duration,i.participantsCount=g.participants.length,i.transcriptWords=this.countWords(t),i.mostActiveSpeaker=this.findMostActiveSpeaker(t),i.participantsStats=this.generateParticipantsStats(t,g.participants),i.extractedEntities=this.extractEntities(e,t),i.relatedLinks=this.generateRelatedLinks(e,n),i.importDate=new Date().toLocaleString("ru-RU",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit"}),i.smartTags=this.generateSmartTags(e,t,n),i.tags=[...i.smartTags||[]],i}parseTranscript(e){let t=e.split(`
`),s=new Set,i=[],n="00:00:00",r=/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/;for(let a=0;a<t.length;a++){let m=t[a].trim();if(m==="")continue;let f=m.match(r);if(f){let E=f[1].trim(),I=f[2];E&&!E.toLowerCase().includes("transcription service")&&!E.toLowerCase().includes("meeting summary")&&s.add(E);let L=I.length===5?`${I}:00`:I;n=L;let S=[],P=a+1;for(;P<t.length;){let y=t[P].trim();if(y===""){P++;continue}if(r.test(y))break;y.toLowerCase()==="\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442..."?S.push(`_${y}_`):S.push(y),P++}if(S.length>0){let y=S.join(`
`);i.push(`[[${L}]] **${E}**: ${y}`)}else i.push(`[[${L}]] **${E}**:`);a=P-1}else m.toLowerCase()==="\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442..."?i.push(`_${m}_`):i.length>0?i[i.length-1]+=`
${m}`:i.push(m)}let o="N/A";return n!=="00:00:00"&&(o=n),{participants:Array.from(s),formattedTranscript:i.join(`

`),duration:o}}extractDateFromString(e){if(!e)return null;let t,s,i,n=e.match(/(\d{4})-(\d{2})-(\d{2})/);if(n&&(t=parseInt(n[1],10),s=parseInt(n[2],10),i=parseInt(n[3],10),s>=1&&s<=12&&i>=1&&i<=31))return`${String(t).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`;if(n=e.match(/([A-Za-z]+)\s+(\d{1,2}),\s+(\d{4})/),n){let r=n[1];if(i=parseInt(n[2],10),t=parseInt(n[3],10),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(t).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}if(n=e.match(/([A-Za-z]+),\s*(\d{1,2})(?!\s*,\s*\d{4})/),n){let r=n[1];if(i=parseInt(n[2],10),t=new Date().getFullYear(),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(t).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}if(n=e.match(/(\d{1,2})\s+([A-Za-z]+)\s+(\d{4})/),n){i=parseInt(n[1],10);let r=n[2];if(t=parseInt(n[3],10),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(t).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}return null}extractTimeFromString(e){if(!e)return null;let t=e.match(/(\d{2}):(\d{2})(?!\s*(?:AM|PM))/);if(t){let s=parseInt(t[1],10),i=parseInt(t[2],10);if(s>=0&&s<=23&&i>=0&&i<=59)return`${String(s).padStart(2,"0")}:${String(i).padStart(2,"0")}`}if(t=e.match(/(\d{1,2}):(\d{2})\s*(AM|PM)/i),t){let s=parseInt(t[1],10),i=parseInt(t[2],10),n=t[3].toUpperCase();if(s>=1&&s<=12&&i>=0&&i<=59)return n==="PM"&&s!==12?s+=12:n==="AM"&&s===12&&(s=0),`${String(s).padStart(2,"0")}:${String(i).padStart(2,"0")}`}return"00:00"}extractSection(e,t,s=!1){var m,f;let i=e.split(`
`),n=[],r=!1,o=new RegExp(`^${t}s*$`,"i"),a=["Summary","Action Items","Key Points","Transcript","Transcription"],g=new RegExp(`^(${a.filter(E=>E.toLowerCase()!==t.toLowerCase()).join("|")})s*$`,"i");for(let E=0;E<i.length;E++){let I=i[E];if(o.test(I)){r=!0;continue}if(r){if(g.test(I))break;let L=I.trim();if(L===""){if(s){let S=(m=i[E+1])==null?void 0:m.trim();if(!(S&&!S.match(/^(\s*[-*]|[0-9]+\.)/)&&!S.match(/^\s+/))){if(!S)break}}else if(((f=i[E+1])==null?void 0:f.trim())==="")break}if(L!==""||s&&n.length>0)if(s){let S=L;(S.startsWith("- ")||S.startsWith("* "))&&(S=S.substring(2).trim()),(t==="Action Items"&&S||S)&&n.push(S)}else n.push(L);else n.length>0}}return n}escapeRegExp(e){return e.replace(/[.*+?^${}()|[\\\]]/g,"\\$&")}isLikelyDateOrTime(e){if(!e)return!1;let t=/^(\d{4}-\d{2}-\d{2}|[A-Za-z]+\s+\d{1,2}(?:,\s*\d{4})?)$/i,s=/^(\d{1,2}:\d{2}(\s*[APap][Mm])?)$/;return t.test(e)||s.test(e)}isSectionHeader(e){if(!e)return!1;let t=e.toLowerCase();return t.startsWith("summary")||t.startsWith("action items")||t.startsWith("key points")||t.startsWith("transcript")}monthNameToNumber(e){if(!e)return null;let t=e.toLowerCase().substring(0,3);return{jan:1,feb:2,mar:3,apr:4,may:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,\u044F\u043D\u0432:1,\u0444\u0435\u0432:2,\u043C\u0430\u0440:3,\u0430\u043F\u0440:4,\u043C\u0430\u044F:5,\u0438\u044E\u043D:6,\u0438\u044E\u043B:7,\u0430\u0432\u0433:8,\u0441\u0435\u043D:9,\u043E\u043A\u0442:10,\u043D\u043E\u044F:11,\u0434\u0435\u043A:12}[t]||null}countWords(e){return e?e.trim().split(/\s+/).filter(t=>t.length>0).length:0}findMostActiveSpeaker(e){let t=e.split(`
`),s={},i="";for(let o of t){let a=o.trim();if(a==="")continue;let g=a.match(/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/);if(g)i=g[1].trim(),s[i]||(s[i]=0);else if(i){let m=this.countWords(a);s[i]+=m}}let n="",r=0;for(let[o,a]of Object.entries(s))a>r&&(r=a,n=o);return n||"N/A"}generateParticipantsStats(e,t){let s=e.split(`
`),i={},n={},r="";for(let g of t)i[g]=0,n[g]=0;for(let g of s){let m=g.trim();if(m==="")continue;let f=m.match(/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/);if(f)r=f[1].trim(),n[r]!==void 0&&n[r]++;else if(r&&i[r]!==void 0){let E=this.countWords(m);i[r]+=E}}let o=[],a=Object.values(i).reduce((g,m)=>g+m,0);for(let g of t){let m=i[g]||0,f=n[g]||0,E=a>0?(m/a*100).toFixed(1):"0";o.push(`- **${g}**: ${m} \u0441\u043B\u043E\u0432 (${E}%), ${f} \u0432\u044B\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u0439`)}return o.length>0?["### \u{1F4CA} \u0410\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432","",...o]:[]}extractEntities(e,t){let s=[],n=`${e} ${t}`.substring(0,5e3),r={projects:/(?:проект|project|система|платформа|сервис|приложение|продукт)\s+([А-Яа-я\w\s]{3,30})/gi,companies:/(?:компания|компании|организация|корпорация|фирма|бизнес)\s+([А-Яа-я\w\s]{3,30})|([А-Яа-я][А-Яа-я\w]*(?:нефть|банк|групп|холдинг|корп))/gi,dates:/\d{1,2}[\.\-\/]\d{1,2}[\.\-\/]\d{2,4}|\d{4}[\.\-\/]\d{1,2}[\.\-\/]\d{1,2}/g},o=n.match(r.projects);o&&o.length>0&&(s.push("### \u{1F680} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u043F\u0440\u043E\u0435\u043A\u0442\u044B",""),[...new Set(o.slice(0,5))].forEach(f=>s.push(`- ${f.trim()}`)),s.push(""));let a=n.match(r.companies);a&&a.length>0&&(s.push("### \u{1F3E2} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u043A\u043E\u043C\u043F\u0430\u043D\u0438\u0438",""),[...new Set(a.slice(0,5))].forEach(f=>s.push(`- ${f.trim()}`)),s.push(""));let g=n.match(r.dates);return g&&g.length>0&&(s.push("### \u{1F4C5} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u0434\u0430\u0442\u044B",""),[...new Set(g.slice(0,5))].forEach(f=>s.push(`- ${f}`)),s.push("")),s}generateRelatedLinks(e,t){let s=[],i=e.match(/встреча|совещание|планерка|созвон/gi);i&&i.length>1&&s.push("- \u{1F4CB} **\u0421\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0438:** [[\u041F\u043E\u0438\u0441\u043A \u0432\u0441\u0442\u0440\u0435\u0447]]");let n=e.match(/документ|файл|презентация|отчет|план/gi);return n&&n.length>0&&s.push("- \u{1F4C4} **\u0414\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u044B:** [[\u041F\u043E\u0438\u0441\u043A \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u043E\u0432]]"),t.toLowerCase().includes("\u043F\u0440\u043E\u0435\u043A\u0442")&&s.push("- \u{1F680} **\u041F\u0440\u043E\u0435\u043A\u0442:** [[\u041F\u0440\u043E\u0435\u043A\u0442\u044B]]"),s}generateSmartTags(e,t,s){let i=new Set,n=`${e} ${t} ${s}`.toLowerCase();i.add("meeting"),i.add("krisp");let r={\u043F\u0440\u043E\u0435\u043A\u0442:"project",project:"project",\u043F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435:"planning",planning:"planning",\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0430:"development",development:"development",\u043E\u0431\u0441\u0443\u0436\u0434\u0435\u043D\u0438\u0435:"discussion",\u0432\u0441\u0442\u0440\u0435\u0447\u0430:"meeting",\u0430\u043D\u0430\u043B\u0438\u0437:"analysis",strategy:"strategy",\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F:"strategy",\u0432\u043D\u0435\u0434\u0440\u0435\u043D\u0438\u0435:"implementation",\u0442\u0435\u0441\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435:"testing",\u0440\u0435\u0432\u044C\u044E:"review",review:"review",\u0431\u044E\u0434\u0436\u0435\u0442:"budget",budget:"budget",deadline:"deadline",\u0434\u0435\u0434\u043B\u0430\u0439\u043D:"deadline",hr:"hr",\u0440\u0435\u043A\u0440\u0443\u0442\u0438\u043D\u0433:"hr",recruiting:"hr",\u0438\u043D\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044F:"integration",integration:"integration",api:"technical",\u0441\u0438\u0441\u0442\u0435\u043C\u0430:"system",system:"system",\u0431\u0435\u0437\u043E\u043F\u0430\u0441\u043D\u043E\u0441\u0442\u044C:"security",security:"security",\u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0430:"support",support:"support"};for(let[o,a]of Object.entries(r))n.includes(o)&&i.add(a);return(n.includes("ceo")||n.includes("director")||n.includes("\u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440"))&&i.add("management"),(n.includes("developer")||n.includes("\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A")||n.includes("\u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0438\u0441\u0442"))&&i.add("technical"),(n.includes("designer")||n.includes("\u0434\u0438\u0437\u0430\u0439\u043D\u0435\u0440"))&&i.add("design"),(n.includes("\u0440\u0435\u0442\u0440\u043E\u0441\u043F\u0435\u043A\u0442\u0438\u0432\u0430")||n.includes("retrospective"))&&i.add("retrospective"),(n.includes("\u043F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435")||n.includes("planning"))&&i.add("planning"),(n.includes("\u0434\u0435\u043C\u043E")||n.includes("demo")||n.includes("\u043F\u0440\u0435\u0437\u0435\u043D\u0442\u0430\u0446\u0438\u044F"))&&i.add("demo"),Array.from(i)}};var B=require("obsidian"),K=st(require("path")),vt=class{constructor(e,t){this.app=e,this.vault=e.vault,this.settings=t}formatSummaryForCallout(e){if(!e||e.length===0)return"*\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E*";let t=[],s=0,i=!1;for(let n=0;n<e.length;n++){let o=e[n].trim();if(o===""){t.push("");continue}if(s===0&&o.toLowerCase()==="summary")continue;if(/^[-*•]\s+/.test(o)){let g=o.replace(/^[-*•]\s+/,"");t.push(`- ${g}`),i=!0}else this.isLikelyHeader(o,n,e)?(s++,i=!1,s>1&&t.push(""),t.push(`## ${s}. ${o}`)):(t.push(`- ${o}`),i=!0)}return t.map(n=>n===""?">":`> ${n}`).join(`
`)}isLikelyHeader(e,t,s){if(e.length>100||e.endsWith(".")||e.endsWith("!")||e.endsWith("?"))return!1;if(t+1<s.length){let i=s[t+1].trim();if(/^[-*•]\s+/.test(i))return!0}return e.length<80&&!e.includes(",")&&!e.includes(".")}applyTemplate(e,t,s,i,n){var k,W,Z,_,U,et,G,A;let r=e;r=r.replace(/{{meetingTitle}}/g,t.meetingTitle||"Untitled Meeting"),r=r.replace(/{{title}}/g,t.meetingTitle||"Untitled Meeting"),r=r.replace(/{{date}}/g,t.date||"YYYY-MM-DD"),r=r.replace(/{{time}}/g,t.time||"HH:MM"),r=r.replace(/{{duration}}/g,t.duration||"N/A");let o=((k=t.participants)==null?void 0:k.map(D=>`- **${D}**`).join(`
`))||"- *\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0430\u0445 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430*";r=r.replace(/{{participantsList}}/g,o),r=r.replace(/{{participants}}/g,((W=t.participants)==null?void 0:W.join(", "))||"N/A"),r=r.replace(/{{participantsCount}}/g,String(t.participantsCount||0)),r=r.replace(/{{transcriptWords}}/g,String(t.transcriptWords||0)),r=r.replace(/{{mostActiveSpeaker}}/g,t.mostActiveSpeaker||"N/A"),r=r.replace(/{{importDate}}/g,t.importDate||new Date().toLocaleDateString("ru-RU"));let a=((Z=t.participantsStats)==null?void 0:Z.join(`
`))||"*\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430*";r=r.replace(/{{participantsStats}}/g,a);let g=(_=t.extractedEntities)!=null&&_.length?t.extractedEntities.join(`

`):"*\u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u0430*";r=r.replace(/{{extractedEntities}}/g,g);let m=(U=t.relatedLinks)!=null&&U.length?`
`+t.relatedLinks.join(`
`):"";r=r.replace(/{{relatedLinks}}/g,m);let f=(et=t.summary)!=null&&et.length?this.formatSummaryForCallout(t.summary):"*\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E*";r=r.replace(/{{summary}}/g,f);let E=((G=t.actionItems)==null?void 0:G.map(D=>`- [ ] ${D}`).join(`
> 
> `))||"*\u041D\u0435\u0442 \u0437\u0430\u0434\u0430\u0447 \u0434\u043B\u044F \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F*";r=r.replace(/{{actionItemsList}}/g,E),r=r.replace(/{{actionItems}}/g,E);let I=((A=t.keyPoints)==null?void 0:A.map(D=>`- ${D}`).join(`
> 
> `))||"*\u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B \u043D\u0435 \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u044B*";r=r.replace(/{{keyPointsList}}/g,I),r=r.replace(/{{keyPoints}}/g,I);let L=t.formattedTranscript?t.formattedTranscript.split(`
`).map(D=>`> ${D}`).join(`
`):"> *\u0422\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D*";r=r.replace(/{{formattedTranscript}}/g,L),r=r.replace(/{{transcript}}/g,L),r=r.replace(/{{rawTranscript}}/g,t.rawTranscript||"\u0421\u044B\u0440\u043E\u0439 \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D");let S=[...t.tags||[],...t.smartTags||[]],P=[...new Set(S)],y=P.length>0?P.map(D=>`  - ${D}`).join(`
`)+`
`:"";if(r=r.replace(/{{yamlTags}}/g,y),n){let D=(0,B.normalizePath)(n);r=r.replace(/{{audioPathForYaml}}/g,D),r=r.replace(/{{audioLink}}/g,D),r=r.replace(/{{audioEmbed}}/g,`![[${D}]]`)}else r=r.replace(/{{audioPathForYaml}}/g,""),r=r.replace(/{{audioLink}}/g,"N/A"),r=r.replace(/{{audioEmbed}}/g,`> [!warning] \u0410\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D
> \u0410\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B \u043D\u0435 \u0431\u044B\u043B \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D \u0438\u043B\u0438 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D \u0432 \u0430\u0440\u0445\u0438\u0432\u0435.`);return i?r=r.replace(/{{noteFileName}}/g,i.replace(/\.md$/,"")):r=r.replace(/{{noteFileName}}/g,t.meetingTitle||"Untitled Meeting"),r=r.replace(/{{YYYY}}/g,t.date?t.date.substring(0,4):"YYYY"),r=r.replace(/{{MM}}/g,t.date?t.date.substring(5,7):"MM"),r=r.replace(/{{DD}}/g,t.date?t.date.substring(8,10):"DD"),r=r.replace(/{{HH}}/g,t.time?t.time.substring(0,2):"HH"),r=r.replace(/{{mm}}/g,t.time?t.time.substring(3,5):"mm"),r=r.replace(/{{HHMM}}/g,t.time?t.time.replace(":",""):"HHMM"),r}generateFileName(e,t,s){var n,r,o,a,g,m;let i=e;return i=i.replace(/{{YYYY}}/g,((n=t.date)==null?void 0:n.substring(0,4))||"YYYY"),i=i.replace(/{{MM}}/g,((r=t.date)==null?void 0:r.substring(5,7))||"MM"),i=i.replace(/{{DD}}/g,((o=t.date)==null?void 0:o.substring(8,10))||"DD"),i=i.replace(/{{HHMM}}/g,((a=t.time)==null?void 0:a.replace(":",""))||"HHMM"),i=i.replace(/{{HH}}/g,((g=t.time)==null?void 0:g.substring(0,2))||"HH"),i=i.replace(/{{mm}}/g,((m=t.time)==null?void 0:m.substring(3,5))||"mm"),i=i.replace(/{{meetingTitle}}/g,t.meetingTitle||"Untitled Meeting"),i=i.replace(/[\/:\[\]\*\?"<>\|#^]/g,"_").replace(/\s+/g,"_"),`${i}.${s}`}async createNote(e,t){var E,I,L;let s=this.generateFileName(this.settings.noteNameTemplate,e,"md"),i=((E=e.date)==null?void 0:E.substring(0,4))||"YYYY",n=((I=e.date)==null?void 0:I.substring(5,7))||"MM",r=(0,B.normalizePath)(K.join(this.settings.notesFolderPath,i,n));await this.ensureFolderExists(r);let o=(0,B.normalizePath)(K.join(r,s)),a=this.vault.getAbstractFileByPath(o);if(a&&a instanceof B.TFile)switch(this.settings.duplicateStrategy){case"skip":return console.log(`Note ${o} already exists. Skipping.`),new Notification("Krisp Importer",{body:`\u0417\u0430\u043C\u0435\u0442\u043A\u0430 ${s} \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442. \u0418\u043C\u043F\u043E\u0440\u0442 \u043F\u0440\u043E\u043F\u0443\u0449\u0435\u043D.`}),{notePath:o,noteFile:a};case"overwrite":console.log(`Note ${o} already exists. Overwriting.`),await this.vault.delete(a);break;case"rename":let S=1,P=s.substring(0,s.lastIndexOf(".")),y=s.substring(s.lastIndexOf(".")+1);for(;a;)o=(0,B.normalizePath)(K.join(r,`${P}_${S}.${y}`)),a=this.vault.getAbstractFileByPath(o),S++;console.log(`Note ${o} will be created with a new name.`);break}let g;if(t&&e.meetingTitle){let S=K.extname(t)||".mp3",P=this.generateFileName(this.settings.attachmentNameTemplate,e,S.substring(1)),y=this.settings.attachmentsFolderPath;!y.includes("{{YYYY}}")&&!y.includes("{{MM}}")&&(y=K.join(y,i,n)),y=y.replace(/{{YYYY}}/g,i).replace(/{{MM}}/g,n).replace(/{{DD}}/g,((L=e.date)==null?void 0:L.substring(8,10))||"DD"),await this.ensureFolderExists((0,B.normalizePath)(y)),g=(0,B.normalizePath)(K.join(y,P));let k=this.vault.getAbstractFileByPath(g);if(k){let W=1,Z=P.substring(0,P.lastIndexOf(".")),_=P.substring(P.lastIndexOf(".")+1);for(;k;)g=(0,B.normalizePath)(K.join(y,`${Z}_${W}.${_}`)),k=this.vault.getAbstractFileByPath(g),W++}}let m=this.applyTemplate(this.settings.noteContentTemplate,e,this.settings,o.split("/").pop(),g),f=await this.vault.create(o,m);return console.log(`Note created: ${o}`),{notePath:o,audioDestPath:g,noteFile:f}}async ensureFolderExists(e){let t=(0,B.normalizePath)(e);if(t==="/"||t==="")return;if(!this.vault.getAbstractFileByPath(t)){let i=t.split("/"),n="";for(let r of i){if(!r)continue;if(n=n?`${n}/${r}`:r,!this.vault.getAbstractFileByPath(n))try{await this.vault.createFolder(n)}catch(a){if(!this.vault.getAbstractFileByPath(n))throw console.error(`Failed to create folder ${n}:`,a),a}}}}};var pt=require("obsidian"),ot=class{constructor(){}showSuccess(e,t=5e3){new pt.Notice(e,t),console.log(`[Krisp Importer] SUCCESS: ${e}`)}showError(e,t=8e3){new pt.Notice(`ERROR: ${e}`,t),console.error(`[Krisp Importer] ERROR: ${e}`)}showWarning(e,t=6e3){new pt.Notice(`WARNING: ${e}`,t),console.warn(`[Krisp Importer] WARNING: ${e}`)}showInfo(e,t=4e3){new pt.Notice(e,t),console.log(`[Krisp Importer] INFO: ${e}`)}showDuplicateFound(e,t,s){let i=`\u0414\u0443\u0431\u043B\u0438\u043A\u0430\u0442 "${e}": ${s} (\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F: ${t})`;this.showWarning(i)}showBatchImportResult(e,t,s,i){e>0&&t===0?this.showSuccess(`\u0418\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D: ${e} \u0432\u0441\u0442\u0440\u0435\u0447(\u0438) \u0438\u0437 "${i}"`,8e3):e>0&&t>0?this.showWarning(`\u0418\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D \u0447\u0430\u0441\u0442\u0438\u0447\u043D\u043E: ${e} \u0443\u0441\u043F\u0435\u0448\u043D\u043E, ${t} \u043E\u0448\u0438\u0431\u043E\u043A \u0438\u0437 "${i}"`,1e4):t>0?this.showError(`\u0418\u043C\u043F\u043E\u0440\u0442 \u043D\u0435 \u0443\u0434\u0430\u043B\u0441\u044F: ${t} \u043E\u0448\u0438\u0431\u043E\u043A \u0432 "${i}"`,1e4):this.showInfo(`\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445 \u0434\u043B\u044F \u0438\u043C\u043F\u043E\u0440\u0442\u0430 \u0432 "${i}"`,6e3),s>0&&this.showInfo(`\u041F\u0440\u043E\u043F\u0443\u0449\u0435\u043D\u043E \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432: ${s}`,4e3)}};var Q=st(require("path")),H=require("fs"),Et=class{constructor(e,t){this.app=e,this.zipExtractor=new ft(this.app),this.noteParser=new St,this.noteCreator=null,this.notificationService=new ot,this.statusBarService=t||null}async processZipFile(e,t){var r,o,a;let s=null,i=Q.basename(e),n=new O.Notice(`Processing ${i}...`,0);this.statusBarService&&this.statusBarService.setProcessing(i),this.noteCreator=new vt(this.app,t);try{let g=`${i.replace(".zip","")}_${Date.now()}`;if(s=await this.zipExtractor.extract(e,g),!s){this.notificationService.showError(`Failed to extract ZIP file: ${i}`),n&&n.hide();return}let f=(await H.promises.readdir(s,{withFileTypes:!0})).filter(L=>L.isDirectory());if(f.length===0){this.notificationService.showError(`No meeting folders found in ZIP: ${i}`),n&&n.hide(),await this.zipExtractor.cleanup(s);return}let E=0,I=0;for(let L of f){let S=L.name,P=(0,O.normalizePath)(Q.join(s,S));new O.Notice(`Processing meeting: ${S}...`);let y="meeting_notes.txt",k="transcript.txt",W="recording.mp3",Z=(0,O.normalizePath)(Q.join(P,y)),_=(0,O.normalizePath)(Q.join(P,k)),U=await H.promises.readdir(P),G=U.find(p=>p.toLowerCase().startsWith("recording.")&&(p.toLowerCase().endsWith(".mp3")||p.toLowerCase().endsWith(".m4a")))||W,A=(0,O.normalizePath)(Q.join(P,G)),D="",it="";try{D=await H.promises.readFile(Z,"utf-8")}catch(p){this.notificationService.showError(`Failed to read ${y} from ${S} in ${i}`);let d=U.find(h=>h.toLowerCase().includes("notes")&&h.toLowerCase().endsWith(".txt")&&h!==y);if(d){this.notificationService.showInfo(`Attempting to use alternative notes file: ${d}`);try{D=await H.promises.readFile(Q.join(P,d),"utf-8")}catch(h){this.notificationService.showError(`Failed to read alternative notes file ${d} for ${S}.`),I++;continue}}else{I++;continue}}try{it=await H.promises.readFile(_,"utf-8")}catch(p){this.notificationService.showWarning(`Failed to read ${k} for ${S} in ${i}. Transcript might be missing.`)}let z=this.noteParser.parseMeetingNotes(D,it,S);console.log(`[DEBUG] Parsed data for ${S}:`,{title:z.meetingTitle,date:z.date,time:z.time,participants:z.participants,hasTranscript:!!z.formattedTranscript,transcriptLength:((r=z.formattedTranscript)==null?void 0:r.length)||0,summaryLength:((o=z.summary)==null?void 0:o.length)||0,actionItemsLength:((a=z.actionItems)==null?void 0:a.length)||0});let l=await this.noteCreator.createNote(z,A);if(!l.notePath){this.notificationService.showError(`Failed to create note for ${S}`),I++;continue}console.log(`[DEBUG] Note created at: ${l.notePath}, audio dest: ${l.audioDestPath}`);try{await H.promises.access(A),console.log(`[DEBUG] Audio file found: ${A}`);let p=await H.promises.readFile(A);if(console.log(`[DEBUG] Audio file read, size: ${p.length} bytes`),l.audioDestPath){let d=this.app.vault.getAbstractFileByPath(l.audioDestPath);d&&d instanceof O.TFile?(this.notificationService.showInfo(`Overwriting existing audio file: ${l.audioDestPath}`),await this.app.vault.modifyBinary(d,p)):await this.app.vault.createBinary(l.audioDestPath,p),console.log(`[DEBUG] Audio file saved to: ${l.audioDestPath}`),this.notificationService.showInfo(`Audio file for ${S} saved: ${l.audioDestPath}`)}}catch(p){console.log("[DEBUG] Audio file error:",p),this.notificationService.showWarning(`Audio file ${G} not found in ${P}. Skipped audio.`)}this.notificationService.showSuccess(`Successfully imported meeting ${S} to ${l.notePath}`),E++}if(n&&n.hide(),this.statusBarService&&(I===0&&E>0?this.statusBarService.showTemporaryMessage(`\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043E: ${E}`,3e3):I>0&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043E\u043A: ${I}`)),this.notificationService.showBatchImportResult(E,I,0,i),console.log(`[DEBUG] deleteZipAfterImport setting: ${t.deleteZipAfterImport}`),console.log(`[DEBUG] errorCount: ${I}, importedCount: ${E}`),t.deleteZipAfterImport&&I===0&&E>0)try{console.log(`[DEBUG] Attempting to delete ZIP file: ${e}`),await H.promises.rm(e),this.notificationService.showInfo(`Deleted original ZIP file: ${i}`),console.log(`[DEBUG] Successfully deleted ZIP file: ${e}`)}catch(L){console.error("[DEBUG] Failed to delete ZIP file:",L),this.notificationService.showError(`Failed to delete original ZIP file ${i}: ${L.message}`)}else t.deleteZipAfterImport?console.log(`[DEBUG] ZIP file not deleted due to errors or no imports. errorCount: ${I}, importedCount: ${E}`):console.log("[DEBUG] ZIP file deletion disabled in settings")}catch(g){n&&n.hide(),this.statusBarService&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ${i}`),console.error(`[Krisp Importer] Error processing ZIP file ${i}:`,g),this.notificationService.showError(`An unexpected error occurred while processing ${i}: ${g.message}`)}finally{n&&n.hide(),s&&await this.zipExtractor.cleanup(s)}}};var $=st(require("fs")),lt=st(require("path")),wt=class{constructor(e,t,s,i,n){this.watcher=null;this.isWatching=!1;this.watchedPath="";this.app=e,this.processingService=t,this.notificationService=s,this.settingsProvider=i,this.statusBarService=n||null}async startWatching(e){if(this.isWatching&&await this.stopWatching(),!e||e.trim()===""){this.notificationService.showError("No watched folder specified");return}try{if(!$.existsSync(e)){this.notificationService.showError(`Folder does not exist: ${e}`);return}if(!$.statSync(e).isDirectory()){this.notificationService.showError(`\u0423\u043A\u0430\u0437\u0430\u043D\u043D\u044B\u0439 \u043F\u0443\u0442\u044C \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043F\u0430\u043F\u043A\u043E\u0439: ${e}`);return}this.watchedPath=e,this.watcher=$.watch(e,{persistent:!0},(s,i)=>{console.log(`[FileWatcher] Event detected: ${s}, filename: ${i}`),s==="rename"&&i&&this.handleFileEvent(i)}),this.isWatching=!0,this.statusBarService&&this.statusBarService.setWatching(e),this.notificationService.showSuccess(`\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u0437\u0430\u043F\u0443\u0449\u0435\u043D\u043E: ${e}`),console.log(`[Krisp Importer] FileWatcher started for: ${e}`)}catch(t){this.statusBarService&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F: ${t.message}`),console.error("[Krisp Importer] Error starting file watcher:",t),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0437\u0430\u043F\u0443\u0441\u043A\u0430 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F: ${t.message}`)}}async stopWatching(){this.watcher&&(this.watcher.close(),this.watcher=null),this.isWatching&&(this.isWatching=!1,this.statusBarService&&this.statusBarService.setIdle("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),this.notificationService.showInfo("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),console.log("[Krisp Importer] FileWatcher stopped"))}isCurrentlyWatching(){return this.isWatching}getWatchedPath(){return this.watchedPath}async handleFileEvent(e){console.log(`[FileWatcher] Processing file event for: ${e}`);try{if(!e.toLowerCase().endsWith(".zip")){console.log(`[FileWatcher] Ignoring non-ZIP file: ${e}`);return}let t=lt.join(this.watchedPath,e);if(!$.existsSync(t)||!$.statSync(t).isFile())return;console.log(`[Krisp Importer] New ZIP file detected: ${e}`),await this.waitForFileStability(t);let i=this.settingsProvider();this.statusBarService&&this.statusBarService.setProcessing(lt.basename(t)),await this.processNewZipFile(t,i)}catch(t){console.error(`[Krisp Importer] Error handling file event for ${e}:`,t),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u0444\u0430\u0439\u043B\u0430 ${e}: ${t.message}`),this.statusBarService&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0441 \u0444\u0430\u0439\u043B\u043E\u043C ${e}`)}finally{this.statusBarService&&(this.isWatching&&this.watchedPath?this.statusBarService.setWatching(this.watchedPath):this.statusBarService.setIdle("\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0444\u0430\u0439\u043B\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430"))}}async waitForFileStability(e,t=5e3){let i=0,n=0,r=3;return new Promise(o=>{let a=()=>{try{if(!$.existsSync(e)){o();return}let f=$.statSync(e).size;if(f===i&&f>0){if(n++,n>=r){o();return}}else n=0;i=f,Date.now()-g<t?setTimeout(a,500):o()}catch(m){o()}},g=Date.now();a()})}async processNewZipFile(e,t){try{console.log(`[FileWatcher] Processing new ZIP file: ${e}`),console.log(`[FileWatcher] Settings - deleteZipAfterImport: ${t.deleteZipAfterImport}`),this.notificationService.showInfo(`\u041E\u0431\u043D\u0430\u0440\u0443\u0436\u0435\u043D \u043D\u043E\u0432\u044B\u0439 \u0444\u0430\u0439\u043B: ${lt.basename(e)}`),await this.processingService.processZipFile(e,t)}catch(s){console.error("[Krisp Importer] Error processing new ZIP file:",s),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0439 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u0444\u0430\u0439\u043B\u0430: ${s.message}`)}}async scanExistingFiles(){if(!this.isWatching||!this.watchedPath){this.notificationService.showError("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430 \u043D\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043D\u0430 \u0438\u043B\u0438 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E. \u041D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C."),this.statusBarService&&this.statusBarService.setIdle("\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E");return}let e=this.isWatching,t=this.watchedPath;this.statusBarService&&this.statusBarService.setProcessing("\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u0444\u0430\u0439\u043B\u043E\u0432...");try{let i=$.readdirSync(this.watchedPath).filter(o=>o.toLowerCase().endsWith(".zip"));if(i.length===0){this.notificationService.showInfo("\u0412 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435\u0442 ZIP-\u0444\u0430\u0439\u043B\u043E\u0432");return}this.notificationService.showInfo(`\u041D\u0430\u0439\u0434\u0435\u043D\u043E ${i.length} ZIP-\u0444\u0430\u0439\u043B\u043E\u0432 \u0434\u043B\u044F \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438`);let n=0,r=0;for(let o of i)try{let a=lt.join(this.watchedPath,o),g=this.settingsProvider();await this.processNewZipFile(a,g),n++}catch(a){console.error(`[Krisp Importer] Error processing ${o}:`,a),r++}this.notificationService.showBatchImportResult(n,r,0,"\u043C\u0430\u0441\u0441\u043E\u0432\u043E\u0435 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435")}catch(s){console.error("[Krisp Importer] Error scanning existing files:",s),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u043F\u0430\u043F\u043A\u0438: ${s.message}`),this.statusBarService&&this.statusBarService.setError("\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F")}finally{this.statusBarService&&(e&&t?this.statusBarService.setWatching(t):this.statusBarService.setIdle("\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043E"))}}};var $t=require("obsidian"),tt=(i=>(i[i.DEBUG=0]="DEBUG",i[i.INFO=1]="INFO",i[i.WARN=2]="WARN",i[i.ERROR=3]="ERROR",i))(tt||{}),It=class{constructor(e=1){this.logs=[];this.maxLogEntries=1e3;this.currentLogLevel=1;this.currentLogLevel=e,this.log(1,"System","LoggingService initialized")}log(e,t,s,i){if(e<this.currentLogLevel)return;let n={timestamp:new Date,level:e,category:t,message:s,details:i};this.logs.push(n),this.logs.length>this.maxLogEntries&&(this.logs=this.logs.slice(-this.maxLogEntries));let r=tt[e],a=`[${n.timestamp.toISOString()}] [${r}] [${t}] ${s}`;switch(e){case 0:console.debug(a,i);break;case 1:console.info(a,i);break;case 2:console.warn(a,i);break;case 3:console.error(a,i);break}}debug(e,t,s){this.log(0,e,t,s)}info(e,t,s){this.log(1,e,t,s)}warn(e,t,s){this.log(2,e,t,s)}error(e,t,s){this.log(3,e,t,s)}logZipProcessingStart(e){this.info("Processing",`\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0443 ZIP-\u0444\u0430\u0439\u043B\u0430: ${e}`)}logZipProcessingSuccess(e,t){this.info("Processing",`\u0423\u0441\u043F\u0435\u0448\u043D\u043E \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D ZIP-\u0444\u0430\u0439\u043B: ${e}`,{noteName:t})}logZipProcessingError(e,t){this.error("Processing",`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ZIP-\u0444\u0430\u0439\u043B\u0430: ${e}`,{error:t.message,stack:t.stack})}logFileWatcherStart(e){this.info("FileWatcher",`\u0417\u0430\u043F\u0443\u0449\u0435\u043D\u043E \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: ${e}`)}logFileWatcherStop(){this.info("FileWatcher","\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E")}logFileWatcherError(e){this.error("FileWatcher","\u041E\u0448\u0438\u0431\u043A\u0430 \u0432 FileWatcher",{error:e.message,stack:e.stack})}logDuplicateHandling(e,t,s){this.info("Duplicates",`\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u0430: ${t}`,{strategy:e,action:s})}logSettingsChange(e,t,s){this.info("Settings",`\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0430 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430: ${e}`,{oldValue:t,newValue:s})}logNoteCreation(e,t){this.info("NoteCreator",`\u0421\u043E\u0437\u0434\u0430\u043D\u0430 \u0437\u0430\u043C\u0435\u0442\u043A\u0430: ${e}`,{templateUsed:t})}logAudioFileCopy(e,t){this.info("AudioCopy",`\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B: ${e} -> ${t}`)}getAllLogs(){return[...this.logs]}getLogsByLevel(e){return this.logs.filter(t=>t.level>=e)}getLogsByCategory(e){return this.logs.filter(t=>t.category===e)}getRecentLogs(e=50){return this.logs.slice(-e)}exportLogsAsText(){return this.logs.map(t=>{let s=t.timestamp.toISOString(),i=tt[t.level].padEnd(5),n=t.category.padEnd(12),r=`[${s}] [${i}] [${n}] ${t.message}`;return t.details&&(r+=`
    Details: ${JSON.stringify(t.details,null,2)}`),r}).join(`
`)}exportLogsAsJSON(){return JSON.stringify(this.logs,null,2)}clearLogs(){let e=this.logs.length;this.logs=[],this.info("System",`\u041E\u0447\u0438\u0449\u0435\u043D\u044B \u043B\u043E\u0433\u0438 (\u0431\u044B\u043B\u043E \u0437\u0430\u043F\u0438\u0441\u0435\u0439: ${e})`)}setLogLevel(e){let t=this.currentLogLevel;this.currentLogLevel=e,this.info("System",`\u0418\u0437\u043C\u0435\u043D\u0435\u043D \u0443\u0440\u043E\u0432\u0435\u043D\u044C \u043B\u043E\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F: ${tt[t]} -> ${tt[e]}`)}getLogStats(){let e={},t={};return this.logs.forEach(s=>{let i=tt[s.level];e[i]=(e[i]||0)+1,t[s.category]=(t[s.category]||0)+1}),{total:this.logs.length,byLevel:e,byCategory:t}}async copyLogsToClipboard(){try{let e=this.exportLogsAsText();await navigator.clipboard.writeText(e),new $t.Notice("\u{1F4CB} Logs copied to clipboard",3e3),this.info("System","\u041B\u043E\u0433\u0438 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u044B \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430")}catch(e){this.error("System","\u041E\u0448\u0438\u0431\u043A\u0430 \u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u043B\u043E\u0433\u043E\u0432 \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430",e),new $t.Notice("\u274C Error copying logs",5e3)}}};var Ht=require("obsidian");var bt=class{constructor(e){this.statusBarItem=null;this.currentStatus="idle";this.currentMessage="";this.plugin=e,this.initialize()}initialize(){this.statusBarItem=this.plugin.addStatusBarItem(),this.statusBarItem.addClass("krisp-importer-status"),this.statusBarItem.style.cursor="pointer",this.statusBarItem.addEventListener("click",()=>{this.plugin.app.setting.open(),this.plugin.app.setting.openTabById("krisp-notes-importer")}),this.updateDisplay()}updateDisplay(){if(!this.statusBarItem)return;let{icon:e,text:t,color:s}=this.getStatusDisplay();this.statusBarItem.empty(),this.statusBarItem.removeClass("idle","watching","processing","error");let i=this.currentStatus.toLowerCase();this.statusBarItem.addClass(i);let n=this.statusBarItem.createEl("span");n.style.marginRight="4px",(0,Ht.setIcon)(n,e);let r=this.statusBarItem.createEl("span");r.textContent=t,this.statusBarItem.style.color=s,this.statusBarItem.setAttribute("aria-label",this.getTooltipText())}getStatusDisplay(){switch(this.currentStatus){case"idle":return{icon:"pause-circle",text:"Krisp",color:"var(--text-muted)"};case"watching":return{icon:"eye",text:"Krisp",color:"var(--color-green)"};case"processing":return{icon:"loader-2",text:"Krisp",color:"var(--color-blue)"};case"error":return{icon:"alert-circle",text:"Krisp",color:"var(--color-red)"};default:return{icon:"help-circle",text:"Krisp",color:"var(--text-muted)"}}}getTooltipText(){let e="Krisp Notes Importer";switch(this.currentStatus){case"idle":return`${e}: \u041D\u0435\u0430\u043A\u0442\u0438\u0432\u0435\u043D`;case"watching":return`${e}: \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0430\u043A\u0442\u0438\u0432\u043D\u043E${this.currentMessage?` - ${this.currentMessage}`:""}`;case"processing":return`${e}: \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0444\u0430\u0439\u043B\u0430${this.currentMessage?` - ${this.currentMessage}`:""}`;case"error":return`${e}: \u041E\u0448\u0438\u0431\u043A\u0430${this.currentMessage?` - ${this.currentMessage}`:""}`;default:return e}}setIdle(e){this.currentStatus="idle",this.currentMessage=e||"",this.updateDisplay()}setWatching(e){this.currentStatus="watching",this.currentMessage=e?`Watching: ${e}`:"",this.updateDisplay()}setProcessing(e){this.currentStatus="processing",this.currentMessage=e?`\u0424\u0430\u0439\u043B: ${e}`:"",this.updateDisplay()}setError(e){this.currentStatus="error",this.currentMessage=e||"",this.updateDisplay(),setTimeout(()=>{this.currentStatus==="error"&&this.setIdle()},1e4)}showTemporaryMessage(e,t=3e3){let s=this.currentStatus,i=this.currentMessage;this.currentMessage=e,this.updateDisplay(),setTimeout(()=>{this.currentStatus=s,this.currentMessage=i,this.updateDisplay()},t)}getCurrentStatus(){return this.currentStatus}isActive(){return this.currentStatus==="watching"||this.currentStatus==="processing"}destroy(){this.statusBarItem&&(this.statusBarItem.remove(),this.statusBarItem=null)}startProcessingAnimation(){if(!this.statusBarItem||this.currentStatus!=="processing")return;let e=this.statusBarItem.querySelector("span:first-child");e&&(e.style.animation="spin 1s linear infinite")}stopAnimation(){if(!this.statusBarItem)return;let e=this.statusBarItem.querySelector("span:first-child");e&&(e.style.animation="")}updateDisplayWithAnimation(){this.updateDisplay(),this.currentStatus==="processing"?this.startProcessingAnimation():this.stopAnimation()}};var yt=class extends F.Plugin{async onload(){console.log("Loading Krisp Notes Importer plugin..."),this.loggingService=new It(1),this.loggingService.info("Plugin","\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0443 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 Krisp Notes Importer"),this.settingsManager=new ut(this),await this.settingsManager.loadSettings(),this.loggingService.info("Plugin","Settings loaded");let t=this.settingsManager.getSetting("language")||"en";this.localizationService=new nt(t),this.loggingService.info("Plugin",`\u041B\u043E\u043A\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u0430: ${t}`),this.notificationService=new ot,this.statusBarService=new bt(this),this.processingService=new Et(this.app,this.statusBarService),this.loggingService.info("Plugin","\u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044B \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u044B"),this.fileWatcherService=new wt(this.app,this.processingService,this.notificationService,()=>this.settingsManager.getAllSettings(),this.statusBarService),this.addSettingTab(new dt(this.app,this)),this.addCommand({id:"import-krisp-zip-manually",name:this.localizationService.t("commands.importZip"),callback:()=>{this.loggingService.info("Commands","\u0417\u0430\u043F\u0443\u0449\u0435\u043D\u0430 \u043A\u043E\u043C\u0430\u043D\u0434\u0430 \u0440\u0443\u0447\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430 ZIP-\u0444\u0430\u0439\u043B\u0430"),new At(this.app,async n=>{if(n&&n.trim()!==""){let r=n.trim();this.loggingService.info("Commands",`\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u0440\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u0444\u0430\u0439\u043B\u0430: ${r}`),this.statusBarService&&this.statusBarService.setProcessing(r.split("/").pop()||r);try{await this.processingService.processZipFile(r,this.settingsManager.settings)}catch(o){this.statusBarService&&this.statusBarService.getCurrentStatus()!=="error"&&this.statusBarService.setError("\u041E\u0448\u0438\u0431\u043A\u0430 \u0440\u0443\u0447\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430")}finally{this.statusBarService&&(this.settingsManager.getSetting("autoScanEnabled")&&this.fileWatcherService.isCurrentlyWatching()?this.statusBarService.setWatching(this.fileWatcherService.getWatchedPath()):this.statusBarService.setIdle("\u0420\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D"))}}else this.loggingService.warn("Commands","\u041F\u043E\u043F\u044B\u0442\u043A\u0430 \u0438\u043C\u043F\u043E\u0440\u0442\u0430 \u0441 \u043F\u0443\u0441\u0442\u044B\u043C \u043F\u0443\u0442\u0435\u043C \u043A \u0444\u0430\u0439\u043B\u0443"),new F.Notice("File path cannot be empty.")},this.localizationService).open()}}),this.addCommand({id:"start-auto-watching",name:this.localizationService.t("commands.startWatching"),callback:async()=>{let n=this.settingsManager.getSetting("watchedFolderPath");n&&n.trim()!==""?(this.statusBarService.setWatching(n),await this.fileWatcherService.startWatching(n)):(this.statusBarService.setError("No watched folder specified"),new F.Notice("Please set the watched folder path in settings first."))}}),this.addCommand({id:"stop-auto-watching",name:this.localizationService.t("commands.stopWatching"),callback:async()=>{this.statusBarService.setIdle("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),await this.fileWatcherService.stopWatching()}}),this.addCommand({id:"scan-existing-files",name:this.localizationService.t("commands.scanExisting"),callback:async()=>{await this.fileWatcherService.scanExistingFiles()}}),this.addCommand({id:"debug-settings",name:this.localizationService.t("commands.debugSettings"),callback:()=>{let n=this.settingsManager.getAllSettings();console.log("[Krisp Importer] Current settings:",n),new F.Notice(`Settings logged to console. deleteZipAfterImport: ${n.deleteZipAfterImport}`,5e3)}}),this.addCommand({id:"check-watching-status",name:this.localizationService.t("commands.checkStatus"),callback:()=>{let n=this.fileWatcherService.isCurrentlyWatching(),r=this.fileWatcherService.getWatchedPath(),o=this.settingsManager.getSetting("autoScanEnabled");console.log("[Krisp Importer] Watching status:",{isWatching:n,watchedPath:r,autoScanEnabled:o});let a=n?`\u2705 \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0430\u043A\u0442\u0438\u0432\u043D\u043E: ${r}`:`\u274C \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E. AutoScan \u0432 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430\u0445: ${o?"\u0432\u043A\u043B\u044E\u0447\u0435\u043D":"\u0432\u044B\u043A\u043B\u044E\u0447\u0435\u043D"}`;new F.Notice(a,7e3)}});let s=this.settingsManager.getSetting("autoScanEnabled"),i=this.settingsManager.getSetting("watchedFolderPath");s&&i&&i.trim()!==""?(this.loggingService.info("Plugin",`\u0410\u0432\u0442\u043E\u0437\u0430\u043F\u0443\u0441\u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F \u043F\u0430\u043F\u043A\u0438: ${i}`),this.statusBarService.setWatching(i),await this.fileWatcherService.startWatching(i)):this.statusBarService.setIdle("\u0413\u043E\u0442\u043E\u0432 \u043A \u0440\u0430\u0431\u043E\u0442\u0435"),this.loggingService.info("Plugin","\u041F\u043B\u0430\u0433\u0438\u043D Krisp Notes Importer \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D \u0443\u0441\u043F\u0435\u0448\u043D\u043E"),console.log("Krisp Notes Importer plugin loaded successfully.")}onunload(){this.fileWatcherService&&this.fileWatcherService.stopWatching(),this.statusBarService&&this.statusBarService.destroy(),this.loggingService&&this.loggingService.info("Plugin","\u0412\u044B\u0433\u0440\u0443\u0436\u0430\u044E \u043F\u043B\u0430\u0433\u0438\u043D Krisp Notes Importer"),console.log("Unloading Krisp Notes Importer plugin.")}},At=class extends F.Modal{constructor(t,s,i){super(t);this.onSubmitCallback=s,this.localization=i}onOpen(){let{contentEl:t}=this;t.empty(),t.createEl("h2",{text:this.localization.t("modal.importZip.title")}),new F.Setting(t).setName(this.localization.t("modal.importZip.pathLabel")).setDesc(this.localization.t("modal.importZip.pathDesc")).addText(s=>{s.setPlaceholder("/path/to/your/krisp_meeting.zip"),s.onChange(i=>{this.filePath=i}),s.inputEl.style.width="100%",s.inputEl.addEventListener("keypress",i=>{i.key==="Enter"&&(i.preventDefault(),this.submitForm())})}),new F.Setting(t).addButton(s=>s.setButtonText(this.localization.t("modal.importZip.importButton")).setCta().onClick(()=>{this.submitForm()}))}submitForm(){this.filePath&&this.filePath.trim()!==""?(this.onSubmitCallback(this.filePath.trim()),this.close()):new F.Notice(this.localization.t("modal.importZip.emptyPathError"))}onClose(){let{contentEl:t}=this;t.empty()}};
/*! Bundled license information:

node-stream-zip/node_stream_zip.js:
  (**
   * @license node-stream-zip | (c) 2020 Antelle | https://github.com/antelle/node-stream-zip/blob/master/LICENSE
   * Portions copyright https://github.com/cthackers/adm-zip | https://raw.githubusercontent.com/cthackers/adm-zip/master/LICENSE
   *)
*/
