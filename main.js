/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

/**
 * Defines a function that returns another function to execute a module.
 */
/**
 * Assigns properties from one object to another.
 */
/**
 * Creates a module loader function that initializes and returns exports from a given module factory.
 *
 * This function takes a module factory `g` and an optional context object `t`. If the context is provided,
 * it uses that; otherwise, it creates a new context with an `exports` property. The module factory is
 * then invoked with the context's exports and the context itself. Finally, the function returns the
 * exports of the context.
 */
/**
 * Creates an object with a default property if the input is not null and merges it with another object.
 *
 * This function first checks if the input `g` is not null, then creates an object `e` with a "default" property set to `g`.
 * It then uses the `Kt` function to merge this object `e` with another object. If `g` is null or does not have an
 * "__esModule" property, it merges with the result of `vt(e, "default", { value: g, enumerable: true })`. Otherwise,
 * it directly merges with `e`.
 *
 * @param {*} g - The input object to be processed.
 * @param {*} t - Another object to merge with, or a condition to check.
 * @param {*} e - An optional parameter that defaults to an empty object if not provided.
 */
/**
 * Creates a module object with default exports and assigns it to the provided namespace.
 */
/**
 * Handles file reading and error emission based on file descriptor availability.
 */
/**
 * Handles file statistics and emits an error if one occurs.
 */
/**
 * Processes an archive read operation and emits errors if necessary.
 *
 * This function checks for specific byte sequences in the buffer to determine if the archive is complete.
 * If the archive is not complete, it expands the buffer size and retries the read operation.
 * It handles various error conditions such as empty archives or bad archive structures by emitting errors.
 *
 * @param o - An error object or a boolean flag indicating an error occurred.
 * @param h - The current position in the archive.
 */
/**
 * Initializes an object with properties and reads a chunk of data.
 */
/**
 * Processes a buffer to extract and handle ZIP file data.
 *
 * This function reads a buffer starting from a specified position, creates a new kt object,
 * and populates it with the header data. It sets the comment if present and updates various
 * properties like entriesCount and centralDirectory. If specific conditions related to ZIP64
 * are met, it calls `y()`. Otherwise, it resets `i` and calls `B()`. Errors during this process
 * are emitted.
 */
/**
 * Adjusts buffer position and calls D() or initializes i object based on conditions.
 */
/**
 * Reads and processes buffer data to update internal state.
 */
/**
 * Reads and processes buffer data to update central directory information.
 */
/**
 * Reads data from a position in a volume and processes it.
 */
/**
 * Processes entries from a buffer and emits events based on the operation status.
 *
 * This function reads entries from a buffer, validates them, and emits either an 'entry' event for each processed entry or an 'error' event if an error occurs. It handles moving the buffer window and skipping validation as needed.
 *
 * @param o - An optional error object or string representing an error condition.
 * @param h - A boolean indicating whether to handle entries.
 */
/**
 * Throws an error if storeEntries is disabled.
 */
/**
 * Calculates the total offset including header, file name length, and extra length.
 */
/**
 * Checks if the flags property of the object has the 8th bit set.
 */
/**
 * Handles streaming data from a source to a destination file with error handling and completion callbacks.
 *
 * The function sets up a stream to read data from `o` and writes it to the file specified by `h`. It manages errors during
 * the process, ensures proper resource cleanup, and invokes the callback `m` upon completion or failure. The function
 * also emits an 'extract' event with the source and destination paths when the write stream finishes successfully.
 */
/**
 * Recursively creates directories based on a list of paths.
 *
 * This function processes an array of directory paths, concatenating them with
 * a given separator and attempting to create each directory recursively. If any
 * error occurs (other than "EEXIST"), it calls the provided callback function
 * with the error. The recursion continues until all directories are processed or
 * an error is encountered.
 *
 * @param {string} o - The base path used for creating directories.
 * @param {string[]} h - An array of directory paths to be created.
 * @param {Function} m - A callback function to handle errors or completion.
 */
/**
 * Recursively processes an array of objects, handling errors and incrementing a counter.
 *
 * This function shifts an object from the provided array `m`, constructs a path using `gt.join`,
 * and calls a callback function `X`. If an error occurs (`C` is truthy), it invokes the callback
 * `d` with the error and the current index `I`. Otherwise, it recursively calls itself with
 * incremented index `I + 1`.
 *
 * @param {Object} o - The base object for path construction.
 * @param {string} h - A string to replace in the object's name property.
 * @param {Array} m - An array of objects to process.
 * @param {Function} d - A callback function to handle errors or completion.
 * @param {number} I - The current index in the recursive process.
 */
/**
 * Converts encoded time and date strings into a Unix timestamp.
 */
/**
 * Converts a number to its binary representation with leading zeros.
 */
/**
 * Reads a 64-bit unsigned integer from a buffer at a specified offset.
 */
var ie=Object.create;var vt=Object.defineProperty;var se=Object.getOwnPropertyDescriptor;var ne=Object.getOwnPropertyNames;var re=Object.getPrototypeOf,ae=Object.prototype.hasOwnProperty;var oe=(g,t)=>()=>(t||g((t={exports:{}}).exports,t),t.exports),le=(g,t)=>{for(var e in t)vt(g,e,{get:t[e],enumerable:!0})},Kt=(g,t,e,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ne(t))!ae.call(g,i)&&i!==e&&vt(g,i,{get:()=>t[i],enumerable:!(s=se(t,i))||s.enumerable});return g};var lt=(g,t,e)=>(e=g!=null?ie(re(g)):{},Kt(t||!g||!g.__esModule?vt(e,"default",{value:g,enumerable:!0}):e,g)),ce=g=>Kt(vt({},"__esModule",{value:!0}),g);var qt=oe((Fe,Xt)=>{var O=require("fs"),he=require("util"),gt=require("path"),Bt=require("events"),Gt=require("zlib"),jt=require("stream"),p={LOCHDR:30,LOCSIG:67324752,LOCVER:4,LOCFLG:6,LOCHOW:8,LOCTIM:10,LOCCRC:14,LOCSIZ:18,LOCLEN:22,LOCNAM:26,LOCEXT:28,EXTSIG:134695760,EXTHDR:16,EXTCRC:4,EXTSIZ:8,EXTLEN:12,CENHDR:46,CENSIG:33639248,CENVEM:4,CENVER:6,CENFLG:8,CENHOW:10,CENTIM:12,CENCRC:16,CENSIZ:20,CENLEN:24,CENNAM:28,CENEXT:30,CENCOM:32,CENDSK:34,CENATT:36,CENATX:38,CENOFF:42,ENDHDR:22,ENDSIG:101010256,ENDSIGFIRST:80,ENDSUB:8,ENDTOT:10,ENDSIZ:12,ENDOFF:16,ENDCOM:20,MAXFILECOMMENT:65535,ENDL64HDR:20,ENDL64SIG:117853008,ENDL64SIGFIRST:80,ENDL64OFS:8,END64HDR:56,END64SIG:101075792,END64SIGFIRST:80,END64SUB:24,END64TOT:32,END64SIZ:40,END64OFF:48,STORED:0,SHRUNK:1,REDUCED1:2,REDUCED2:3,REDUCED3:4,REDUCED4:5,IMPLODED:6,DEFLATED:8,ENHANCED_DEFLATED:9,PKWARE:10,BZIP2:12,LZMA:14,IBM_TERSE:18,IBM_LZ77:19,FLG_ENC:0,FLG_COMP1:1,FLG_COMP2:2,FLG_DESC:4,FLG_ENH:8,FLG_STR:16,FLG_LNG:1024,FLG_MSK:4096,FLG_ENTRY_ENC:1,EF_ID:0,EF_SIZE:2,ID_ZIP64:1,ID_AVINFO:7,ID_PFS:8,ID_OS2:9,ID_NTFS:10,ID_OPENVMS:12,ID_UNIX:13,ID_FORK:14,ID_PATCH:15,ID_X509_PKCS7:20,ID_X509_CERTID_F:21,ID_X509_CERTID_C:22,ID_STRONGENC:23,ID_RECORD_MGT:24,ID_X509_PKCS7_RL:25,ID_IBM1:101,ID_IBM2:102,ID_POSZIP:18064,EF_ZIP64_OR_32:4294967295,EF_ZIP64_OR_16:65535},it=function(g){let t,e,s,i,n,r,a=this,c=g.storeEntries!==!1?{}:null,u=g.file,S=g.nameEncoding?new TextDecoder(g.nameEncoding):null;E();function E(){g.fd?(t=g.fd,T()):O.open(u,"r",(o,h)=>{if(o)return a.emit("error",o);t=h,T()})}function T(){O.fstat(t,(o,h)=>{if(o)return a.emit("error",o);e=h.size,s=g.chunkSize||Math.round(e/1e3),s=Math.max(Math.min(s,Math.min(128*1024,e)),Math.min(1024,e)),f()})}function L(o,h){if(o||!h)return a.emit("error",o||new Error("Archive read error"));let m=i.lastPos,d=m-i.win.position,I=i.win.buffer,w=i.minPos;for(;--m>=w&&--d>=0;)if(I.length-d>=4&&I[d]===i.firstByte&&I.readUInt32LE(d)===i.sig){i.lastBufferPosition=d,i.lastBytesRead=h,i.complete();return}if(m===w)return a.emit("error",new Error("Bad archive"));if(i.lastPos=m+1,i.chunkSize*=2,m<=w)return a.emit("error",new Error("Bad archive"));let N=Math.min(i.chunkSize,m-w);i.win.expandLeft(N,L)}function f(){let o=Math.min(p.ENDHDR+p.MAXFILECOMMENT,e);i={win:new yt(t),totalReadLength:o,minPos:e-o,lastPos:e,chunkSize:Math.min(1024,s),firstByte:p.ENDSIGFIRST,sig:p.ENDSIG,complete:b},i.win.read(e-i.chunkSize,i.chunkSize,L)}function b(){let o=i.win.buffer,h=i.lastBufferPosition;try{n=new kt,n.read(o.slice(h,h+p.ENDHDR)),n.headerOffset=i.win.position+h,n.commentLength?a.comment=o.slice(h+p.ENDHDR,h+p.ENDHDR+n.commentLength).toString():a.comment=null,a.entriesCount=n.volumeEntries,a.centralDirectory=n,n.volumeEntries===p.EF_ZIP64_OR_16&&n.totalEntries===p.EF_ZIP64_OR_16||n.size===p.EF_ZIP64_OR_32||n.offset===p.EF_ZIP64_OR_32?y():(i={},B())}catch(m){a.emit("error",m)}}function y(){let o=p.ENDL64HDR;i.lastBufferPosition>o?(i.lastBufferPosition-=o,D()):(i={win:i.win,totalReadLength:o,minPos:i.win.position-o,lastPos:i.win.position,chunkSize:i.chunkSize,firstByte:p.ENDL64SIGFIRST,sig:p.ENDL64SIG,complete:D},i.win.read(i.lastPos-i.chunkSize,i.chunkSize,L))}function D(){let o=i.win.buffer,h=new $t;h.read(o.slice(i.lastBufferPosition,i.lastBufferPosition+p.ENDL64HDR));let m=e-h.headerOffset;i={win:i.win,totalReadLength:m,minPos:h.headerOffset,lastPos:i.lastPos,chunkSize:i.chunkSize,firstByte:p.END64SIGFIRST,sig:p.END64SIG,complete:Z},i.win.read(e-i.chunkSize,i.chunkSize,L)}function Z(){let o=i.win.buffer,h=new Rt;h.read(o.slice(i.lastBufferPosition,i.lastBufferPosition+p.END64HDR)),a.centralDirectory.volumeEntries=h.volumeEntries,a.centralDirectory.totalEntries=h.totalEntries,a.centralDirectory.size=h.size,a.centralDirectory.offset=h.offset,a.entriesCount=h.volumeEntries,i={},B()}function B(){i={win:new yt(t),pos:n.offset,chunkSize:s,entriesLeft:n.volumeEntries},i.win.read(i.pos,Math.min(s,e-i.pos),k)}function k(o,h){if(o||!h)return a.emit("error",o||new Error("Entries read error"));let m=i.pos-i.win.position,d=i.entry,I=i.win.buffer,w=I.length;try{for(;i.entriesLeft>0;){d||(d=new Ot,d.readHeader(I,m),d.headerOffset=i.win.position+m,i.entry=d,i.pos+=p.CENHDR,m+=p.CENHDR);let N=d.fnameLen+d.extraLen+d.comLen,C=N+(i.entriesLeft>1?p.CENHDR:0);if(w-m<C){i.win.moveRight(s,k,m),i.move=!0;return}d.read(I,m,S),g.skipEntryNameValidation||d.validateName(),c&&(c[d.name]=d),a.emit("entry",d),i.entry=d=null,i.entriesLeft--,i.pos+=N,m+=N}a.emit("ready")}catch(N){a.emit("error",N)}}function K(){if(!c)throw new Error("storeEntries disabled")}Object.defineProperty(this,"ready",{get(){return!1}}),this.entry=function(o){return K(),c[o]},this.entries=function(){return K(),c},this.stream=function(o,h){return this.openEntry(o,(m,d)=>{if(m)return h(m);let I=H(d),w=new _t(t,I,d.compressedSize);if(d.method!==p.STORED)if(d.method===p.DEFLATED)w=w.pipe(Gt.createInflateRaw());else return h(new Error("Unknown compression method: "+d.method));G(d)&&(w=w.pipe(new zt(w,d.crc,d.size))),h(null,w)},!1)},this.entryDataSync=function(o){let h=null;if(this.openEntry(o,(d,I)=>{h=d,o=I},!0),h)throw h;let m=Buffer.alloc(o.compressedSize);if(new Q(t,m,0,o.compressedSize,H(o),d=>{h=d}).read(!0),h)throw h;if(o.method!==p.STORED)if(o.method===p.DEFLATED||o.method===p.ENHANCED_DEFLATED)m=Gt.inflateRawSync(m);else throw new Error("Unknown compression method: "+o.method);if(m.length!==o.size)throw new Error("Invalid size");return G(o)&&new et(o.crc,o.size).data(m),m},this.openEntry=function(o,h,m){if(typeof o=="string"&&(K(),o=c[o],!o))return h(new Error("Entry not found"));if(!o.isFile)return h(new Error("Entry is not file"));if(!t)return h(new Error("Archive closed"));let d=Buffer.alloc(p.LOCHDR);new Q(t,d,0,d.length,o.offset,I=>{if(I)return h(I);let w;try{o.readDataHeader(d),o.encrypted&&(w=new Error("Entry encrypted"))}catch(N){w=N}h(w,o)}).read(m)};function H(o){return o.offset+p.LOCHDR+o.fnameLen+o.extraLen}function G(o){return(o.flags&8)!==8}function X(o,h,m){a.stream(o,(d,I)=>{if(d)m(d);else{let w,N;I.on("error",C=>{N=C,w&&(I.unpipe(w),w.close(()=>{m(C)}))}),O.open(h,"w",(C,W)=>{if(C)return m(C);if(N){O.close(t,()=>{m(N)});return}w=O.createWriteStream(h,{fd:W}),w.on("finish",()=>{a.emit("extract",o,h),N||m()}),I.pipe(w)})}})}function P(o,h,m){if(!h.length)return m();let d=h.shift();d=gt.join(o,gt.join(...d)),O.mkdir(d,{recursive:!0},I=>{if(I&&I.code!=="EEXIST")return m(I);P(o,h,m)})}function rt(o,h,m,d,I){if(!m.length)return d(null,I);let w=m.shift(),N=gt.join(o,w.name.replace(h,""));X(w,N,C=>{if(C)return d(C,I);rt(o,h,m,d,I+1)})}this.extract=function(o,h,m){let d=o||"";if(typeof o=="string"&&(o=this.entry(o),o?d=o.name:d.length&&d[d.length-1]!=="/"&&(d+="/")),!o||o.isDirectory){let I=[],w=[],N={};for(let C in c)if(Object.prototype.hasOwnProperty.call(c,C)&&C.lastIndexOf(d,0)===0){let W=C.replace(d,""),Ht=c[C];if(Ht.isFile&&(I.push(Ht),W=gt.dirname(W)),W&&!N[W]&&W!=="."){N[W]=!0;let q=W.split("/").filter(dt=>dt);for(q.length&&w.push(q);q.length>1;){q=q.slice(0,q.length-1);let dt=q.join("/");if(N[dt]||dt===".")break;N[dt]=!0,w.push(q)}}}w.sort((C,W)=>C.length-W.length),w.length?P(h,w,C=>{C?m(C):rt(h,d,I,m,0)}):rt(h,d,I,m,0)}else O.stat(h,(I,w)=>{w&&w.isDirectory()?X(o,gt.join(h,gt.basename(o.name)),m):X(o,h,m)})},this.close=function(o){r||!t?(r=!0,o&&o()):(r=!0,O.close(t,h=>{t=null,o&&o(h)}))};let St=Bt.EventEmitter.prototype.emit;this.emit=function(...o){if(!r)return St.call(this,...o)}};it.setFs=function(g){O=g};it.debugLog=(...g)=>{it.debug&&console.log(...g)};he.inherits(it,Bt.EventEmitter);var J=Symbol("zip");it.async=class extends Bt.EventEmitter{constructor(t){super();let e=new it(t);e.on("entry",s=>this.emit("entry",s)),e.on("extract",(s,i)=>this.emit("extract",s,i)),this[J]=new Promise((s,i)=>{e.on("ready",()=>{e.removeListener("error",i),s(e)}),e.on("error",i)})}get entriesCount(){return this[J].then(t=>t.entriesCount)}get comment(){return this[J].then(t=>t.comment)}async entry(t){return(await this[J]).entry(t)}async entries(){return(await this[J]).entries()}async stream(t){let e=await this[J];return new Promise((s,i)=>{e.stream(t,(n,r)=>{n?i(n):s(r)})})}async entryData(t){let e=await this.stream(t);return new Promise((s,i)=>{let n=[];e.on("data",r=>n.push(r)),e.on("end",()=>{s(Buffer.concat(n))}),e.on("error",r=>{e.removeAllListeners("end"),i(r)})})}async extract(t,e){let s=await this[J];return new Promise((i,n)=>{s.extract(t,e,(r,l)=>{r?n(r):i(l)})})}async close(){let t=await this[J];return new Promise((e,s)=>{t.close(i=>{i?s(i):e()})})}};var kt=class{read(t){if(t.length!==p.ENDHDR||t.readUInt32LE(0)!==p.ENDSIG)throw new Error("Invalid central directory");this.volumeEntries=t.readUInt16LE(p.ENDSUB),this.totalEntries=t.readUInt16LE(p.ENDTOT),this.size=t.readUInt32LE(p.ENDSIZ),this.offset=t.readUInt32LE(p.ENDOFF),this.commentLength=t.readUInt16LE(p.ENDCOM)}},$t=class{read(t){if(t.length!==p.ENDL64HDR||t.readUInt32LE(0)!==p.ENDL64SIG)throw new Error("Invalid zip64 central directory locator");this.headerOffset=tt(t,p.ENDSUB)}},Rt=class{read(t){if(t.length!==p.END64HDR||t.readUInt32LE(0)!==p.END64SIG)throw new Error("Invalid central directory");this.volumeEntries=tt(t,p.END64SUB),this.totalEntries=tt(t,p.END64TOT),this.size=tt(t,p.END64SIZ),this.offset=tt(t,p.END64OFF)}},Ot=class{readHeader(t,e){if(t.length<e+p.CENHDR||t.readUInt32LE(e)!==p.CENSIG)throw new Error("Invalid entry header");this.verMade=t.readUInt16LE(e+p.CENVEM),this.version=t.readUInt16LE(e+p.CENVER),this.flags=t.readUInt16LE(e+p.CENFLG),this.method=t.readUInt16LE(e+p.CENHOW);let s=t.readUInt16LE(e+p.CENTIM),i=t.readUInt16LE(e+p.CENTIM+2);this.time=Yt(s,i),this.crc=t.readUInt32LE(e+p.CENCRC),this.compressedSize=t.readUInt32LE(e+p.CENSIZ),this.size=t.readUInt32LE(e+p.CENLEN),this.fnameLen=t.readUInt16LE(e+p.CENNAM),this.extraLen=t.readUInt16LE(e+p.CENEXT),this.comLen=t.readUInt16LE(e+p.CENCOM),this.diskStart=t.readUInt16LE(e+p.CENDSK),this.inattr=t.readUInt16LE(e+p.CENATT),this.attr=t.readUInt32LE(e+p.CENATX),this.offset=t.readUInt32LE(e+p.CENOFF)}readDataHeader(t){if(t.readUInt32LE(0)!==p.LOCSIG)throw new Error("Invalid local header");this.version=t.readUInt16LE(p.LOCVER),this.flags=t.readUInt16LE(p.LOCFLG),this.method=t.readUInt16LE(p.LOCHOW);let e=t.readUInt16LE(p.LOCTIM),s=t.readUInt16LE(p.LOCTIM+2);this.time=Yt(e,s),this.crc=t.readUInt32LE(p.LOCCRC)||this.crc;let i=t.readUInt32LE(p.LOCSIZ);i&&i!==p.EF_ZIP64_OR_32&&(this.compressedSize=i);let n=t.readUInt32LE(p.LOCLEN);n&&n!==p.EF_ZIP64_OR_32&&(this.size=n),this.fnameLen=t.readUInt16LE(p.LOCNAM),this.extraLen=t.readUInt16LE(p.LOCEXT)}read(t,e,s){let i=t.slice(e,e+=this.fnameLen);this.name=s?s.decode(new Uint8Array(i)):i.toString("utf8");let n=t[e-1];this.isDirectory=n===47||n===92,this.extraLen&&(this.readExtra(t,e),e+=this.extraLen),this.comment=this.comLen?t.slice(e,e+this.comLen).toString():null}validateName(){if(/\\|^\w+:|^\/|(^|\/)\.\.(\/|$)/.test(this.name))throw new Error("Malicious entry: "+this.name)}readExtra(t,e){let s,i,n=e+this.extraLen;for(;e<n;)s=t.readUInt16LE(e),e+=2,i=t.readUInt16LE(e),e+=2,p.ID_ZIP64===s&&this.parseZip64Extra(t,e,i),e+=i}parseZip64Extra(t,e,s){s>=8&&this.size===p.EF_ZIP64_OR_32&&(this.size=tt(t,e),e+=8,s-=8),s>=8&&this.compressedSize===p.EF_ZIP64_OR_32&&(this.compressedSize=tt(t,e),e+=8,s-=8),s>=8&&this.offset===p.EF_ZIP64_OR_32&&(this.offset=tt(t,e),e+=8,s-=8),s>=4&&this.diskStart===p.EF_ZIP64_OR_16&&(this.diskStart=t.readUInt32LE(e))}get encrypted(){return(this.flags&p.FLG_ENTRY_ENC)===p.FLG_ENTRY_ENC}get isFile(){return!this.isDirectory}},Q=class{constructor(t,e,s,i,n,r){this.fd=t,this.buffer=e,this.offset=s,this.length=i,this.position=n,this.callback=r,this.bytesRead=0,this.waiting=!1}read(t){it.debugLog("read",this.position,this.bytesRead,this.length,this.offset),this.waiting=!0;let e;if(t){let s=0;try{s=O.readSync(this.fd,this.buffer,this.offset+this.bytesRead,this.length-this.bytesRead,this.position+this.bytesRead)}catch(i){e=i}this.readCallback(t,e,e?s:null)}else O.read(this.fd,this.buffer,this.offset+this.bytesRead,this.length-this.bytesRead,this.position+this.bytesRead,this.readCallback.bind(this,t))}readCallback(t,e,s){if(typeof s=="number"&&(this.bytesRead+=s),e||!s||this.bytesRead===this.length)return this.waiting=!1,this.callback(e,this.bytesRead);this.read(t)}},yt=class{constructor(t){this.position=0,this.buffer=Buffer.alloc(0),this.fd=t,this.fsOp=null}checkOp(){if(this.fsOp&&this.fsOp.waiting)throw new Error("Operation in progress")}read(t,e,s){this.checkOp(),this.buffer.length<e&&(this.buffer=Buffer.alloc(e)),this.position=t,this.fsOp=new Q(this.fd,this.buffer,0,e,this.position,s).read()}expandLeft(t,e){this.checkOp(),this.buffer=Buffer.concat([Buffer.alloc(t),this.buffer]),this.position-=t,this.position<0&&(this.position=0),this.fsOp=new Q(this.fd,this.buffer,0,t,this.position,e).read()}expandRight(t,e){this.checkOp();let s=this.buffer.length;this.buffer=Buffer.concat([this.buffer,Buffer.alloc(t)]),this.fsOp=new Q(this.fd,this.buffer,s,t,this.position+s,e).read()}moveRight(t,e,s){this.checkOp(),s?this.buffer.copy(this.buffer,0,s):s=0,this.position+=s,this.fsOp=new Q(this.fd,this.buffer,this.buffer.length-s,s,this.position+this.buffer.length-s,e).read()}},_t=class extends jt.Readable{constructor(t,e,s){super(),this.fd=t,this.offset=e,this.length=s,this.pos=0,this.readCallback=this.readCallback.bind(this)}_read(t){let e=Buffer.alloc(Math.min(t,this.length-this.pos));e.length?O.read(this.fd,e,0,e.length,this.offset+this.pos,this.readCallback):this.push(null)}readCallback(t,e,s){this.pos+=e,t?(this.emit("error",t),this.push(null)):e?(e!==s.length&&(s=s.slice(0,e)),this.push(s)):this.push(null)}},zt=class extends jt.Transform{constructor(t,e,s){super(),this.verify=new et(e,s),t.on("error",i=>{this.emit("error",i)})}_transform(t,e,s){let i;try{this.verify.data(t)}catch(n){i=n}s(i,t)}},et=class{constructor(t,e){this.crc=t,this.size=e,this.state={crc:-1,size:0}}data(t){let e=et.getCrcTable(),s=this.state.crc,i=0,n=t.length;for(;--n>=0;)s=e[(s^t[i++])&255]^s>>>8;if(this.state.crc=s,this.state.size+=t.length,this.state.size>=this.size){let r=Buffer.alloc(4);if(r.writeInt32LE(~this.state.crc&4294967295,0),s=r.readUInt32LE(0),s!==this.crc)throw new Error("Invalid CRC");if(this.state.size!==this.size)throw new Error("Invalid size")}}static getCrcTable(){let t=et.crcTable;if(!t){et.crcTable=t=[];let e=Buffer.alloc(4);for(let s=0;s<256;s++){let i=s;for(let n=8;--n>=0;)i&1?i=3988292384^i>>>1:i=i>>>1;i<0&&(e.writeInt32LE(i,0),i=e.readUInt32LE(0)),t[s]=i}}return t}};function Yt(g,t){let e=Vt(g,16),s=Vt(t,16),i={h:parseInt(e.slice(0,5).join(""),2),m:parseInt(e.slice(5,11).join(""),2),s:parseInt(e.slice(11,16).join(""),2)*2,Y:parseInt(s.slice(0,7).join(""),2)+1980,M:parseInt(s.slice(7,11).join(""),2),D:parseInt(s.slice(11,16).join(""),2)},n=[i.Y,i.M,i.D].join("-")+" "+[i.h,i.m,i.s].join(":")+" GMT+0";return new Date(n).getTime()}function Vt(g,t){let e=(g>>>0).toString(2);for(;e.length<t;)e="0"+e;return e.split("")}function tt(g,t){return g.readUInt32LE(t+4)*4294967296+g.readUInt32LE(t)}Xt.exports=it});var ue={};le(ue,{default:()=>Ft});module.exports=ce(ue);var R=require("obsidian");var M={watchedFolderPath:"",notesFolderPath:"KrispNotes/Notes",attachmentsFolderPath:"KrispNotes/Attachments",noteNameTemplate:"{{YYYY}}-{{MM}}-{{DD}}_{{HHMM}}_{{meetingTitle}}",attachmentNameTemplate:"{{YYYY}}-{{MM}}-{{DD}}_{{meetingTitle}}_audio",noteContentTemplate:`---
title: {{meetingTitle}}
date: {{date}}
time: {{time}}
type: meeting
source: krisp
tags:
{{yamlTags}}
  - meeting
  - krisp
audio: "{{audioPathForYaml}}"
participants: [{{participants}}]
duration: {{duration}}
meeting_stats:
  participants_count: {{participantsCount}}
  transcript_length: {{transcriptWords}}
  most_active_speaker: "{{mostActiveSpeaker}}"
---

# \u{1F399}\uFE0F {{meetingTitle}}

> [!info]+ \u{1F4CB} \u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0432\u0441\u0442\u0440\u0435\u0447\u0435
>
> **\u{1F4C5} \u0414\u0430\u0442\u0430:** {{date}}
> **\u23F0 \u0412\u0440\u0435\u043C\u044F:** {{time}}
> **\u23F1\uFE0F \u0414\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C:** {{duration}}
> **\u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0438:** {{participantsCount}} \u0447\u0435\u043B\u043E\u0432\u0435\u043A
> **\u{1F4CA} \u0421\u043B\u043E\u0432 \u0432 \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442\u0435:** {{transcriptWords}}
> **\u{1F5E3}\uFE0F \u0421\u0430\u043C\u044B\u0439 \u0430\u043A\u0442\u0438\u0432\u043D\u044B\u0439:** {{mostActiveSpeaker}}

---

## \u{1F3A7} \u0410\u0443\u0434\u0438\u043E\u0437\u0430\u043F\u0438\u0441\u044C

![[{{audioPathForYaml}}]]

*\u0414\u043B\u044F \u0432\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0434\u0435\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 \u0432\u0441\u0442\u0440\u043E\u0435\u043D\u043D\u044B\u0439 \u043F\u043B\u0435\u0435\u0440 Obsidian \u0438\u043B\u0438 \u043E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 \u0444\u0430\u0439\u043B: [[{{audioPathForYaml}}]]*

---

## \u{1F4DD} \u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435

> [!note]+ \u{1F4A1} \u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B \u0432\u0441\u0442\u0440\u0435\u0447\u0438
>
> {{summary}}

---

## \u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0438 \u0432\u0441\u0442\u0440\u0435\u0447\u0438

{{participantsList}}

### \u{1F4C8} \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438

{{participantsStats}}

---

## \u2705 \u0417\u0430\u0434\u0430\u0447\u0438 \u0438 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F

> [!todo]+ \u{1F4CB} Action Items
>
> {{actionItemsList}}

---

## \u{1F511} \u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B

> [!important]+ \u2B50 Key Points
>
> {{keyPointsList}}

---

## \u{1F3F7}\uFE0F \u0418\u0437\u0432\u043B\u0435\u0447\u0435\u043D\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F

{{extractedEntities}}

---

## \u{1F4CB} \u041F\u043E\u043B\u043D\u0430\u044F \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0446\u0438\u044F

> [!quote]- \u{1F399}\uFE0F \u0422\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u0432\u0441\u0442\u0440\u0435\u0447\u0438 ({{transcriptWords}} \u0441\u043B\u043E\u0432)
>
> {{formattedTranscript}}

---

## \u{1F517} \u0421\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0435 \u043C\u0430\u0442\u0435\u0440\u0438\u0430\u043B\u044B

- \u{1F4C4} **\u0417\u0430\u043C\u0435\u0442\u043A\u0430:** [[{{noteFileName}}]]
- \u{1F3B5} **\u0410\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B:** [[{{audioPathForYaml}}]]

{{relatedLinks}}

---

## \u{1F4CA} \u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u0432\u0441\u0442\u0440\u0435\u0447\u0438

| \u041F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 | \u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 |
|----------|----------|
| \u{1F4C5} \u0414\u0430\u0442\u0430 | {{date}} |
| \u23F0 \u0412\u0440\u0435\u043C\u044F \u043D\u0430\u0447\u0430\u043B\u0430 | {{time}} |
| \u23F1\uFE0F \u0414\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C | {{duration}} |
| \u{1F465} \u0423\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432 | {{participantsCount}} |
| \u{1F4DD} \u0421\u043B\u043E\u0432 \u0432 \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442\u0435 | {{transcriptWords}} |
| \u{1F5E3}\uFE0F \u0421\u0430\u043C\u044B\u0439 \u0430\u043A\u0442\u0438\u0432\u043D\u044B\u0439 | {{mostActiveSpeaker}} |

---

> [!tip]+ \u{1F916} \u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E\u0431 \u0438\u043C\u043F\u043E\u0440\u0442\u0435
>
> **\u0421\u043E\u0437\u0434\u0430\u043D\u043E:** Krisp Notes Importer
> **\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043E:** {{importDate}}
> **\u0418\u0441\u0442\u043E\u0447\u043D\u0438\u043A:** Krisp Meeting Archive
`,duplicateStrategy:"rename",deleteZipAfterImport:!1,openNoteAfterImport:!0,autoScanEnabled:!1,language:"en"};var $={ENTITIES_TEXT_LIMIT:5e3,SMART_TAGS_TEXT_LIMIT:3e3,MAX_PROJECTS_ENTITIES:5,MAX_COMPANIES_ENTITIES:5,MAX_DATES_ENTITIES:5,FILE_STABILITY_CHECK_INTERVAL:500,FILE_STABILITY_MAX_WAIT:5e3,FILE_STABILITY_REQUIRED_CHECKS:3,MAX_TRANSCRIPT_MEMORY_MB:50,LARGE_FILE_CHUNK_SIZE:65536,STREAMING_BUFFER_SIZE:1048576},F={SUCCESS:5e3,ERROR:8e3,INFO:5e3,WARNING:5e3,TEMPORARY_STATUS:3e3},mt={MEETING_NOTES:"meeting_notes.txt",TRANSCRIPT:"transcript.txt",AUDIO_DEFAULT:"recording.mp3",AUDIO_PATTERN:/^recording\.(mp3|m4a)$/i},Et={MAX_LOG_ENTRIES:1e3,LOG_TTL_HOURS:24,CLEANUP_INTERVAL_MINUTES:30},U={VALID_STRATEGIES:["skip","overwrite","rename"],VALID_LANGUAGES:["en","ru"],MIN_UUID_LENGTH:32,MIN_DATE_LENGTH:10,MIN_TIME_LENGTH:5},A={sanitizeFileName:g=>!g||typeof g!="string"?"untitled":g.replace(/[\/:\[\]\*\?"<>\|#\^]/g,"_").replace(/\s+/g,"_").replace(/^_+|_+$/g,"").substring(0,200)||"untitled",safeSubstring:(g,t,e,s="")=>!g||typeof g!="string"||g.length<e?s:g.substring(t,e),isValidFileName:g=>!g||typeof g!="string"?!1:!/[\/:\[\]\*\?"<>\|#\^]/.test(g)&&g.length>0&&g.length<=255};var It=class{constructor(t){this.plugin=t,this.settings={...M}}async loadSettings(){let t=await this.plugin.loadData();this.settings={...M,...t}}async saveSettings(){await this.plugin.saveData(this.settings)}getAllSettings(){return this.getSettingsWithDefaults()}getSetting(t){return this.getSettingsWithDefaults()[t]}async updateSetting(t,e){this.settings||await this.loadSettings(),this.settings[t]=e,await this.saveSettings()}isValidPath(t){return!!t&&typeof t=="string"&&t.trim()!==""}isValidTemplate(t){return!!t&&typeof t=="string"&&t.trim()!==""}isValidStrategy(t){return!!t&&typeof t=="string"&&U.VALID_STRATEGIES.includes(t)}isValidLanguage(t){return!!t&&typeof t=="string"&&U.VALID_LANGUAGES.includes(t)}validateSettings(){let t=[];return this.isValidPath(this.settings.watchedFolderPath)||t.push("\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),this.isValidPath(this.settings.notesFolderPath)||t.push("\u041F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435 \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),this.isValidPath(this.settings.attachmentsFolderPath)||t.push("\u041F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435 \u0432\u043B\u043E\u0436\u0435\u043D\u0438\u0439 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043F\u0443\u0441\u0442\u044B\u043C"),this.isValidTemplate(this.settings.noteNameTemplate)||t.push("Note name template cannot be empty"),this.isValidTemplate(this.settings.attachmentNameTemplate)||t.push("Audio name template cannot be empty"),this.isValidStrategy(this.settings.duplicateStrategy)||t.push(`\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u0430\u044F \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432: ${this.settings.duplicateStrategy}`),this.isValidLanguage(this.settings.language)||t.push(`\u041D\u0435\u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0439 \u044F\u0437\u044B\u043A: ${this.settings.language}`),{isValid:t.length===0,errors:t}}getSettingsWithDefaults(){return{...M,...this.settings,watchedFolderPath:this.isValidPath(this.settings.watchedFolderPath)?this.settings.watchedFolderPath.trim():M.watchedFolderPath,notesFolderPath:this.isValidPath(this.settings.notesFolderPath)?this.settings.notesFolderPath.trim():M.notesFolderPath,attachmentsFolderPath:this.isValidPath(this.settings.attachmentsFolderPath)?this.settings.attachmentsFolderPath.trim():M.attachmentsFolderPath,noteNameTemplate:this.isValidTemplate(this.settings.noteNameTemplate)?this.settings.noteNameTemplate.trim():M.noteNameTemplate,attachmentNameTemplate:this.isValidTemplate(this.settings.attachmentNameTemplate)?this.settings.attachmentNameTemplate.trim():M.attachmentNameTemplate,duplicateStrategy:this.isValidStrategy(this.settings.duplicateStrategy)?this.settings.duplicateStrategy:M.duplicateStrategy,language:this.isValidLanguage(this.settings.language)?this.settings.language:M.language}}};var v=require("obsidian");var ge={settings:{title:"Krisp Notes Importer Settings",sections:{basic:"\u{1F527} Basic Settings",storage:"\u{1F4BE} Obsidian Storage",templates:"\u{1F4DD} Templates & Naming",duplicates:"\u{1F504} Duplicate Handling",postImport:"\u26A1 Post-Import Actions",advanced:"\u{1F6E0}\uFE0F Advanced & Maintenance",coreAutomation:"\u{1F4C2} Core: Watching & Automation",namingAndTemplates:"\u{1F3A8} Appearance & Naming",importBehavior:"\u2699\uFE0F Import Behavior",manualOperations:"\u{1F6E0}\uFE0F Manual Operations & Diagnostics",aboutPlugin:"\u2139\uFE0F About Plugin"},fields:{watchedFolder:{name:"Watched Folder Path",desc:"Full path to the folder where Krisp saves ZIP archives"},autoScan:{name:"Enable Auto-Watching",desc:"Automatically monitor the folder for new ZIP files"},notesFolder:{name:"Notes Folder",desc:"Folder in your Obsidian vault for saving meeting notes"},attachmentsFolder:{name:"Attachments Folder",desc:"Folder in your Obsidian vault for saving audio files"},noteNameTemplate:{name:"Note Name Template",desc:"Template for naming note files. Available variables: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"},attachmentNameTemplate:{name:"Audio Name Template",desc:"Template for naming audio files. Same variables available"},noteContentTemplate:{name:"Note Content Template",desc:"Template for note content. Available variables: {{title}}, {{date}}, {{time}}, {{participants}}, {{summary}}, {{actionItems}}, {{keyPoints}}, {{transcript}}, {{audioLink}}"},duplicateStrategy:{name:"Duplicate Strategy",desc:"What to do when a meeting with the same name already exists",options:{skip:"Skip import",overwrite:"Overwrite existing",rename:"Create with suffix"}},deleteZipAfterImport:{name:"Delete ZIP after import",desc:"Automatically delete the ZIP file after successful import"},openNoteAfterImport:{name:"Open note after import",desc:"Automatically open the created note in Obsidian"},language:{name:"Interface Language",desc:"Choose the language for the plugin interface"}},buttons:{testImport:"Test Import",massImport:"Import All Files",resetSettings:"Reset Settings",showLogs:"Show Logs",restoreTemplate:"Restore Default Template"},info:{title:"Plugin Information",version:"Version",status:"Status",features:["\u2705 Manual ZIP import","\u2705 Automatic folder watching","\u2705 Beautiful note formatting with callouts","\u2705 Advanced participant analytics","\u2705 Complete UI settings","\u2705 Logging and diagnostic system","\u2705 Bilingual support (English/Russian)"],commands:["Import ZIP file manually","Start auto-watching folder","Stop auto-watching","Scan existing files","Check watching status","Debug current settings"],errors:{watchedFolderMissing:"Watched folder path is not specified. Auto-watching cannot start.",watchedFolderEmptyAutoscan:"Watched folder path is empty. Auto-watching stopped if it was active for a previous path."}},status:{title:"\u{1F4CA} Current Status",watchingActive:"Auto-watching is ACTIVE for folder: {{path}}",watchingInactive:"Auto-watching is INACTIVE.",watchingWarningFolderMissing:"Auto-watching is ON, but no folder specified. Please set the 'Watched Folder Path'.",watchingStarting:"Auto-watching is starting...",inactiveDetailEnableAutoScan:"Hint: Enable 'Enable Auto-Watching' option.",inactiveDetailSetPath:"Hint: Set the 'Watched Folder Path'.",serviceUnavailable:"File Watcher Service is not available. Please check plugin logs or restart Obsidian."}},commands:{importZip:"Import ZIP file manually",startWatching:"Start auto-watching folder",stopWatching:"Stop auto-watching",scanExisting:"Process All Existing Files",checkStatus:"Check watching status",debugSettings:"Debug current settings",scanExistingDesc:"Scan the watched folder and import all existing ZIP files that haven't been processed yet."},notifications:{success:{imported:"Successfully imported: {{fileName}}",watchingStarted:"Started watching folder: {{folderPath}}",watchingStopped:"Stopped watching folder.",settingsReset:"Settings have been reset to default."},error:{invalidZip:"Invalid ZIP file: {{fileName}}",missingFiles:"Missing required files in ZIP: {{fileName}}",createNote:"Error creating note for: {{fileName}} - {{error}}",copyAudio:"Error copying audio for: {{fileName}} - {{error}}",watchingFailed:"Failed to start watching: {{error}}",noFileSelected:"No file selected.",importFailedGeneral:"Import failed: {{error}}",massImportFailed:"Mass import failed. Check logs for details."},warning:{duplicateSkipped:"Skipped duplicate: {{fileName}}",duplicateRenamed:"Renamed duplicate: {{newName}} from {{originalName}}",duplicateOverwritten:"Overwritten duplicate: {{fileName}}"},info:{processing:"Processing: {{fileName}}...",scanningFolder:"Scanning folder: {{folderPath}}...",scanningFolderComplete:"Folder scan and import complete!"}},statusBar:{idle:"Idle",watching:"Watching: {{path}}",processing:"Processing...",error:"Error: {{message}}"},modals:{testImport:{title:"Test Manual Import",placeholder:"Select Krisp ZIP file...",button:"Import Selected File",description:"Manually select a ZIP file to test the import process.",importing:"Importing..."},confirmReset:{title:"Confirm Reset",message:"Are you sure you want to reset all settings to their default values? This action cannot be undone.",confirm:"Reset Settings",cancel:"Cancel"},logs:{title:"Plugin Logs",export:"Export Logs",clear:"Clear Logs",close:"Close",description:"View recent activity logs for troubleshooting.",noLogs:"No logs yet.",copy:"Copy Logs",copiedNotice:"Logs copied to clipboard!",clearedNotice:"Logs cleared!"}},settingsInfoTooltips:{githubRepoTooltip:"Visit GitHub Repository",reportIssueTooltip:"Report an Issue",developer:"Developed by: {{author}}",supportDevelopment:"If you find this plugin useful, consider supporting its development: ",donateLinkText:"Buy Me a Coffee",pluginDescription:"Description: {{description}}",resetSettingsDesc:"Reset all plugin settings to their default values.",supportDevelopmentPlaceholder:"Support information for this plugin is not specified by the author."}},pe={settings:{title:"\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 Krisp Notes Importer",sections:{basic:"\u{1F527} \u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",storage:"\u{1F4BE} \u0425\u0440\u0430\u043D\u0435\u043D\u0438\u0435 \u0432 Obsidian",templates:"\u{1F4DD} \u0428\u0430\u0431\u043B\u043E\u043D\u044B \u0438 \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435",duplicates:"\u{1F504} \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432",postImport:"\u26A1 \u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",advanced:"\u{1F6E0}\uFE0F \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u043D\u044B\u0435 \u0438 \u041E\u0431\u0441\u043B\u0443\u0436\u0438\u0432\u0430\u043D\u0438\u0435",coreAutomation:"\u{1F4C2} \u042F\u0434\u0440\u043E: \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0438 \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044F",namingAndTemplates:"\u{1F3A8} \u0412\u043D\u0435\u0448\u043D\u0438\u0439 \u0432\u0438\u0434 \u0438 \u0418\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u0435",importBehavior:"\u2699\uFE0F \u041F\u043E\u0432\u0435\u0434\u0435\u043D\u0438\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",manualOperations:"\u{1F6E0}\uFE0F \u0420\u0443\u0447\u043D\u044B\u0435 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\u0438 \u0438 \u0414\u0438\u0430\u0433\u043D\u043E\u0441\u0442\u0438\u043A\u0430",aboutPlugin:"\u2139\uFE0F \u041E \u043F\u043B\u0430\u0433\u0438\u043D\u0435"},fields:{watchedFolder:{name:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430",desc:"\u041F\u043E\u043B\u043D\u044B\u0439 \u043F\u0443\u0442\u044C \u043A \u043F\u0430\u043F\u043A\u0435, \u0433\u0434\u0435 Krisp \u0441\u043E\u0445\u0440\u0430\u043D\u044F\u0435\u0442 ZIP-\u0430\u0440\u0445\u0438\u0432\u044B"},autoScan:{name:"\u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0442\u044C \u043F\u0430\u043F\u043A\u0443 \u043D\u0430 \u043F\u0440\u0435\u0434\u043C\u0435\u0442 \u043D\u043E\u0432\u044B\u0445 ZIP-\u0444\u0430\u0439\u043B\u043E\u0432"},notesFolder:{name:"\u041F\u0430\u043F\u043A\u0430 \u0434\u043B\u044F \u0437\u0430\u043C\u0435\u0442\u043E\u043A",desc:"\u041F\u0430\u043F\u043A\u0430 \u0432 \u0432\u0430\u0448\u0435\u043C \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 Obsidian \u0434\u043B\u044F \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u0432\u0441\u0442\u0440\u0435\u0447"},attachmentsFolder:{name:"\u041F\u0430\u043F\u043A\u0430 \u0434\u043B\u044F \u0432\u043B\u043E\u0436\u0435\u043D\u0438\u0439",desc:"\u041F\u0430\u043F\u043A\u0430 \u0432 \u0432\u0430\u0448\u0435\u043C \u0445\u0440\u0430\u043D\u0438\u043B\u0438\u0449\u0435 Obsidian \u0434\u043B\u044F \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B\u043E\u0432"},noteNameTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0438\u043C\u0435\u043D\u0438 \u0437\u0430\u043C\u0435\u0442\u043A\u0438",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u044F \u0444\u0430\u0439\u043B\u043E\u0432 \u0437\u0430\u043C\u0435\u0442\u043E\u043A. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"},attachmentNameTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0438\u043C\u0435\u043D\u0438 \u0430\u0443\u0434\u0438\u043E",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B\u043E\u0432. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B \u0442\u0435 \u0436\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435"},noteContentTemplate:{name:"\u0428\u0430\u0431\u043B\u043E\u043D \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u043C\u043E\u0433\u043E \u0437\u0430\u043C\u0435\u0442\u043A\u0438",desc:"\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u043C\u043E\u0433\u043E \u0437\u0430\u043C\u0435\u0442\u043A\u0438. \u0414\u043E\u0441\u0442\u0443\u043F\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435: {{title}}, {{date}}, {{time}}, {{participants}}, {{summary}}, {{actionItems}}, {{keyPoints}}, {{transcript}}, {{audioLink}}"},duplicateStrategy:{name:"\u0421\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432",desc:"\u0427\u0442\u043E \u0434\u0435\u043B\u0430\u0442\u044C, \u043A\u043E\u0433\u0434\u0430 \u0432\u0441\u0442\u0440\u0435\u0447\u0430 \u0441 \u0442\u0430\u043A\u0438\u043C \u0436\u0435 \u0438\u043C\u0435\u043D\u0435\u043C \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",options:{skip:"\u041F\u0440\u043E\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u0438\u043C\u043F\u043E\u0440\u0442",overwrite:"\u041F\u0435\u0440\u0435\u0437\u0430\u043F\u0438\u0441\u0430\u0442\u044C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0443\u044E",rename:"\u0421\u043E\u0437\u0434\u0430\u0442\u044C \u0441 \u0441\u0443\u0444\u0444\u0438\u043A\u0441\u043E\u043C"}},deleteZipAfterImport:{name:"\u0423\u0434\u0430\u043B\u044F\u0442\u044C ZIP \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u0443\u0434\u0430\u043B\u044F\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u043F\u043E\u0441\u043B\u0435 \u0443\u0441\u043F\u0435\u0448\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430"},openNoteAfterImport:{name:"\u041E\u0442\u043A\u0440\u044B\u0432\u0430\u0442\u044C \u0437\u0430\u043C\u0435\u0442\u043A\u0443 \u043F\u043E\u0441\u043B\u0435 \u0438\u043C\u043F\u043E\u0440\u0442\u0430",desc:"\u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438 \u043E\u0442\u043A\u0440\u044B\u0432\u0430\u0442\u044C \u0441\u043E\u0437\u0434\u0430\u043D\u043D\u0443\u044E \u0437\u0430\u043C\u0435\u0442\u043A\u0443 \u0432 Obsidian"},language:{name:"\u042F\u0437\u044B\u043A \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430",desc:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 \u044F\u0437\u044B\u043A \u0434\u043B\u044F \u0438\u043D\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 \u043F\u043B\u0430\u0433\u0438\u043D\u0430"}},buttons:{testImport:"\u0422\u0435\u0441\u0442\u043E\u0432\u044B\u0439 \u0438\u043C\u043F\u043E\u0440\u0442",massImport:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u0441\u0435 \u0444\u0430\u0439\u043B\u044B",resetSettings:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",showLogs:"\u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043B\u043E\u0433\u0438",restoreTemplate:"\u0412\u043E\u0441\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0441\u0442\u0430\u043D\u0434\u0430\u0440\u0442\u043D\u044B\u0439 \u0448\u0430\u0431\u043B\u043E\u043D"},info:{title:"\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u043F\u043B\u0430\u0433\u0438\u043D\u0435",version:"\u0412\u0435\u0440\u0441\u0438\u044F",status:"\u0421\u0442\u0430\u0442\u0443\u0441",features:["\u2705 \u0420\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 ZIP","\u2705 \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438","\u2705 \u041A\u0440\u0430\u0441\u0438\u0432\u043E\u0435 \u043E\u0444\u043E\u0440\u043C\u043B\u0435\u043D\u0438\u0435 \u0437\u0430\u043C\u0435\u0442\u043E\u043A \u0441 callouts","\u2705 \u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u043D\u0430\u044F \u0430\u043D\u0430\u043B\u0438\u0442\u0438\u043A\u0430 \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432","\u2705 \u041F\u043E\u043B\u043D\u044B\u0439 UI \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043A","\u2705 \u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u043B\u043E\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0438 \u0434\u0438\u0430\u0433\u043D\u043E\u0441\u0442\u0438\u043A\u0438","\u2705 \u0414\u0432\u0443\u044F\u0437\u044B\u0447\u043D\u0430\u044F \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0430 (English/\u0420\u0443\u0441\u0441\u043A\u0438\u0439)"],commands:["\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u0432\u0440\u0443\u0447\u043D\u0443\u044E","\u0417\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438","\u041E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435","\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0444\u0430\u0439\u043B\u044B","\u041F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F","\u041E\u0442\u043B\u0430\u0434\u0438\u0442\u044C \u0442\u0435\u043A\u0443\u0449\u0438\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438"],errors:{watchedFolderMissing:"\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D. \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0437\u0430\u043F\u0443\u0449\u0435\u043D\u043E.",watchedFolderEmptyAutoscan:"\u041F\u0443\u0442\u044C \u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043F\u0443\u0441\u0442. \u0410\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E, \u0435\u0441\u043B\u0438 \u0431\u044B\u043B\u043E \u0430\u043A\u0442\u0438\u0432\u043D\u043E \u0434\u043B\u044F \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0435\u0433\u043E \u043F\u0443\u0442\u0438."}},status:{title:"\u{1F4CA} \u0422\u0435\u043A\u0443\u0449\u0438\u0439 \u0441\u0442\u0430\u0442\u0443\u0441",watchingActive:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0410\u041A\u0422\u0418\u0412\u041D\u041E \u0434\u043B\u044F \u043F\u0430\u043F\u043A\u0438: {{path}}",watchingInactive:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u041D\u0415\u0410\u041A\u0422\u0418\u0412\u041D\u041E.",watchingWarningFolderMissing:"\u0410\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0412\u041A\u041B\u042E\u0427\u0415\u041D\u041E, \u043D\u043E \u043F\u0430\u043F\u043A\u0430 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430. \u0423\u043A\u0430\u0436\u0438\u0442\u0435 '\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430'.",watchingStarting:"\u0417\u0430\u043F\u0443\u0441\u043A \u0430\u0432\u0442\u043E\u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F...",inactiveDetailEnableAutoScan:"\u041F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0430: \u0412\u043A\u043B\u044E\u0447\u0438\u0442\u0435 \u043E\u043F\u0446\u0438\u044E '\u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435'.",inactiveDetailSetPath:"\u041F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0430: \u0423\u043A\u0430\u0436\u0438\u0442\u0435 '\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430'.",serviceUnavailable:"\u0421\u0435\u0440\u0432\u0438\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F \u0444\u0430\u0439\u043B\u043E\u0432 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043B\u043E\u0433\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u0438\u043B\u0438 \u043F\u0435\u0440\u0435\u0437\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u0435 Obsidian."}},commands:{importZip:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C ZIP-\u0444\u0430\u0439\u043B \u0432\u0440\u0443\u0447\u043D\u0443\u044E",startWatching:"\u041D\u0430\u0447\u0430\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438",stopWatching:"\u041E\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0435 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435",scanExisting:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 \u0444\u0430\u0439\u043B\u044B",checkStatus:"\u041F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C \u0441\u0442\u0430\u0442\u0443\u0441 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F",debugSettings:"\u041E\u0442\u043B\u0430\u0434\u0438\u0442\u044C \u0442\u0435\u043A\u0443\u0449\u0438\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",scanExistingDesc:"\u041F\u0440\u043E\u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0443\u044E \u043F\u0430\u043F\u043A\u0443 \u0438 \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u0441\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0435 ZIP-\u0444\u0430\u0439\u043B\u044B, \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u0435\u0449\u0435 \u043D\u0435 \u0431\u044B\u043B\u0438 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u044B."},notifications:{success:{imported:"\u0423\u0441\u043F\u0435\u0448\u043D\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D: {{fileName}}",watchingStarted:"\u041D\u0430\u0447\u0430\u0442\u043E \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: {{folderPath}}",watchingStopped:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E.",settingsReset:"\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0431\u044B\u043B\u0438 \u0441\u0431\u0440\u043E\u0448\u0435\u043D\u044B \u0434\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E."},error:{invalidZip:"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 ZIP-\u0444\u0430\u0439\u043B: {{fileName}}",missingFiles:"\u0412 ZIP \u043E\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044E\u0442 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u044B\u0435 \u0444\u0430\u0439\u043B\u044B: {{fileName}}",createNote:"\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F \u0437\u0430\u043C\u0435\u0442\u043A\u0438 \u0434\u043B\u044F: {{fileName}} - {{error}}",copyAudio:"\u041E\u0448\u0438\u0431\u043A\u0430 \u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u0430\u0443\u0434\u0438\u043E \u0434\u043B\u044F: {{fileName}} - {{error}}",watchingFailed:"\u041D\u0435 \u0443\u0434\u0430\u043B\u043E\u0441\u044C \u043D\u0430\u0447\u0430\u0442\u044C \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435: {{error}}",noFileSelected:"\u0424\u0430\u0439\u043B \u043D\u0435 \u0432\u044B\u0431\u0440\u0430\u043D.",importFailedGeneral:"\u041E\u0448\u0438\u0431\u043A\u0430 \u0438\u043C\u043F\u043E\u0440\u0442\u0430: {{error}}",massImportFailed:"\u041C\u0430\u0441\u0441\u043E\u0432\u044B\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u043D\u0435 \u0443\u0434\u0430\u043B\u0441\u044F. \u041F\u0440\u043E\u0432\u0435\u0440\u044C\u0442\u0435 \u043B\u043E\u0433\u0438 \u0434\u043B\u044F \u0434\u0435\u0442\u0430\u043B\u0435\u0439."},warning:{duplicateSkipped:"\u041F\u0440\u043E\u043F\u0443\u0449\u0435\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{fileName}}",duplicateRenamed:"\u041F\u0435\u0440\u0435\u0438\u043C\u0435\u043D\u043E\u0432\u0430\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{newName}} \u0438\u0437 {{originalName}}",duplicateOverwritten:"\u041F\u0435\u0440\u0435\u0437\u0430\u043F\u0438\u0441\u0430\u043D \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442: {{fileName}}"},info:{processing:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430: {{fileName}}...",scanningFolder:"\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: {{folderPath}}...",scanningFolderComplete:"\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u0438 \u0438\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u044B!"}},statusBar:{idle:"\u041E\u0436\u0438\u0434\u0430\u043D\u0438\u0435",watching:"\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435: {{path}}",processing:"\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430...",error:"\u041E\u0448\u0438\u0431\u043A\u0430: {{message}}"},modals:{testImport:{title:"\u0422\u0435\u0441\u0442\u043E\u0432\u044B\u0439 \u0440\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442",placeholder:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 ZIP-\u0430\u0440\u0445\u0438\u0432 Krisp...",button:"\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432\u044B\u0431\u0440\u0430\u043D\u043D\u044B\u0439 \u0444\u0430\u0439\u043B",description:"\u0412\u044B\u0431\u0435\u0440\u0438\u0442\u0435 ZIP-\u0430\u0440\u0445\u0438\u0432 \u0432\u0440\u0443\u0447\u043D\u0443\u044E, \u0447\u0442\u043E\u0431\u044B \u043F\u0440\u043E\u0442\u0435\u0441\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043F\u0440\u043E\u0446\u0435\u0441\u0441 \u0438\u043C\u043F\u043E\u0440\u0442\u0430.",importing:"\u0418\u043C\u043F\u043E\u0440\u0442..."},confirmReset:{title:"\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0441\u0431\u0440\u043E\u0441",message:"\u0412\u044B \u0443\u0432\u0435\u0440\u0435\u043D\u044B, \u0447\u0442\u043E \u0445\u043E\u0442\u0438\u0442\u0435 \u0441\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u0432\u0441\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u0434\u043E \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E? \u042D\u0442\u043E \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043D\u0435\u043B\u044C\u0437\u044F \u0431\u0443\u0434\u0435\u0442 \u043E\u0442\u043C\u0435\u043D\u0438\u0442\u044C.",confirm:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438",cancel:"\u041E\u0442\u043C\u0435\u043D\u0430"},logs:{title:"\u041B\u043E\u0433\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430",export:"\u042D\u043A\u0441\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043B\u043E\u0433\u0438",clear:"\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u044C \u043B\u043E\u0433\u0438",close:"\u0417\u0430\u043A\u0440\u044B\u0442\u044C",description:"\u041F\u0440\u043E\u0441\u043C\u043E\u0442\u0440 \u043D\u0435\u0434\u0430\u0432\u043D\u0438\u0445 \u043B\u043E\u0433\u043E\u0432 \u0430\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u0438 \u0434\u043B\u044F \u0443\u0441\u0442\u0440\u0430\u043D\u0435\u043D\u0438\u044F \u043D\u0435\u043F\u043E\u043B\u0430\u0434\u043E\u043A.",noLogs:"\u041B\u043E\u0433\u043E\u0432 \u043F\u043E\u043A\u0430 \u043D\u0435\u0442.",copy:"\u041A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043B\u043E\u0433\u0438",copiedNotice:"\u041B\u043E\u0433\u0438 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u044B \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430!",clearedNotice:"\u041B\u043E\u0433\u0438 \u043E\u0447\u0438\u0449\u0435\u043D\u044B!"}},settingsInfoTooltips:{githubRepoTooltip:"\u041F\u043E\u0441\u0435\u0442\u0438\u0442\u044C \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u0439 GitHub",reportIssueTooltip:"\u0421\u043E\u043E\u0431\u0449\u0438\u0442\u044C \u043E \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u0435",developer:"\u0420\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0430\u043D\u043E: {{author}}",supportDevelopment:"\u0415\u0441\u043B\u0438 \u0432\u044B \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u0435 \u044D\u0442\u043E\u0442 \u043F\u043B\u0430\u0433\u0438\u043D \u043F\u043E\u043B\u0435\u0437\u043D\u044B\u043C, \u0440\u0430\u0441\u0441\u043C\u043E\u0442\u0440\u0438\u0442\u0435 \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0438 \u0435\u0433\u043E \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0438: ",donateLinkText:"\u041F\u043E\u0434\u0434\u0435\u0440\u0436\u0430\u0442\u044C \u0430\u0432\u0442\u043E\u0440\u0430",pluginDescription:"\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435: {{description}}",resetSettingsDesc:"\u0421\u0431\u0440\u043E\u0441\u0438\u0442\u044C \u0432\u0441\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u043A \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F\u043C \u043F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E.",supportDevelopmentPlaceholder:"\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0435 \u0434\u043B\u044F \u044D\u0442\u043E\u0433\u043E \u043F\u043B\u0430\u0433\u0438\u043D\u0430 \u043D\u0435 \u0443\u043A\u0430\u0437\u0430\u043D\u0430 \u0430\u0432\u0442\u043E\u0440\u043E\u043C."}},ct=class{constructor(t){this.currentLanguage="en";this.strings={en:ge,ru:pe};t&&(this.currentLanguage=t)}setLanguage(t){this.currentLanguage=t}getCurrentLanguage(){return this.currentLanguage}t(t,e){let s=t.split("."),i=this.getValueByKeys(this.strings[this.currentLanguage],s),n=this.currentLanguage!=="en"?this.getValueByKeys(this.strings.en,s):null,r=i!=null?i:n;return typeof r!="string"?`[Missing: ${t}]`:this.replaceVariables(r,e)}getValueByKeys(t,e){let s=t;for(let i of e)if(s&&typeof s=="object"&&i in s)s=s[i];else return null;return s}replaceVariables(t,e){if(!e)return t;let s=t;for(let[i,n]of Object.entries(e))s=s.replace(new RegExp(`{{${i}}}`,"g"),n);return s}getSettingsStrings(){return this.strings[this.currentLanguage].settings}getCommandStrings(){return this.strings[this.currentLanguage].commands}getNotificationStrings(){return this.strings[this.currentLanguage].notifications}getStatusBarStrings(){return this.strings[this.currentLanguage].statusBar}getModalStrings(){return this.strings[this.currentLanguage].modals}};var wt=class extends v.PluginSettingTab{constructor(e,s){super(e,s);this.plugin=s,this.plugin.settingsTab=this;let i=this.plugin.settingsManager.getSetting("language")||"en";this.localization=s.localizationService||new ct(i)}updateLanguage(e){this.localization.setLanguage(e),this.display()}display(){let{containerEl:e}=this;e.empty(),e.createEl("h1",{text:this.localization.t("settings.title",{fallback:"Krisp Notes Importer Settings"})}),this.renderCurrentStatus(e),this.renderLanguageSetting(e),this.renderCoreAutomationSettings(e),this.renderStorageSettings(e),this.renderNamingAndTemplateSettings(e),this.renderImportBehaviorSettings(e),this.renderManualOperationsAndDiagnostics(e),this.renderAboutPlugin(e)}renderCurrentStatus(e){let s=e.createDiv({cls:"krisp-importer-status-section"});s.createEl("h2",{text:this.localization.t("settings.status.title",{fallback:"\u{1F4CA} Current Status"})});let i=s.createEl("div",{cls:"krisp-status-messages"});i.style.padding="10px",i.style.backgroundColor="var(--background-secondary)",i.style.borderRadius="5px",i.style.marginBottom="15px",i.style.borderLeft="4px solid var(--text-muted)";let n=[],r="var(--color-grey)";if(this.plugin.fileWatcherService&&this.plugin.settingsManager){let a=this.plugin.fileWatcherService.isCurrentlyWatching(),c=this.plugin.fileWatcherService.getWatchedPath(),u=this.plugin.settingsManager.getSetting("autoScanEnabled");a&&c?(n.push(this.localization.t("settings.status.watchingActive",{path:c})),r="var(--color-green)"):u&&(!c||c.trim()==="")?(n.push(this.localization.t("settings.status.watchingWarningFolderMissing")),r="var(--color-yellow)"):u&&c&&!a?(n.push(this.localization.t("settings.status.watchingStarting")),r="var(--color-blue)"):(n.push(this.localization.t("settings.status.watchingInactive")),r="var(--color-red)",u||n.push(`- ${this.localization.t("settings.status.inactiveDetailEnableAutoScan")}`),(!c||c.trim()==="")&&n.push(`- ${this.localization.t("settings.status.inactiveDetailSetPath")}`))}else n.push(this.localization.t("settings.status.serviceUnavailable")),r="var(--color-orange)";i.empty(),n.forEach(a=>{i.createEl("p",{text:a,cls:"krisp-status-message-line"}).style.margin="3px 0"}),i.style.borderLeftColor=r;let l="krisp-importer-status-styles";if(!document.getElementById(l)){let a=document.createElement("style");a.id=l,a.textContent=`
                .krisp-importer-status-section { margin-bottom: 20px; }
                .krisp-importer-status-section h2 { margin-bottom: 8px; }
            `,e.appendChild(a)}}renderLanguageSetting(e){new v.Setting(e).setName(this.localization.t("settings.fields.language.name",{fallback:"Interface Language"})).setDesc(this.localization.t("settings.fields.language.desc",{fallback:"Choose the language for the plugin interface"})).addDropdown(s=>s.addOption("en","English").addOption("ru","\u0420\u0443\u0441\u0441\u043A\u0438\u0439").setValue(this.plugin.settingsManager.getSetting("language")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("language",i),this.updateLanguage(i)}))}renderCoreAutomationSettings(e){e.createEl("h2",{text:this.localization.t("settings.sections.coreAutomation",{fallback:"\u{1F4C2} Core: Watching & Automation"})}),new v.Setting(e).setName(this.localization.t("settings.fields.watchedFolder.name",{fallback:"Watched Folder Path"})).setDesc(this.localization.t("settings.fields.watchedFolder.desc",{fallback:"Full path to the folder where Krisp saves ZIP archives"})).addText(s=>s.setPlaceholder("/Users/username/Downloads/Krisp").setValue(this.plugin.settingsManager.getSetting("watchedFolderPath")).onChange(async i=>{let n=this.plugin.settingsManager.getSetting("watchedFolderPath"),r=i.trim();await this.plugin.settingsManager.updateSetting("watchedFolderPath",r),this.plugin.settingsManager.getSetting("autoScanEnabled")&&this.plugin.fileWatcherService&&(r&&r!==""?(n&&n.trim()!==""&&n.trim()!==r&&this.plugin.fileWatcherService.isCurrentlyWatching()&&this.plugin.fileWatcherService.getWatchedPath()===n.trim()&&await this.plugin.fileWatcherService.stopWatching(),await this.plugin.fileWatcherService.startWatching(r)):this.plugin.fileWatcherService.isCurrentlyWatching()&&await this.plugin.fileWatcherService.stopWatching()),this.display()})),new v.Setting(e).setName(this.localization.t("settings.fields.autoScan.name")).setDesc(this.localization.t("settings.fields.autoScan.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("autoScanEnabled")).onChange(async i=>{if(await this.plugin.settingsManager.updateSetting("autoScanEnabled",i),this.plugin.fileWatcherService)if(i){let n=this.plugin.settingsManager.getSetting("watchedFolderPath");n&&n.trim()!==""&&await this.plugin.fileWatcherService.startWatching(n.trim())}else await this.plugin.fileWatcherService.stopWatching();this.display()}))}renderStorageSettings(e){e.createEl("h2",{text:this.localization.t("settings.sections.storage",{fallback:"\u{1F5C4}\uFE0F Obsidian Storage"})}),new v.Setting(e).setName(this.localization.t("settings.fields.notesFolder.name",{fallback:"Notes Folder"})).setDesc(this.localization.t("settings.fields.notesFolder.desc",{fallback:"Folder in your Obsidian vault for saving meeting notes"})).addText(s=>s.setPlaceholder("KrispNotes/Notes").setValue(this.plugin.settingsManager.getSetting("notesFolderPath")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("notesFolderPath",i.trim())})),new v.Setting(e).setName(this.localization.t("settings.fields.attachmentsFolder.name")).setDesc(this.localization.t("settings.fields.attachmentsFolder.desc")).addText(s=>s.setPlaceholder("KrispNotes/Attachments").setValue(this.plugin.settingsManager.getSetting("attachmentsFolderPath")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("attachmentsFolderPath",i.trim())}))}renderNamingAndTemplateSettings(e){e.createEl("h2",{text:this.localization.t("settings.sections.namingAndTemplates",{fallback:"\u{1F3A8} Appearance & Naming"})}),new v.Setting(e).setName(this.localization.t("settings.fields.noteNameTemplate.name",{fallback:"Note Name Template"})).setDesc(this.localization.t("settings.fields.noteNameTemplate.desc",{fallback:"Template for naming note files. Available variables: {{YYYY}}, {{MM}}, {{DD}}, {{HHMM}}, {{meetingTitle}}"})).addText(s=>s.setPlaceholder("{{YYYY}}-{{MM}}-{{DD}}_{{HHMM}}_{{meetingTitle}}").setValue(this.plugin.settingsManager.getSetting("noteNameTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("noteNameTemplate",i)})),new v.Setting(e).setName(this.localization.t("settings.fields.attachmentNameTemplate.name")).setDesc(this.localization.t("settings.fields.attachmentNameTemplate.desc")).addText(s=>s.setPlaceholder("{{YYYY}}-{{MM}}-{{DD}}_{{meetingTitle}}_audio").setValue(this.plugin.settingsManager.getSetting("attachmentNameTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("attachmentNameTemplate",i)})),new v.Setting(e).setName(this.localization.t("settings.fields.noteContentTemplate.name")).setDesc(this.localization.t("settings.fields.noteContentTemplate.desc")).addTextArea(s=>{s.setValue(this.plugin.settingsManager.getSetting("noteContentTemplate")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("noteContentTemplate",i)}),s.inputEl.rows=10,s.inputEl.style.width="100%",s.inputEl.style.minHeight="150px"}).addButton(s=>s.setButtonText(this.localization.t("settings.buttons.restoreTemplate")).onClick(async()=>{await this.plugin.settingsManager.updateSetting("noteContentTemplate",M.noteContentTemplate),this.display(),new v.Notice(this.localization.t("notifications.success.templateRestored",{fallback:"Default template restored."}))}))}renderImportBehaviorSettings(e){e.createEl("h2",{text:this.localization.t("settings.sections.importBehavior",{fallback:"\u2699\uFE0F Import Behavior"})}),new v.Setting(e).setName(this.localization.t("settings.fields.duplicateStrategy.name")).setDesc(this.localization.t("settings.fields.duplicateStrategy.desc")).addDropdown(s=>s.addOption("skip",this.localization.t("settings.fields.duplicateStrategy.options.skip")).addOption("overwrite",this.localization.t("settings.fields.duplicateStrategy.options.overwrite")).addOption("rename",this.localization.t("settings.fields.duplicateStrategy.options.rename")).setValue(this.plugin.settingsManager.getSetting("duplicateStrategy")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("duplicateStrategy",i)})),new v.Setting(e).setName(this.localization.t("settings.fields.openNoteAfterImport.name")).setDesc(this.localization.t("settings.fields.openNoteAfterImport.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("openNoteAfterImport")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("openNoteAfterImport",i)})),new v.Setting(e).setName(this.localization.t("settings.fields.deleteZipAfterImport.name")).setDesc(this.localization.t("settings.fields.deleteZipAfterImport.desc")).addToggle(s=>s.setValue(this.plugin.settingsManager.getSetting("deleteZipAfterImport")).onChange(async i=>{await this.plugin.settingsManager.updateSetting("deleteZipAfterImport",i)}))}renderManualOperationsAndDiagnostics(e){var s;e.createEl("h2",{text:this.localization.t("settings.sections.manualOperations",{fallback:"\u{1F6E0}\uFE0F Manual Operations & Diagnostics"})}),new v.Setting(e).setName(this.localization.t("settings.buttons.testImport",{fallback:"Test Manual Import"})).setDesc(this.localization.t("modals.testImport.description",{fallback:"Manually select a ZIP file to test the import process."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.testImport",{fallback:"Select & Import File"})).onClick(()=>{new At(this.plugin,this.localization).open()})),(s=this.plugin.fileWatcherService)!=null&&s.scanExistingFiles&&new v.Setting(e).setName(this.localization.t("commands.scanExisting",{fallback:"Process All Existing Files"})).setDesc(this.localization.t("commands.scanExistingDesc",{fallback:"Scan the watched folder and import all existing ZIP files that haven't been processed yet."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.massImport",{fallback:"Scan and Import All"})).onClick(async()=>{var n;if((n=this.plugin.fileWatcherService)!=null&&n.scanExistingFiles){let r=this.plugin.settingsManager.getSetting("watchedFolderPath");if(!r||r.trim()===""){new v.Notice(this.localization.t("settings.errors.watchedFolderMissing",{fallback:"Watched folder path is not specified."}));return}try{await this.plugin.fileWatcherService.scanExistingFiles(),new v.Notice(this.localization.t("notifications.info.scanningFolderComplete",{fallback:"Folder scan and import complete!"}))}catch(l){console.error("Error during mass import:",l),new v.Notice(this.localization.t("notifications.error.massImportFailed",{fallback:"Mass import failed. Check logs."}))}}else new v.Notice(this.localization.t("settings.status.serviceUnavailable",{fallback:"File Watcher service is not available."}))})),new v.Setting(e).setName(this.localization.t("settings.buttons.showLogs",{fallback:"Show Logs"})).setDesc(this.localization.t("modals.logs.description",{fallback:"View recent activity logs for troubleshooting."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.showLogs",{fallback:"Open Logs"})).onClick(()=>{this.plugin.loggingService?new Mt(this.app,this.plugin,this.localization).open():new v.Notice(this.localization.t("settings.status.serviceUnavailable",{fallback:"Logging service not available."}))})),new v.Setting(e).setName(this.localization.t("settings.buttons.resetSettings",{fallback:"Reset Settings"})).setDesc(this.localization.t("settingsInfoTooltips.resetSettingsDesc",{fallback:"Reset all plugin settings to their default values."})).addButton(i=>i.setButtonText(this.localization.t("settings.buttons.resetSettings",{fallback:"Reset to Defaults"})).setClass("mod-warning").onClick(()=>{new xt(this.app,this.plugin,this.localization).open()}))}renderAboutPlugin(e){var u;e.createEl("h2",{text:this.localization.t("settings.sections.aboutPlugin",{fallback:"\u2139\uFE0F About Plugin"})});let s=this.plugin.manifest,i=s.author||"Unknown Author",n=s.id||"plugin-repo",l=`https://github.com/${((u=s.authorUrl)==null?void 0:u.split("/").pop())||i.toLowerCase().replace(/\s+/g,"-")}/${n}`,a=`${l}/issues`;new v.Setting(e).setName(this.localization.t("settings.info.version",{fallback:"Plugin Version"})).setDesc(s.version).addExtraButton(S=>S.setIcon("github").setTooltip(this.localization.t("settingsInfoTooltips.githubRepoTooltip",{fallback:"Visit GitHub Repository"})).onClick(()=>{window.open(l,"_blank")})).addExtraButton(S=>S.setIcon("bug").setTooltip(this.localization.t("settingsInfoTooltips.reportIssueTooltip",{fallback:"Report an Issue"})).onClick(()=>{window.open(a,"_blank")})),e.createEl("p",{text:this.localization.t("settingsInfoTooltips.developer",{fallback:`Developed by: ${i}`,author:i})});let c=e.createEl("p");c.appendText(this.localization.t("settingsInfoTooltips.supportDevelopment",{fallback:"If you find this plugin useful, consider supporting its development. More information can be found on the plugin's GitHub page: "})),c.createEl("a",{text:this.localization.t("settingsInfoTooltips.githubRepoTooltip",{fallback:"Visit GitHub Repository"}),href:l,attr:{target:"_blank",rel:"noopener noreferrer"}}),s.description&&e.createEl("p",{text:this.localization.t("settingsInfoTooltips.pluginDescription",{fallback:`Description: ${s.description}`,description:s.description})})}},At=class extends v.Modal{constructor(e,s){super(e.app);this.filePath="";this.inputEl=null;this.keypressHandler=null;this.plugin=e,this.localization=s}onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:this.localization.t("modals.manualImport.title",{fallback:"Manual ZIP Import"})}),e.createEl("p",{text:this.localization.t("modals.manualImport.desc",{fallback:"Enter the full path to the .zip file you want to import."})}),this.inputEl=e.createEl("input",{type:"text",placeholder:"/path/to/your-meeting.zip"}),this.inputEl.style.width="100%",this.inputEl.style.marginBottom="10px",this.inputEl.addEventListener("change",r=>this.filePath=r.target.value.trim());let s=e.createDiv({cls:"modal-button-container"}),i=s.createEl("button",{text:this.localization.t("modals.manualImport.buttonImport",{fallback:"Import"}),cls:"mod-cta"});i.onclick=async()=>{if(this.filePath){if(this.plugin.processingService&&this.plugin.settingsManager)try{new v.Notice(this.localization.t("notifications.info.processing",{file:this.filePath.split("/").pop()||this.filePath}),5e3);let r=this.plugin.settingsManager.getAllSettings();await this.plugin.processingService.processZipFile(this.filePath,r),new v.Notice(this.localization.t("notifications.success.manualImportComplete",{fallback:"Manual import complete."}),5e3)}catch(r){new v.Notice(`${this.localization.t("notifications.error.manualImportFailed",{fallback:"Manual import failed."})}: ${r.message}`,7e3),console.error("[Krisp Importer] Manual import error:",r)}else new v.Notice(this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"Processing or Settings Service",fallback:"Required service not available."}),5e3);this.close()}else new v.Notice(this.localization.t("modals.manualImport.errorNoPath",{fallback:"File path cannot be empty."}),5e3)},s.createEl("button",{text:this.localization.t("modals.confirmReset.cancel",{fallback:"Cancel"})}).onclick=()=>this.close(),this.inputEl.focus(),this.keypressHandler=r=>{r.key==="Enter"&&i.click()},this.inputEl.addEventListener("keypress",this.keypressHandler);let n="krisp-modal-styles";if(!document.getElementById(n)){let r=document.createElement("style");r.id=n,r.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; }
            `,e.appendChild(r)}}onClose(){var e;(e=this.inputEl)==null||e.removeEventListener("keypress",this.keypressHandler),this.inputEl=null,this.keypressHandler=null,this.contentEl.empty()}},Mt=class extends v.Modal{constructor(e,s,i){super(e);this.plugin=s,this.localization=i}onOpen(){let{contentEl:e}=this;if(e.createEl("h2",{text:this.localization.t("modals.logs.title",{fallback:"Plugin Logs"})}),!this.plugin.loggingService){e.createEl("p",{text:this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"LoggingService",fallback:"Logging service is not available."})});return}let s=this.plugin.loggingService.getLogStats(),i=e.createDiv({cls:"krisp-log-stats"});i.createEl("p",{text:`${this.localization.t("modals.logs.totalEntries",{fallback:"Total entries"})}: ${s.total}`});let n=Object.entries(s.byLevel).map(([u,S])=>`${u.toUpperCase()}: ${S}`).join(", ");i.createEl("p",{text:`${this.localization.t("modals.logs.byLevel",{fallback:"By level"})}: ${n||this.localization.t("modals.logs.noEntries",{fallback:"No entries"})}`});let r=e.createDiv({cls:"modal-button-container"});r.style.justifyContent="flex-start",r.createEl("button",{text:this.localization.t("modals.logs.copy",{fallback:"Copy"}),cls:"mod-cta"}).onclick=async()=>{this.plugin.loggingService&&(await this.plugin.loggingService.copyLogsToClipboard(),new v.Notice(this.localization.t("modals.logs.copiedNotice",{fallback:"Logs copied to clipboard."}),3e3))},r.createEl("button",{text:this.localization.t("modals.logs.clear",{fallback:"Clear"}),cls:"mod-warning"}).onclick=()=>{this.plugin.loggingService&&(this.plugin.loggingService.clearLogs(),this.close(),new v.Notice(this.localization.t("modals.logs.clearedNotice",{fallback:"Logs cleared."}),3e3))},r.createEl("button",{text:this.localization.t("modals.logs.close",{fallback:"Close"})}).onclick=()=>this.close();let l=e.createDiv({cls:"krisp-logs-display"}),a=this.plugin.loggingService.getRecentLogs(100);if(a.length===0)l.textContent=this.localization.t("modals.logs.noEntries",{fallback:"No log entries."});else{let u=a.map(S=>{let E=S.timestamp.toLocaleString(),T=S.level===0?"DEBUG":S.level===1?"INFO":S.level===2?"WARN":"ERROR";return`[${E}] [${T}] [${S.category}] ${S.message}`}).join(`
`);l.textContent=u}let c="krisp-logs-modal-styles";if(!document.getElementById(c)){let u=document.createElement("style");u.id=c,u.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; } /* Default: flex-end */
                .krisp-log-stats { margin-bottom: 15px; padding: 10px; background-color: var(--background-secondary); border-radius: 5px; }
                .krisp-logs-display { max-height: 400px; overflow: auto; border: 1px solid var(--background-modifier-border); border-radius: 5px; padding: 10px; background-color: var(--background-primary-alt); font-family: monospace; font-size: 0.8em; white-space: pre-wrap; margin-top:15px; }
            `,e.appendChild(u)}}onClose(){this.contentEl.empty()}},xt=class extends v.Modal{constructor(e,s,i){super(e);this.plugin=s,this.localization=i}onOpen(){let{contentEl:e}=this;e.createEl("h2",{text:this.localization.t("modals.confirmReset.title")}),e.createEl("p",{text:this.localization.t("modals.confirmReset.message")});let s=e.createDiv({cls:"modal-button-container"});s.createEl("button",{text:this.localization.t("modals.confirmReset.confirm"),cls:"mod-warning"}).onclick=async()=>{if(this.plugin.settingsManager&&this.plugin.settingsTab)try{for(let[n,r]of Object.entries(M))await this.plugin.settingsManager.updateSetting(n,r);new v.Notice(this.localization.t("notifications.success.settingsReset"),5e3),this.plugin.settingsTab.display()}catch(n){new v.Notice(`${this.localization.t("notifications.error.settingsResetFailed",{fallback:"Failed to reset settings."})}: ${n.message}`,7e3),console.error("[Krisp Importer] Settings reset error:",n)}else new v.Notice(this.localization.t("settings.errors.serviceUnavailableGeneric",{service:"SettingsManager or SettingsTab",fallback:"Required services not available for reset."}),5e3);this.close()},s.createEl("button",{text:this.localization.t("modals.confirmReset.cancel",{fallback:"Cancel"})}).onclick=()=>this.close();let i="krisp-modal-styles";if(!document.getElementById(i)){let n=document.createElement("style");n.id=i,n.textContent=`
                .modal-button-container { display: flex; gap: 10px; margin-top: 15px; justify-content: flex-end; }
            `,e.appendChild(n)}}onClose(){this.contentEl.empty()}};var nt=require("obsidian");var Jt=lt(qt()),x=require("fs"),Y=require("obsidian"),pt=lt(require("path")),Tt=class{constructor(t){this.app=t}async extract(t,e){if(!t||typeof t!="string"||t.trim()==="")return new Y.Notice("\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043F\u0443\u0442\u044C \u043A ZIP-\u0444\u0430\u0439\u043B\u0443"),null;if(!e||typeof e!="string"||e.trim()==="")return new Y.Notice("\u041D\u0435\u0432\u0435\u0440\u043D\u043E\u0435 \u0438\u043C\u044F \u0432\u0440\u0435\u043C\u0435\u043D\u043D\u043E\u0439 \u043F\u0430\u043F\u043A\u0438"),null;if(!(0,x.existsSync)(t))return new Y.Notice(`ZIP-\u0444\u0430\u0439\u043B \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D: ${t}`),null;if(!t.toLowerCase().endsWith(".zip"))return new Y.Notice(`\u0424\u0430\u0439\u043B \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F ZIP-\u0430\u0440\u0445\u0438\u0432\u043E\u043C: ${t}`),null;try{let i=require("os").tmpdir(),n=pt.join(i,"krisp-importer-temp",e+"_"+Date.now()),r=pt.join(i,"krisp-importer-temp");(0,x.existsSync)(r)||(0,x.mkdirSync)(r,{recursive:!0}),(0,x.existsSync)(n)||(0,x.mkdirSync)(n,{recursive:!0});let l=new Jt.async({file:t});try{let a=await l.entries();for(let[c,u]of Object.entries(a))if(!u.isDirectory){let S=(0,Y.normalizePath)(pt.join(n,c)),E=pt.dirname(S);(0,x.existsSync)(E)||(0,x.mkdirSync)(E,{recursive:!0});let T=await l.entryData(c);await x.promises.writeFile(S,T)}return console.log(`Successfully extracted to ${n}`),n}finally{await l.close()}}catch(s){return new Y.Notice("Error extracting ZIP file: "+s.message),console.error("Error extracting ZIP file:",s),null}}async cleanup(t){if(t)try{(0,x.existsSync)(t)&&((0,x.rmSync)(t,{recursive:!0,force:!0}),console.log(`Successfully cleaned up temp directory: ${t}`))}catch(e){new Y.Notice("Error cleaning up temporary directory: "+e.message),console.error("Error cleaning up temporary directory:",e)}}};var ht=require("fs"),Qt=require("readline"),bt=class{constructor(){}parseMeetingNotes(t,e,s){var u;typeof t!="string"&&(console.warn("[NoteParser] notesContent is not a string, using empty string"),t=""),typeof e!="string"&&(console.warn("[NoteParser] transcriptContent is not a string, using empty string"),e=""),(!s||typeof s!="string")&&(console.warn("[NoteParser] meetingFolderName is invalid, using default name"),s="Unknown Meeting");let i={},n=s;n=n.replace(/\s*\([0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}\)$/,""),n=n.replace(new RegExp(`-[0-9a-fA-F]{${U.MIN_UUID_LENGTH}}$`),""),n=n.replace(/\s*-\s*[A-Za-z]+(?:\s+|,\s*)[0-9]{1,2}(?:,\s*[0-9]{4})?(?:\s+[0-9]{1,2}[0-9]{2}(?:\s*(?:AM|PM))?)?$/,"").trim(),i.meetingTitle=n;let r=(u=t.split(`
`)[0])==null?void 0:u.trim(),l=null,a=null;if(r&&(l=this.extractDateFromString(r),a=this.extractTimeFromString(r)),l||(l=this.extractDateFromString(s)),!a&&(a=this.extractTimeFromString(s),a==="00:00"&&e)){let S=e.match(/(\d{2}:\d{2}(?::\d{2})?)/)}i.date=l||void 0,i.time=a||void 0,i.summary=this.extractSection(t,"Summary"),i.actionItems=this.extractSection(t,"Action Items",!0),i.keyPoints=this.extractSection(t,"Key Points",!0);let c=this.parseTranscript(e);return i.participants=c.participants,i.rawTranscript=e,i.formattedTranscript=c.formattedTranscript,i.duration=c.duration,i.participantsCount=c.participants.length,i.transcriptWords=this.countWords(e),i.mostActiveSpeaker=this.findMostActiveSpeaker(e),i.participantsStats=this.generateParticipantsStats(e,c.participants),i.extractedEntities=this.extractEntities(t,e),i.relatedLinks=this.generateRelatedLinks(t,n),i.importDate=new Date().toLocaleString("ru-RU",{year:"numeric",month:"long",day:"numeric",hour:"2-digit",minute:"2-digit"}),i.smartTags=this.generateSmartTags(t,e,n),i.tags=[...i.smartTags||[]],i}async parseTranscriptStreaming(t,e){let s=(e==null?void 0:e.chunkSize)||$.LARGE_FILE_CHUNK_SIZE,i=(e==null?void 0:e.maxMemoryUsage)||$.MAX_TRANSCRIPT_MEMORY_MB*1024*1024;return new Promise((n,r)=>{let l=new Set,a=[],c="00:00:00",u=0,S=0,E=(0,ht.createReadStream)(t,{encoding:"utf8",highWaterMark:s}),T=(0,Qt.createInterface)({input:E,crlfDelay:1/0}),L=/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/,f="",b=[];T.on("line",y=>{let D=y.trim();if(D==="")return;let Z=Buffer.byteLength(D,"utf8");if(u+Z>i){console.warn(`[NoteParser] Streaming stopped at ${Math.round(u/1024/1024)}MB memory limit`),T.close();return}if(S++,u+=Z,e!=null&&e.progressCallback&&S%1e3===0){let k=Math.round(u/1024/1024);e.progressCallback(k)}let B=D.match(L);if(B){if(f&&b.length>0){let H=b.join(`
`);a.push(`[[${c}]] **${f}**: ${H}`),b=[]}f=B[1].trim();let k=B[2];f&&!f.toLowerCase().includes("transcription service")&&l.add(f),c=k.length===5?`${k}:00`:k}else f?D.toLowerCase()==="\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442..."?b.push(`_${D}_`):b.push(D):a.push(D)}),T.on("close",()=>{if(f&&b.length>0){let D=b.join(`
`);a.push(`[[${c}]] **${f}**: ${D}`)}let y="N/A";c!=="00:00:00"&&(y=c),console.log(`[NoteParser] Streaming completed: ${S} lines, ${Math.round(u/1024/1024)}MB processed`),n({participants:Array.from(l),formattedTranscript:a.join(`

`),duration:y})}),T.on("error",y=>{r(new Error(`Failed to stream transcript: ${y.message}`))}),E.on("error",y=>{r(new Error(`Failed to read transcript file: ${y.message}`))})})}async parseLargeFileContent(t,e){try{let s=await ht.promises.stat(t);return s.size<=e?await ht.promises.readFile(t,"utf-8"):(console.warn(`[NoteParser] File ${t} is too large (${Math.round(s.size/1024/1024)}MB), reading first ${Math.round(e/1024/1024)}MB`),new Promise((i,n)=>{let r=[],l=0,a=(0,ht.createReadStream)(t,{encoding:"utf8",highWaterMark:$.STREAMING_BUFFER_SIZE});a.on("data",c=>{let u=Buffer.byteLength(c,"utf8");if(l+u>e){let S=e-l;if(S>0){let E=c.substring(0,Math.floor(c.length*S/u));r.push(E)}a.destroy();return}r.push(c),l+=u}),a.on("end",()=>{i(r.join(""))}),a.on("close",()=>{i(r.join(""))}),a.on("error",c=>{n(new Error(`Failed to read large file: ${c.message}`))})}))}catch(s){throw new Error(`Failed to parse large file ${t}: ${s.message}`)}}parseTranscript(t){let e=t.split(`
`),s=new Set,i=[],n="00:00:00",r=/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/;for(let a=0;a<e.length;a++){let u=e[a].trim();if(u==="")continue;let S=u.match(r);if(S){let E=S[1].trim(),T=S[2];E&&!E.toLowerCase().includes("transcription service")&&!E.toLowerCase().includes("meeting summary")&&s.add(E);let L=T.length===5?`${T}:00`:T;n=L;let f=[],b=a+1;for(;b<e.length;){let y=e[b].trim();if(y===""){b++;continue}if(r.test(y))break;y.toLowerCase()==="\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442..."?f.push(`_${y}_`):f.push(y),b++}if(f.length>0){let y=f.join(`
`);i.push(`[[${L}]] **${E}**: ${y}`)}else i.push(`[[${L}]] **${E}**:`);a=b-1}else u.toLowerCase()==="\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0435\u043D\u0438\u0435 \u0441\u043B\u0435\u0434\u0443\u0435\u0442..."?i.push(`_${u}_`):i.length>0?i[i.length-1]+=`
${u}`:i.push(u)}let l="N/A";return n!=="00:00:00"&&(l=n),{participants:Array.from(s),formattedTranscript:i.join(`

`),duration:l}}extractDateFromString(t){if(!t)return null;let e,s,i,n=t.match(/(\d{4})-(\d{2})-(\d{2})/);if(n&&(e=parseInt(n[1],10),s=parseInt(n[2],10),i=parseInt(n[3],10),s>=1&&s<=12&&i>=1&&i<=31))return`${String(e).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`;if(n=t.match(/([A-Za-z]+)\s+(\d{1,2}),\s+(\d{4})/),n){let r=n[1];if(i=parseInt(n[2],10),e=parseInt(n[3],10),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(e).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}if(n=t.match(/([A-Za-z]+),\s*(\d{1,2})(?!\s*,\s*\d{4})/),n){let r=n[1];if(i=parseInt(n[2],10),e=new Date().getFullYear(),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(e).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}if(n=t.match(/(\d{1,2})\s+([A-Za-z]+)\s+(\d{4})/),n){i=parseInt(n[1],10);let r=n[2];if(e=parseInt(n[3],10),s=this.monthNameToNumber(r),s&&i>=1&&i<=31)return`${String(e).padStart(4,"0")}-${String(s).padStart(2,"0")}-${String(i).padStart(2,"0")}`}return null}extractTimeFromString(t){if(!t)return null;let e=t.match(/(\d{2}):(\d{2})(?!\s*(?:AM|PM))/);if(e){let s=parseInt(e[1],10),i=parseInt(e[2],10);if(s>=0&&s<=23&&i>=0&&i<=59)return`${String(s).padStart(2,"0")}:${String(i).padStart(2,"0")}`}if(e=t.match(/(\d{1,2}):(\d{2})\s*(AM|PM)/i),e){let s=parseInt(e[1],10),i=parseInt(e[2],10),n=e[3].toUpperCase();if(s>=1&&s<=12&&i>=0&&i<=59)return n==="PM"&&s!==12?s+=12:n==="AM"&&s===12&&(s=0),`${String(s).padStart(2,"0")}:${String(i).padStart(2,"0")}`}return"00:00"}extractSection(t,e,s=!1){var u,S;let i=t.split(`
`),n=[],r=!1,l=new RegExp(`^${e}s*$`,"i"),a=["Summary","Action Items","Key Points","Transcript","Transcription"],c=new RegExp(`^(${a.filter(E=>E.toLowerCase()!==e.toLowerCase()).join("|")})s*$`,"i");for(let E=0;E<i.length;E++){let T=i[E];if(l.test(T)){r=!0;continue}if(r){if(c.test(T))break;let L=T.trim();if(L===""){if(s){let f=(u=i[E+1])==null?void 0:u.trim();if(!(f&&!f.match(/^(\s*[-*]|[0-9]+\.)/)&&!f.match(/^\s+/))){if(!f)break}}else if(((S=i[E+1])==null?void 0:S.trim())==="")break}if(L!==""||s&&n.length>0)if(s){let f=L;(f.startsWith("- ")||f.startsWith("* "))&&(f=f.substring(2).trim()),(e==="Action Items"&&f||f)&&n.push(f)}else n.push(L);else n.length>0}}return n}escapeRegExp(t){return t.replace(/[.*+?^${}()|[\\\]]/g,"\\$&")}isLikelyDateOrTime(t){if(!t)return!1;let e=/^(\d{4}-\d{2}-\d{2}|[A-Za-z]+\s+\d{1,2}(?:,\s*\d{4})?)$/i,s=/^(\d{1,2}:\d{2}(\s*[APap][Mm])?)$/;return e.test(t)||s.test(t)}isSectionHeader(t){if(!t)return!1;let e=t.toLowerCase();return e.startsWith("summary")||e.startsWith("action items")||e.startsWith("key points")||e.startsWith("transcript")}monthNameToNumber(t){if(!t)return null;let e=t.toLowerCase().substring(0,3);return{jan:1,feb:2,mar:3,apr:4,may:5,jun:6,jul:7,aug:8,sep:9,oct:10,nov:11,dec:12,\u044F\u043D\u0432:1,\u0444\u0435\u0432:2,\u043C\u0430\u0440:3,\u0430\u043F\u0440:4,\u043C\u0430\u044F:5,\u0438\u044E\u043D:6,\u0438\u044E\u043B:7,\u0430\u0432\u0433:8,\u0441\u0435\u043D:9,\u043E\u043A\u0442:10,\u043D\u043E\u044F:11,\u0434\u0435\u043A:12}[e]||null}countWords(t){return t?t.trim().split(/\s+/).filter(e=>e.length>0).length:0}findMostActiveSpeaker(t){let e=t.split(`
`),s={},i="";for(let l of e){let a=l.trim();if(a==="")continue;let c=a.match(/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/);if(c)i=c[1].trim(),s[i]||(s[i]=0);else if(i){let u=this.countWords(a);s[i]+=u}}let n="",r=0;for(let[l,a]of Object.entries(s))a>r&&(r=a,n=l);return n||"N/A"}generateParticipantsStats(t,e){let s=t.split(`
`),i={},n={},r="";for(let c of e)i[c]=0,n[c]=0;for(let c of s){let u=c.trim();if(u==="")continue;let S=u.match(/^(.+?)\s*\|\s*(\d{2}:\d{2}(?::\d{2})?)$/);if(S)r=S[1].trim(),n[r]!==void 0&&n[r]++;else if(r&&i[r]!==void 0){let E=this.countWords(u);i[r]+=E}}let l=[],a=Object.values(i).reduce((c,u)=>c+u,0);for(let c of e){let u=i[c]||0,S=n[c]||0,E=a>0?(u/a*100).toFixed(1):"0";l.push(`- **${c}**: ${u} \u0441\u043B\u043E\u0432 (${E}%), ${S} \u0432\u044B\u0441\u0442\u0443\u043F\u043B\u0435\u043D\u0438\u0439`)}return l.length>0?["### \u{1F4CA} \u0410\u043A\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u043E\u0432","",...l]:[]}extractEntities(t,e){let s=[],i=`${t} ${e}`.substring(0,$.ENTITIES_TEXT_LIMIT),n={projects:/(?:проект|project|система|платформа|сервис|приложение|продукт)\s+([А-Яа-я\w\s]{3,30})/gi,companies:/(?:компания|компании|организация|корпорация|фирма|бизнес)\s+([А-Яа-я\w\s]{3,30})|([А-Яа-я][А-Яа-я\w]*(?:нефть|банк|групп|холдинг|корп))/gi,dates:/\d{1,2}[\.\-\/]\d{1,2}[\.\-\/]\d{2,4}|\d{4}[\.\-\/]\d{1,2}[\.\-\/]\d{1,2}/g},r=i.match(n.projects);r&&r.length>0&&(s.push("### \u{1F680} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u043F\u0440\u043E\u0435\u043A\u0442\u044B",""),[...new Set(r.slice(0,$.MAX_PROJECTS_ENTITIES))].forEach(u=>s.push(`- ${u.trim()}`)),s.push(""));let l=i.match(n.companies);l&&l.length>0&&(s.push("### \u{1F3E2} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u043A\u043E\u043C\u043F\u0430\u043D\u0438\u0438",""),[...new Set(l.slice(0,$.MAX_COMPANIES_ENTITIES))].forEach(u=>s.push(`- ${u.trim()}`)),s.push(""));let a=i.match(n.dates);return a&&a.length>0&&(s.push("### \u{1F4C5} \u0423\u043F\u043E\u043C\u044F\u043D\u0443\u0442\u044B\u0435 \u0434\u0430\u0442\u044B",""),[...new Set(a.slice(0,$.MAX_DATES_ENTITIES))].forEach(u=>s.push(`- ${u}`)),s.push("")),s}generateRelatedLinks(t,e){let s=[],i=t.match(/встреча|совещание|планерка|созвон/gi);i&&i.length>1&&s.push("- \u{1F4CB} **\u0421\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0438:** [[\u041F\u043E\u0438\u0441\u043A \u0432\u0441\u0442\u0440\u0435\u0447]]");let n=t.match(/документ|файл|презентация|отчет|план/gi);return n&&n.length>0&&s.push("- \u{1F4C4} **\u0414\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u044B:** [[\u041F\u043E\u0438\u0441\u043A \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u043E\u0432]]"),e.toLowerCase().includes("\u043F\u0440\u043E\u0435\u043A\u0442")&&s.push("- \u{1F680} **\u041F\u0440\u043E\u0435\u043A\u0442:** [[\u041F\u0440\u043E\u0435\u043A\u0442\u044B]]"),s}generateSmartTags(t,e,s){let i=new Set,n=`${t} ${e} ${s}`.toLowerCase().substring(0,$.SMART_TAGS_TEXT_LIMIT);i.add("meeting"),i.add("krisp");let r={\u043F\u0440\u043E\u0435\u043A\u0442:"project",project:"project",\u043F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435:"planning",planning:"planning",\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0430:"development",development:"development",\u043E\u0431\u0441\u0443\u0436\u0434\u0435\u043D\u0438\u0435:"discussion",\u0432\u0441\u0442\u0440\u0435\u0447\u0430:"meeting",\u0430\u043D\u0430\u043B\u0438\u0437:"analysis",strategy:"strategy",\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F:"strategy",\u0432\u043D\u0435\u0434\u0440\u0435\u043D\u0438\u0435:"implementation",\u0442\u0435\u0441\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435:"testing",\u0440\u0435\u0432\u044C\u044E:"review",review:"review",\u0431\u044E\u0434\u0436\u0435\u0442:"budget",budget:"budget",deadline:"deadline",\u0434\u0435\u0434\u043B\u0430\u0439\u043D:"deadline",hr:"hr",\u0440\u0435\u043A\u0440\u0443\u0442\u0438\u043D\u0433:"hr",recruiting:"hr",\u0438\u043D\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044F:"integration",integration:"integration",api:"technical",\u0441\u0438\u0441\u0442\u0435\u043C\u0430:"system",system:"system",\u0431\u0435\u0437\u043E\u043F\u0430\u0441\u043D\u043E\u0441\u0442\u044C:"security",security:"security",\u043F\u043E\u0434\u0434\u0435\u0440\u0436\u043A\u0430:"support",support:"support"};for(let[l,a]of Object.entries(r))n.includes(l)&&i.add(a);return(n.includes("ceo")||n.includes("director")||n.includes("\u0434\u0438\u0440\u0435\u043A\u0442\u043E\u0440"))&&i.add("management"),(n.includes("developer")||n.includes("\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A")||n.includes("\u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0438\u0441\u0442"))&&i.add("technical"),(n.includes("designer")||n.includes("\u0434\u0438\u0437\u0430\u0439\u043D\u0435\u0440"))&&i.add("design"),(n.includes("\u0440\u0435\u0442\u0440\u043E\u0441\u043F\u0435\u043A\u0442\u0438\u0432\u0430")||n.includes("retrospective"))&&i.add("retrospective"),(n.includes("\u043F\u043B\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435")||n.includes("planning"))&&i.add("planning"),(n.includes("\u0434\u0435\u043C\u043E")||n.includes("demo")||n.includes("\u043F\u0440\u0435\u0437\u0435\u043D\u0442\u0430\u0446\u0438\u044F"))&&i.add("demo"),Array.from(i)}};var _=require("obsidian");var V=lt(require("path")),Lt=class{constructor(t,e){this.app=t,this.vault=t.vault,this.settings=e}formatSummaryForCallout(t){if(!t||t.length===0)return"*\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E*";let e=[],s=0,i=!1;for(let n=0;n<t.length;n++){let l=t[n].trim();if(l===""){e.push("");continue}if(s===0&&l.toLowerCase()==="summary")continue;if(/^[-*•]\s+/.test(l)){let c=l.replace(/^[-*•]\s+/,"");e.push(`- ${c}`),i=!0}else this.isLikelyHeader(l,n,t)?(s++,i=!1,s>1&&e.push(""),e.push(`## ${s}. ${l}`)):(e.push(`- ${l}`),i=!0)}return e.map(n=>n===""?">":`> ${n}`).join(`
`)}isLikelyHeader(t,e,s){if(t.length>100||t.endsWith(".")||t.endsWith("!")||t.endsWith("?"))return!1;if(e+1<s.length){let i=s[e+1].trim();if(/^[-*•]\s+/.test(i))return!0}return t.length<80&&!t.includes(",")&&!t.includes(".")}applyTemplate(t,e,s,i,n){var D,Z,B,k,K,H,G,X;let r=t;r=r.replace(/{{meetingTitle}}/g,e.meetingTitle||"Untitled Meeting"),r=r.replace(/{{title}}/g,e.meetingTitle||"Untitled Meeting"),r=r.replace(/{{date}}/g,e.date||"YYYY-MM-DD"),r=r.replace(/{{time}}/g,e.time||"HH:MM"),r=r.replace(/{{duration}}/g,e.duration||"N/A");let l=((D=e.participants)==null?void 0:D.map(P=>`- **${P}**`).join(`
`))||"- *\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0443\u0447\u0430\u0441\u0442\u043D\u0438\u043A\u0430\u0445 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430*";r=r.replace(/{{participantsList}}/g,l),r=r.replace(/{{participants}}/g,((Z=e.participants)==null?void 0:Z.join(", "))||"N/A"),r=r.replace(/{{participantsCount}}/g,String(e.participantsCount||0)),r=r.replace(/{{transcriptWords}}/g,String(e.transcriptWords||0)),r=r.replace(/{{mostActiveSpeaker}}/g,e.mostActiveSpeaker||"N/A"),r=r.replace(/{{importDate}}/g,e.importDate||new Date().toLocaleDateString("ru-RU"));let a=((B=e.participantsStats)==null?void 0:B.join(`
`))||"*\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043A\u0430 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u0430*";r=r.replace(/{{participantsStats}}/g,a);let c=(k=e.extractedEntities)!=null&&k.length?e.extractedEntities.join(`

`):"*\u0414\u043E\u043F\u043E\u043B\u043D\u0438\u0442\u0435\u043B\u044C\u043D\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D\u0430*";r=r.replace(/{{extractedEntities}}/g,c);let u=(K=e.relatedLinks)!=null&&K.length?`
`+e.relatedLinks.join(`
`):"";r=r.replace(/{{relatedLinks}}/g,u);let S=(H=e.summary)!=null&&H.length?this.formatSummaryForCallout(e.summary):"*\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u043D\u0438\u0435 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E*";r=r.replace(/{{summary}}/g,S);let E=((G=e.actionItems)==null?void 0:G.map(P=>`- [ ] ${P}`).join(`
> 
> `))||"*\u041D\u0435\u0442 \u0437\u0430\u0434\u0430\u0447 \u0434\u043B\u044F \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F*";r=r.replace(/{{actionItemsList}}/g,E),r=r.replace(/{{actionItems}}/g,E);let T=((X=e.keyPoints)==null?void 0:X.map(P=>`- ${P}`).join(`
> 
> `))||"*\u041A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043C\u043E\u043C\u0435\u043D\u0442\u044B \u043D\u0435 \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u044B*";r=r.replace(/{{keyPointsList}}/g,T),r=r.replace(/{{keyPoints}}/g,T);let L=e.formattedTranscript?e.formattedTranscript.split(`
`).map(P=>`> ${P}`).join(`
`):"> *\u0422\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D*";r=r.replace(/{{formattedTranscript}}/g,L),r=r.replace(/{{transcript}}/g,L),r=r.replace(/{{rawTranscript}}/g,e.rawTranscript||"\u0421\u044B\u0440\u043E\u0439 \u0442\u0440\u0430\u043D\u0441\u043A\u0440\u0438\u043F\u0442 \u043D\u0435\u0434\u043E\u0441\u0442\u0443\u043F\u0435\u043D");let f=[...e.tags||[],...e.smartTags||[]],b=[...new Set(f)],y=b.length>0?b.map(P=>`  - ${P}`).join(`
`)+`
`:"";if(r=r.replace(/{{yamlTags}}/g,y),n){let P=(0,_.normalizePath)(n);r=r.replace(/{{audioPathForYaml}}/g,P),r=r.replace(/{{audioLink}}/g,P),r=r.replace(/{{audioEmbed}}/g,`![[${P}]]`)}else r=r.replace(/{{audioPathForYaml}}/g,""),r=r.replace(/{{audioLink}}/g,"N/A"),r=r.replace(/{{audioEmbed}}/g,`> [!warning] \u0410\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D
/**
 * Determines if a given string contains specific keywords or exceeds a certain length.
 *
 * This function checks if the input string `g` is either not a string, contains any of the phrases "Summary", "Action Items",
 * or "Key Points", or has a length greater than 10 characters. If any of these conditions are met, it returns true; otherwise,
 * it returns false.
 *
 * @param {string} g - The input string to be evaluated.
 * @returns {boolean} - True if the string meets any of the specified conditions; otherwise, false.
 */
/**
 * Checks if the input is a non-empty string that matches a specific pattern.
 */
/**
 * Monitors a file's size to determine if it remains stable over time.
 *
 * This function periodically checks the size of a specified file and determines if it has changed.
 * If the file size remains consistent (unchanged) for a predefined number of checks, it logs a message.
 * It uses a timeout to schedule subsequent checks until the conditions are met or an error occurs.
 *
 * @param t - The path to the file being monitored.
 * @param z - An object providing file system utility functions like `existsSync` and `statSync`.
 * @param i - A variable that stores the previous size of the file.
 * @param n - A counter that tracks consecutive checks with unchanged file size.
 * @param r - The maximum number of consecutive checks allowed before logging a message.
 * @param e - The time window (in milliseconds) within which the file must remain stable to trigger the log.
 * @param s - The interval (in milliseconds) between each file size check.
 * @param l - A function that logs a message indicating stability or an error.
 */
> \u0410\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B \u043D\u0435 \u0431\u044B\u043B \u0438\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D \u0438\u043B\u0438 \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D \u0432 \u0430\u0440\u0445\u0438\u0432\u0435.`);return i?r=r.replace(/{{noteFileName}}/g,i.replace(/\.md$/,"")):r=r.replace(/{{noteFileName}}/g,e.meetingTitle||"Untitled Meeting"),e.date&&e.date.length>=U.MIN_DATE_LENGTH?(r=r.replace(/{{YYYY}}/g,A.safeSubstring(e.date,0,4,"YYYY")),r=r.replace(/{{MM}}/g,A.safeSubstring(e.date,5,7,"MM")),r=r.replace(/{{DD}}/g,A.safeSubstring(e.date,8,10,"DD"))):(r=r.replace(/{{YYYY}}/g,"YYYY"),r=r.replace(/{{MM}}/g,"MM"),r=r.replace(/{{DD}}/g,"DD")),e.time&&e.time.length>=U.MIN_TIME_LENGTH?(r=r.replace(/{{HH}}/g,A.safeSubstring(e.time,0,2,"HH")),r=r.replace(/{{mm}}/g,A.safeSubstring(e.time,3,5,"MM"))):(r=r.replace(/{{HH}}/g,"HH"),r=r.replace(/{{mm}}/g,"MM")),r}generateFileName(t,e,s){let i=t;return e.date&&e.date.length>=U.MIN_DATE_LENGTH?(i=i.replace(/{{YYYY}}/g,A.safeSubstring(e.date,0,4,"YYYY")),i=i.replace(/{{MM}}/g,A.safeSubstring(e.date,5,7,"MM")),i=i.replace(/{{DD}}/g,A.safeSubstring(e.date,8,10,"DD"))):(i=i.replace(/{{YYYY}}/g,"YYYY"),i=i.replace(/{{MM}}/g,"MM"),i=i.replace(/{{DD}}/g,"DD")),e.time&&e.time.length>=U.MIN_TIME_LENGTH?(i=i.replace(/{{HHMM}}/g,A.safeSubstring(e.time,0,2,"HH")+A.safeSubstring(e.time,3,5,"MM")),i=i.replace(/{{HH}}/g,A.safeSubstring(e.time,0,2,"HH")),i=i.replace(/{{mm}}/g,A.safeSubstring(e.time,3,5,"MM"))):(i=i.replace(/{{HHMM}}/g,"HHMM"),i=i.replace(/{{HH}}/g,"HH"),i=i.replace(/{{mm}}/g,"MM")),i=i.replace(/{{meetingTitle}}/g,e.meetingTitle||"Untitled Meeting"),`${A.sanitizeFileName(i)}.${s}`}async createNote(t,e){var E,T,L;let s=this.generateFileName(this.settings.noteNameTemplate,t,"md"),i=((E=t.date)==null?void 0:E.substring(0,4))||"YYYY",n=((T=t.date)==null?void 0:T.substring(5,7))||"MM",r=(0,_.normalizePath)(V.join(this.settings.notesFolderPath,i,n));await this.ensureFolderExists(r);let l=(0,_.normalizePath)(V.join(r,s)),a=this.vault.getAbstractFileByPath(l);if(a&&a instanceof _.TFile)switch(this.settings.duplicateStrategy){case"skip":return console.log(`Note ${l} already exists. Skipping.`),new Notification("Krisp Importer",{body:`\u0417\u0430\u043C\u0435\u0442\u043A\u0430 ${s} \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442. \u0418\u043C\u043F\u043E\u0440\u0442 \u043F\u0440\u043E\u043F\u0443\u0449\u0435\u043D.`}),{notePath:l,noteFile:a};case"overwrite":console.log(`Note ${l} already exists. Overwriting.`),await this.vault.delete(a);break;case"rename":let f=1,b=s.substring(0,s.lastIndexOf(".")),y=s.substring(s.lastIndexOf(".")+1);for(;a;)l=(0,_.normalizePath)(V.join(r,`${b}_${f}.${y}`)),a=this.vault.getAbstractFileByPath(l),f++;console.log(`Note ${l} will be created with a new name.`);break}let c;if(e&&t.meetingTitle){let f=V.extname(e)||".mp3",b=this.generateFileName(this.settings.attachmentNameTemplate,t,f.substring(1)),y=this.settings.attachmentsFolderPath;!y.includes("{{YYYY}}")&&!y.includes("{{MM}}")&&(y=V.join(y,i,n)),y=y.replace(/{{YYYY}}/g,i).replace(/{{MM}}/g,n).replace(/{{DD}}/g,((L=t.date)==null?void 0:L.substring(8,10))||"DD"),await this.ensureFolderExists((0,_.normalizePath)(y)),c=(0,_.normalizePath)(V.join(y,b)),c=await this.createAudioFile(e,c,y,b)}let u=this.applyTemplate(this.settings.noteContentTemplate,t,this.settings,l.split("/").pop(),c),S=await this.vault.create(l,u);return console.log(`Note created: ${l}`),{notePath:l,audioDestPath:c,noteFile:S}}async handleAudioDuplicate(t,e,s){let i=this.settings.duplicateStrategy;switch(i){case"skip":return console.log(`[NoteCreator] Audio duplicate detected, skipping: ${s}`),t;case"overwrite":return console.log(`[NoteCreator] Audio duplicate detected, will overwrite: ${s}`),t;case"rename":return console.log(`[NoteCreator] Audio duplicate detected, creating unique name: ${s}`),this.generateUniqueAudioPath(e,s);default:return console.warn(`[NoteCreator] Unknown duplicate strategy: ${i}, falling back to rename`),this.generateUniqueAudioPath(e,s)}}async createAudioFile(t,e,s,i){try{let n=require("fs").promises;await n.access(t);let r=await n.readFile(t);console.log(`[NoteCreator] Audio file read, size: ${r.length} bytes`);let l=this.vault.getAbstractFileByPath(e),a=e;if(l){if(a=await this.handleAudioDuplicate(e,s,i),this.settings.duplicateStrategy==="skip")return console.log(`[NoteCreator] Audio file skipped (strategy: skip): ${i}`),a;if(this.settings.duplicateStrategy==="overwrite"){let c=this.vault.getAbstractFileByPath(a);if(c instanceof _.TFile)return await this.vault.modifyBinary(c,r),console.log(`[NoteCreator] Audio file updated: ${a}`),a}}return await this.vault.createBinary(a,r),console.log(`[NoteCreator] Audio file created: ${a}`),a}catch(n){return console.warn(`[NoteCreator] Error creating audio file ${i}:`,n),e}}generateUniqueAudioPath(t,e){let s=1,i=e.substring(0,e.lastIndexOf(".")),n=e.substring(e.lastIndexOf(".")+1),r,l;do{let a=`${i}_${s}.${n}`;r=(0,_.normalizePath)(V.join(t,a)),l=this.vault.getAbstractFileByPath(r),s++}while(l);return r}async ensureFolderExists(t){let e=(0,_.normalizePath)(t);if(e==="/"||e==="")return;if(!this.vault.getAbstractFileByPath(e)){let i=e.split("/"),n="";for(let r of i){if(!r)continue;if(n=n?`${n}/${r}`:r,!this.vault.getAbstractFileByPath(n))try{await this.vault.createFolder(n)}catch(a){if(!this.vault.getAbstractFileByPath(n))throw console.error(`Failed to create folder ${n}:`,a),a}}}}};var ft=require("obsidian");var ut=class{constructor(){}showSuccess(t,e=F.SUCCESS){new ft.Notice(t,e),console.log(`[Krisp Importer] SUCCESS: ${t}`)}showError(t,e=F.ERROR){new ft.Notice(`ERROR: ${t}`,e),console.error(`[Krisp Importer] ERROR: ${t}`)}showWarning(t,e=F.WARNING){new ft.Notice(`WARNING: ${t}`,e),console.warn(`[Krisp Importer] WARNING: ${t}`)}showInfo(t,e=F.INFO){new ft.Notice(t,e),console.log(`[Krisp Importer] INFO: ${t}`)}showDuplicateFound(t,e,s){let i=`\u0414\u0443\u0431\u043B\u0438\u043A\u0430\u0442 "${t}": ${s} (\u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044F: ${e})`;this.showWarning(i)}showBatchImportResult(t,e,s,i){t>0&&e===0?this.showSuccess(`\u0418\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D: ${t} \u0432\u0441\u0442\u0440\u0435\u0447(\u0438) \u0438\u0437 "${i}"`,F.SUCCESS):t>0&&e>0?this.showWarning(`\u0418\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D \u0447\u0430\u0441\u0442\u0438\u0447\u043D\u043E: ${t} \u0443\u0441\u043F\u0435\u0448\u043D\u043E, ${e} \u043E\u0448\u0438\u0431\u043E\u043A \u0438\u0437 "${i}"`,F.WARNING):e>0?this.showError(`\u0418\u043C\u043F\u043E\u0440\u0442 \u043D\u0435 \u0443\u0434\u0430\u043B\u0441\u044F: ${e} \u043E\u0448\u0438\u0431\u043E\u043A \u0432 "${i}"`,F.ERROR):this.showInfo(`\u041D\u0435\u0442 \u0434\u0430\u043D\u043D\u044B\u0445 \u0434\u043B\u044F \u0438\u043C\u043F\u043E\u0440\u0442\u0430 \u0432 "${i}"`,F.INFO),s>0&&this.showInfo(`\u041F\u0440\u043E\u043F\u0443\u0449\u0435\u043D\u043E \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u043E\u0432: ${s}`,F.INFO)}};function Wt(g){return typeof g!="string"?!1:g.includes("Summary")||g.includes("Action Items")||g.includes("Key Points")||g.length>10}function te(g){return typeof g!="string"?!1:g.length===0?!0:/^.+\s*\|\s*\d{2}:\d{2}/m.test(g)}var st=lt(require("path")),at=require("fs"),Nt=class{constructor(t,e,s){this.app=t,this.zipExtractor=new Tt(this.app),this.noteParser=new bt,this.noteCreator=null,this.notificationService=new ut,this.statusBarService=e||null,this.loggingService=s||null}async processZipFile(t,e){let s=null,i=st.basename(t),n=new nt.Notice(`Processing ${i}...`,0);this.statusBarService&&this.statusBarService.setProcessing(i),this.noteCreator=new Lt(this.app,e);try{let r=`${i.replace(".zip","")}_${Date.now()}`;if(s=await this.extractWithErrorHandling(t,r,i),!s){n&&n.hide();return}let l=await this.discoverMeetingFoldersWithErrorHandling(s,i);if(!l||l.length===0){n&&n.hide(),await this.ensureFinalCleanup(s);return}let a=await this.processMeetingsWithErrorHandling(l,s,i,e);n&&n.hide(),await this.handlePostProcessingWithErrorHandling(a,t,i,e)}catch(r){await this.handleCriticalError(r,i,n,s)}finally{await this.ensureFinalCleanup(s)}}async extractWithErrorHandling(t,e,s){try{return await this.zipExtractor.extract(t,e)}catch(i){let n=i instanceof Error?i.message:String(i);return this.logAndNotifyError(`Failed to extract ZIP file: ${s}`,i,"EXTRACT"),this.loggingService&&this.loggingService.handleError("Processing",`ZIP extraction failed for ${s}`,i),null}}async discoverMeetingFoldersWithErrorHandling(t,e){try{let i=(await at.promises.readdir(t,{withFileTypes:!0})).filter(n=>n.isDirectory());return i.length===0?(this.notificationService.showError(`No meeting folders found in ZIP: ${e}`),this.loggingService&&this.loggingService.warn("Processing",`No meeting folders found in ${e}`),null):i}catch(s){return this.logAndNotifyError(`Failed to read ZIP contents: ${e}`,s,"DISCOVER"),null}}async processMeetingsWithErrorHandling(t,e,s,i){var a,c,u,S,E;let n=0,r=0,l=null;this.loggingService&&this.loggingService.info("Processing",`Starting processing of ${t.length} meeting folders from ${s}`),console.log(`[DEBUG] Processing ${t.length} meeting folders`);for(let T=0;T<t.length;T++){let f=t[T].name,b=(0,nt.normalizePath)(st.join(e,f));this.loggingService&&this.loggingService.info("Processing",`Processing meeting ${T+1}/${t.length}: ${f}`);let y=t.length>1?`Processing meeting ${T+1}/${t.length}: ${f}...`:`Processing meeting: ${f}...`;new nt.Notice(y);let D=mt.MEETING_NOTES,Z=mt.TRANSCRIPT,B=mt.AUDIO_DEFAULT,k=(0,nt.normalizePath)(st.join(b,D)),K=(0,nt.normalizePath)(st.join(b,Z)),H=await at.promises.readdir(b),G=H.find(m=>mt.AUDIO_PATTERN.test(m)),X=G!=null?G:B,P=(0,nt.normalizePath)(st.join(b,X)),rt="",St="";try{let m=await at.promises.readFile(k,"utf-8");Wt(m)?rt=m:(this.logAndNotifyError(`Invalid meeting notes format in ${f}`,"File does not contain expected sections (Summary, Action Items, Key Points)","VALIDATE_NOTES"),console.warn(`[ProcessingService] Invalid meeting notes format in ${f}, using empty content`))}catch(m){this.notificationService.showError(`Failed to read ${D} from ${f} in ${s}`);let d=H.find(I=>I.toLowerCase().includes("notes")&&I.toLowerCase().endsWith(".txt")&&I!==D);if(d){this.notificationService.showInfo(`Attempting to use alternative notes file: ${d}`);try{let I=await at.promises.readFile(st.join(b,d),"utf-8");Wt(I)?rt=I:console.warn("[ProcessingService] Alternative notes file also has invalid format")}catch(I){this.notificationService.showError(`Failed to read alternative notes file ${d} for ${f}.`),r++;continue}}else{r++;continue}}try{let m=await at.promises.readFile(K,"utf-8");te(m)||console.warn(`[ProcessingService] Invalid transcript format in ${f}, may not contain speaker|time pattern`),St=m}catch(m){this.notificationService.showWarning(`Failed to read ${Z} for ${f} in ${s}. Transcript might be missing.`)}let o=this.noteParser.parseMeetingNotes(rt,St,f);if(this.loggingService&&this.loggingService.info("Processing",`Parsed data for ${f}`,{title:o.meetingTitle,date:o.date,time:o.time,participantsCount:((a=o.participants)==null?void 0:a.length)||0,hasTranscript:!!o.formattedTranscript,transcriptLength:((c=o.formattedTranscript)==null?void 0:c.length)||0}),console.log(`[DEBUG] Parsed data for ${f}:`,{title:o.meetingTitle,date:o.date,time:o.time,participants:o.participants,hasTranscript:!!o.formattedTranscript,transcriptLength:((u=o.formattedTranscript)==null?void 0:u.length)||0,summaryLength:((S=o.summary)==null?void 0:S.length)||0,actionItemsLength:((E=o.actionItems)==null?void 0:E.length)||0}),!this.noteCreator)throw new Error("NoteCreator is not initialized");if(!P||typeof P!="string")throw new Error(`Invalid audio file path for ${f}`);let h=await this.noteCreator.createNote(o,P);if(!h.notePath){let m=`Failed to create note for ${f}`;this.notificationService.showError(m),this.loggingService&&this.loggingService.error("Processing",m,{meetingFolder:f}),r++;continue}l=h,this.loggingService&&this.loggingService.info("Processing",`Note created successfully for ${f}`,{notePath:h.notePath,audioDestPath:h.audioDestPath}),console.log(`[DEBUG] Note created at: ${h.notePath}, audio dest: ${h.audioDestPath}`),this.notificationService.showSuccess(`Successfully imported meeting ${f} to ${h.notePath}`),n++}return{importedCount:n,errorCount:r,lastCreatedNote:l}}async handlePostProcessingWithErrorHandling(t,e,s,i){var n;if(this.statusBarService&&t.errorCount>0&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043E\u043A: ${t.errorCount}`),this.notificationService.showBatchImportResult(t.importedCount,t.errorCount,0,s),console.log(`[DEBUG] deleteZipAfterImport setting: ${i.deleteZipAfterImport}`),console.log(`[DEBUG] errorCount: ${t.errorCount}, importedCount: ${t.importedCount}`),i.deleteZipAfterImport&&t.errorCount===0&&t.importedCount>0)try{console.log(`[DEBUG] Attempting to delete ZIP file: ${e}`),await at.promises.rm(e),this.notificationService.showInfo(`Deleted original ZIP file: ${s}`),console.log(`[DEBUG] Successfully deleted ZIP file: ${e}`)}catch(r){console.error("[DEBUG] Failed to delete ZIP file:",r),this.notificationService.showError(`Failed to delete original ZIP file ${s}: ${r.message}`)}else i.deleteZipAfterImport?console.log(`[DEBUG] ZIP file not deleted due to errors or no imports. errorCount: ${t.errorCount}, importedCount: ${t.importedCount}`):console.log("[DEBUG] ZIP file deletion disabled in settings");i.openNoteAfterImport&&t.importedCount===1?(n=t.lastCreatedNote)!=null&&n.noteFile&&(this.app.workspace.getLeaf().openFile(t.lastCreatedNote.noteFile),this.notificationService.showInfo(`\u0417\u0430\u043C\u0435\u0442\u043A\u0430 \u043E\u0442\u043A\u0440\u044B\u0442\u0430: ${t.lastCreatedNote.notePath}`)):i.openNoteAfterImport&&t.importedCount>1&&this.notificationService.showInfo(`\u0418\u043C\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u043D\u043E ${t.importedCount} \u0437\u0430\u043C\u0435\u0442\u043E\u043A. \u041E\u0442\u043A\u0440\u043E\u0439\u0442\u0435 \u043D\u0443\u0436\u043D\u0443\u044E \u0438\u0437 \u043F\u0430\u043F\u043A\u0438 \u0437\u0430\u043C\u0435\u0442\u043E\u043A.`)}async handleCriticalError(t,e,s,i){s&&s.hide(),this.statusBarService&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ${e}`),this.loggingService?this.loggingService.handleError("Processing",`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ZIP-\u0444\u0430\u0439\u043B\u0430 ${e}`,t):(console.error(`[Krisp Importer] Error processing ZIP file ${e}:`,t),this.notificationService.showError(`An unexpected error occurred while processing ${e}: ${t.message}`))}async ensureFinalCleanup(t){t&&await this.zipExtractor.cleanup(t)}logAndNotifyError(t,e,s){console.error(`[DEBUG] ${s} error:`,e),this.notificationService.showError(t),this.loggingService&&this.loggingService.handleError("Processing",t,e)}};var z=lt(require("fs")),j=lt(require("path")),Pt=class{constructor(t,e,s,i,n){this.watcher=null;this.isWatching=!1;this.watchedPath="";this.isProcessingFile=!1;this.pendingFiles=new Set;this.app=t,this.processingService=e,this.notificationService=s,this.settingsProvider=i,this.statusBarService=n||null}async startWatching(t){if(this.isWatching&&await this.stopWatching(),!t||t.trim()===""){this.notificationService.showError("No watched folder specified");return}try{if(!z.existsSync(t)){this.notificationService.showError(`Folder does not exist: ${t}`);return}if(!z.statSync(t).isDirectory()){this.notificationService.showError(`\u0423\u043A\u0430\u0437\u0430\u043D\u043D\u044B\u0439 \u043F\u0443\u0442\u044C \u043D\u0435 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u043F\u0430\u043F\u043A\u043E\u0439: ${t}`);return}this.watchedPath=t,this.watcher=z.watch(t,{persistent:!0},async(s,i)=>{if(console.log(`[FileWatcher] Event detected: ${s}, filename: ${i}`),s==="rename"&&i)try{await this.handleFileEvent(i)}catch(n){console.error(`[FileWatcher] Error in file event handler for ${i}:`,n),this.notificationService.showError(`\u041A\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ${i}: ${n.message}`),this.statusBarService&&this.statusBarService.setError(`\u041A\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441 ${i}`)}}),this.isWatching=!0,this.statusBarService&&this.statusBarService.setWatching(t),this.notificationService.showSuccess(`\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u0437\u0430\u043F\u0443\u0449\u0435\u043D\u043E: ${t}`),console.log(`[Krisp Importer] FileWatcher started for: ${t}`)}catch(e){this.watcher&&(this.watcher.close(),this.watcher=null),this.isWatching=!1,this.watchedPath="",this.statusBarService&&this.statusBarService.setError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F: ${e.message}`),console.error("[Krisp Importer] Error starting file watcher:",e),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0437\u0430\u043F\u0443\u0441\u043A\u0430 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F: ${e.message}`)}}async stopWatching(){this.watcher&&(this.watcher.close(),this.watcher=null),this.isWatching&&(this.isWatching=!1,this.statusBarService&&this.statusBarService.setIdle("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),this.notificationService.showInfo("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),console.log("[Krisp Importer] FileWatcher stopped"))}isCurrentlyWatching(){return this.isWatching}getWatchedPath(){return this.watchedPath}async handleFileEvent(t){if(console.log(`[FileWatcher] Processing file event for: ${t}`),!t.toLowerCase().endsWith(".zip")){console.log(`[FileWatcher] Ignoring non-ZIP file: ${t}`);return}let e=j.join(this.watchedPath,t);if(!(!z.existsSync(e)||!z.statSync(e).isFile())){if(this.isProcessingFile){console.log(`[FileWatcher] File processing in progress, queuing: ${t}`),this.pendingFiles.add(e);return}await this.processFileWithMutex(e)}}async processFileWithMutex(t){this.isProcessingFile=!0;try{await this.processFileInternal(t)}catch(e){console.error(`[FileWatcher] Critical error processing ${t}:`,e),this.notificationService.showError(`\u041A\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ${j.basename(t)}: ${e.message}`),this.statusBarService&&this.statusBarService.setError(`\u041A\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430 \u0441 ${j.basename(t)}`)}finally{this.isProcessingFile=!1,await this.processNextInQueue()}}async processNextInQueue(){if(this.pendingFiles.size>0&&!this.isProcessingFile){let t=this.pendingFiles.values().next().value;this.pendingFiles.delete(t),console.log(`[FileWatcher] Processing queued file: ${j.basename(t)}`),await this.processFileWithMutex(t)}}async processFileInternal(t){let e=j.basename(t);try{console.log(`[Krisp Importer] New ZIP file detected: ${e}`),await this.waitForFileStability(t);let s=this.settingsProvider();this.statusBarService&&this.statusBarService.setProcessing(e),await this.processNewZipFile(t,s)}finally{this.statusBarService&&(this.isWatching&&this.watchedPath?this.statusBarService.setWatching(this.watchedPath):this.statusBarService.setIdle("\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0444\u0430\u0439\u043B\u0430 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u0430"))}}async waitForFileStability(t,e=$.FILE_STABILITY_MAX_WAIT){let s=$.FILE_STABILITY_CHECK_INTERVAL,i=0,n=0,r=$.FILE_STABILITY_REQUIRED_CHECKS;return new Promise(l=>{let a=Date.now(),c=()=>{try{if(!z.existsSync(t)){l();return}let S=z.statSync(t).size;if(S===i&&S>0){if(n++,n>=r){l();return}}else n=0;i=S,Date.now()-a<e?setTimeout(c,s):l()}catch(u){console.error("[FileWatcher] Error checking file stability:",u),l()}};c()})}async processNewZipFile(t,e){try{console.log(`[FileWatcher] Processing new ZIP file: ${t}`),console.log(`[FileWatcher] Settings - deleteZipAfterImport: ${e.deleteZipAfterImport}`),this.notificationService.showInfo(`\u041E\u0431\u043D\u0430\u0440\u0443\u0436\u0435\u043D \u043D\u043E\u0432\u044B\u0439 \u0444\u0430\u0439\u043B: ${j.basename(t)}`),await this.processingService.processZipFile(t,e)}catch(s){console.error("[Krisp Importer] Error processing new ZIP file:",s),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u043E\u0439 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u0444\u0430\u0439\u043B\u0430: ${s.message}`)}}async scanExistingFiles(){if(!this.isWatching||!this.watchedPath){this.notificationService.showError("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u0430\u044F \u043F\u0430\u043F\u043A\u0430 \u043D\u0435 \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043D\u0430 \u0438\u043B\u0438 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E. \u041D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u0442\u044C."),this.statusBarService&&this.statusBarService.setIdle("\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E");return}let t=this.isWatching,e=this.watchedPath;this.statusBarService&&this.statusBarService.setProcessing("\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044E\u0449\u0438\u0445 \u0444\u0430\u0439\u043B\u043E\u0432...");try{let i=z.readdirSync(this.watchedPath).filter(l=>l.toLowerCase().endsWith(".zip"));if(i.length===0){this.notificationService.showInfo("\u0412 \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u0435\u043C\u043E\u0439 \u043F\u0430\u043F\u043A\u0435 \u043D\u0435\u0442 ZIP-\u0444\u0430\u0439\u043B\u043E\u0432");return}this.notificationService.showInfo(`\u041D\u0430\u0439\u0434\u0435\u043D\u043E ${i.length} ZIP-\u0444\u0430\u0439\u043B\u043E\u0432 \u0434\u043B\u044F \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438`);let n=0,r=0;for(let l of i)try{let a=j.join(this.watchedPath,l),c=this.settingsProvider();await this.processNewZipFile(a,c),n++}catch(a){console.error(`[Krisp Importer] Error processing ${l}:`,a),r++}this.notificationService.showBatchImportResult(n,r,0,"\u043C\u0430\u0441\u0441\u043E\u0432\u043E\u0435 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435")}catch(s){console.error("[Krisp Importer] Error scanning existing files:",s),this.notificationService.showError(`\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u043F\u0430\u043F\u043A\u0438: ${s.message}`),this.statusBarService&&this.statusBarService.setError("\u041E\u0448\u0438\u0431\u043A\u0430 \u0441\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F")}finally{this.statusBarService&&(t&&e?this.statusBarService.setWatching(e):this.statusBarService.setIdle("\u0421\u043A\u0430\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D\u043E"))}}};var Ut=require("obsidian");var ot=(i=>(i[i.DEBUG=0]="DEBUG",i[i.INFO=1]="INFO",i[i.WARN=2]="WARN",i[i.ERROR=3]="ERROR",i))(ot||{}),Ct=class{constructor(t=1){this.logs=[];this.maxLogEntries=Et.MAX_LOG_ENTRIES;this.logTTL=Et.LOG_TTL_HOURS*60*60*1e3;this.cleanupTimer=null;this.currentLogLevel=t,this.log(1,"System","LoggingService initialized"),this.startPeriodicCleanup()}startPeriodicCleanup(){this.cleanupTimer=setInterval(()=>{this.cleanupExpiredLogs()},Et.CLEANUP_INTERVAL_MINUTES*60*1e3)}cleanupExpiredLogs(){let t=Date.now(),e=this.logs.length;this.logs=this.logs.filter(i=>t-i.timestamp.getTime()<=this.logTTL);let s=e-this.logs.length;s>0&&this.info("System",`\u041E\u0447\u0438\u0449\u0435\u043D\u043E \u0443\u0441\u0442\u0430\u0440\u0435\u0432\u0448\u0438\u0445 \u043B\u043E\u0433\u043E\u0432: ${s}`)}destroy(){this.cleanupTimer&&(clearInterval(this.cleanupTimer),this.cleanupTimer=null),this.info("System","LoggingService \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D")}log(t,e,s,i){if(t<this.currentLogLevel)return;let n={timestamp:new Date,level:t,category:e,message:s,details:i};this.logs.push(n),this.logs.length>this.maxLogEntries&&(this.logs=this.logs.slice(-this.maxLogEntries));let r=ot[t],a=`[${n.timestamp.toISOString()}] [${r}] [${e}] ${s}`;switch(t){case 0:console.debug(a,i);break;case 1:console.info(a,i);break;case 2:console.warn(a,i);break;case 3:console.error(a,i);break}}debug(t,e,s){this.log(0,t,e,s)}info(t,e,s){this.log(1,t,e,s)}warn(t,e,s){this.log(2,t,e,s)}error(t,e,s){this.log(3,t,e,s)}logZipProcessingStart(t){this.info("Processing",`\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0443 ZIP-\u0444\u0430\u0439\u043B\u0430: ${t}`)}logZipProcessingSuccess(t,e){this.info("Processing",`\u0423\u0441\u043F\u0435\u0448\u043D\u043E \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u0430\u043D ZIP-\u0444\u0430\u0439\u043B: ${t}`,{noteName:e})}logZipProcessingError(t,e){this.error("Processing",`\u041E\u0448\u0438\u0431\u043A\u0430 \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 ZIP-\u0444\u0430\u0439\u043B\u0430: ${t}`,{error:e.message,stack:e.stack})}logFileWatcherStart(t){this.info("FileWatcher",`\u0417\u0430\u043F\u0443\u0449\u0435\u043D\u043E \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438: ${t}`)}logFileWatcherStop(){this.info("FileWatcher","\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043F\u0430\u043F\u043A\u0438 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E")}logFileWatcherError(t){this.error("FileWatcher","\u041E\u0448\u0438\u0431\u043A\u0430 \u0432 FileWatcher",{error:t.message,stack:t.stack})}logDuplicateHandling(t,e,s){this.info("Duplicates",`\u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0434\u0443\u0431\u043B\u0438\u043A\u0430\u0442\u0430: ${e}`,{strategy:t,action:s})}logSettingsChange(t,e,s){this.info("Settings",`\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0430 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430: ${t}`,{oldValue:e,newValue:s})}logNoteCreation(t,e){this.info("NoteCreator",`\u0421\u043E\u0437\u0434\u0430\u043D\u0430 \u0437\u0430\u043C\u0435\u0442\u043A\u0430: ${t}`,{templateUsed:e})}logAudioFileCopy(t,e){this.info("AudioCopy",`\u0421\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D \u0430\u0443\u0434\u0438\u043E\u0444\u0430\u0439\u043B: ${t} -> ${e}`)}getAllLogs(){return[...this.logs]}getLogsByLevel(t){return this.logs.filter(e=>e.level>=t)}getLogsByCategory(t){return this.logs.filter(e=>e.category===t)}getRecentLogs(t=50){return this.logs.slice(-t)}exportLogsAsText(){return this.logs.map(e=>{let s=e.timestamp.toISOString(),i=ot[e.level].padEnd(5),n=e.category.padEnd(12),r=`[${s}] [${i}] [${n}] ${e.message}`;return e.details&&(r+=`
    Details: ${JSON.stringify(e.details,null,2)}`),r}).join(`
`)}exportLogsAsJSON(){return JSON.stringify(this.logs,null,2)}clearLogs(){let t=this.logs.length;this.logs=[],this.info("System",`\u041E\u0447\u0438\u0449\u0435\u043D\u044B \u043B\u043E\u0433\u0438 (\u0431\u044B\u043B\u043E \u0437\u0430\u043F\u0438\u0441\u0435\u0439: ${t})`)}setLogLevel(t){let e=this.currentLogLevel;this.currentLogLevel=t,this.info("System",`\u0418\u0437\u043C\u0435\u043D\u0435\u043D \u0443\u0440\u043E\u0432\u0435\u043D\u044C \u043B\u043E\u0433\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F: ${ot[e]} -> ${ot[t]}`)}getLogStats(){let t={},e={};return this.logs.forEach(s=>{let i=ot[s.level];t[i]=(t[i]||0)+1,e[s.category]=(e[s.category]||0)+1}),{total:this.logs.length,byLevel:t,byCategory:e}}handleError(t,e,s,i=!0){let n=s instanceof Error?s.message:String(s);this.error(t,e,{error:n,stack:s instanceof Error?s.stack:void 0}),i&&new Ut.Notice(`ERROR: ${e}: ${n}`,F.ERROR)}async copyLogsToClipboard(){try{let t=this.exportLogsAsText();await navigator.clipboard.writeText(t),new Ut.Notice("\u{1F4CB} Logs copied to clipboard",F.TEMPORARY_STATUS),this.info("System","\u041B\u043E\u0433\u0438 \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u044B \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430")}catch(t){this.handleError("System","\u041E\u0448\u0438\u0431\u043A\u0430 \u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u044F \u043B\u043E\u0433\u043E\u0432 \u0432 \u0431\u0443\u0444\u0435\u0440 \u043E\u0431\u043C\u0435\u043D\u0430",t)}}};var ee=require("obsidian");var Dt=class{constructor(t){this.statusBarItem=null;this.currentStatus="idle";this.currentMessage="";this.plugin=t,this.initialize()}initialize(){this.statusBarItem=this.plugin.addStatusBarItem(),this.statusBarItem.addClass("krisp-importer-status"),this.statusBarItem.style.cursor="pointer",this.statusBarItem.addEventListener("click",()=>{this.plugin.app.setting.open(),this.plugin.app.setting.openTabById("krisp-notes-importer")}),this.updateDisplay()}updateDisplay(){if(!this.statusBarItem)return;let{icon:t,text:e,color:s}=this.getStatusDisplay();this.statusBarItem.empty(),this.statusBarItem.removeClass("idle","watching","processing","error");let i=this.currentStatus.toLowerCase();this.statusBarItem.addClass(i);let n=this.statusBarItem.createEl("span");n.style.marginRight="4px",(0,ee.setIcon)(n,t);let r=this.statusBarItem.createEl("span");r.textContent=e,this.statusBarItem.style.color=s,this.statusBarItem.setAttribute("aria-label",this.getTooltipText())}getStatusDisplay(){switch(this.currentStatus){case"idle":return{icon:"pause-circle",text:"Krisp",color:"var(--text-muted)"};case"watching":return{icon:"eye",text:"Krisp",color:"var(--color-green)"};case"processing":return{icon:"loader-2",text:"Krisp",color:"var(--color-blue)"};case"error":return{icon:"alert-circle",text:"Krisp",color:"var(--color-red)"};default:return{icon:"help-circle",text:"Krisp",color:"var(--text-muted)"}}}getTooltipText(){let t="Krisp Notes Importer";switch(this.currentStatus){case"idle":return`${t}: \u041D\u0435\u0430\u043A\u0442\u0438\u0432\u0435\u043D`;case"watching":return`${t}: \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0430\u043A\u0442\u0438\u0432\u043D\u043E${this.currentMessage?` - ${this.currentMessage}`:""}`;case"processing":return`${t}: \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u0444\u0430\u0439\u043B\u0430${this.currentMessage?` - ${this.currentMessage}`:""}`;case"error":return`${t}: \u041E\u0448\u0438\u0431\u043A\u0430${this.currentMessage?` - ${this.currentMessage}`:""}`;default:return t}}setIdle(t){this.currentStatus="idle",this.currentMessage=t||"",this.updateDisplay()}setWatching(t){this.currentStatus="watching",this.currentMessage=t?`Watching: ${t}`:"",this.updateDisplay()}setProcessing(t){this.currentStatus="processing",this.currentMessage=t?`\u0424\u0430\u0439\u043B: ${t}`:"",this.updateDisplay()}setError(t){this.currentStatus="error",this.currentMessage=t||"",this.updateDisplay(),setTimeout(()=>{this.currentStatus==="error"&&this.setIdle()},1e4)}showTemporaryMessage(t,e=F.TEMPORARY_STATUS){let s=this.currentStatus,i=this.currentMessage;this.currentMessage=t,this.updateDisplay(),setTimeout(()=>{this.currentStatus=s,this.currentMessage=i,this.updateDisplay()},e)}getCurrentStatus(){return this.currentStatus}isActive(){return this.currentStatus==="watching"||this.currentStatus==="processing"}destroy(){this.statusBarItem&&(this.statusBarItem.remove(),this.statusBarItem=null)}startProcessingAnimation(){if(!this.statusBarItem||this.currentStatus!=="processing")return;let t=this.statusBarItem.querySelector("span:first-child");t&&(t.style.animation="spin 1s linear infinite")}stopAnimation(){if(!this.statusBarItem)return;let t=this.statusBarItem.querySelector("span:first-child");t&&(t.style.animation="")}updateDisplayWithAnimation(){this.updateDisplay(),this.currentStatus==="processing"?this.startProcessingAnimation():this.stopAnimation()}};var Ft=class extends R.Plugin{async onload(){console.log("Loading Krisp Notes Importer plugin..."),this.loggingService=new Ct(1),this.loggingService.info("Plugin","\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u0437\u0430\u0433\u0440\u0443\u0437\u043A\u0443 \u043F\u043B\u0430\u0433\u0438\u043D\u0430 Krisp Notes Importer"),this.settingsManager=new It(this),await this.settingsManager.loadSettings(),this.loggingService.info("Plugin","Settings loaded");let e=this.settingsManager.getSetting("language")||"en";this.localizationService=new ct(e),this.loggingService.info("Plugin",`\u041B\u043E\u043A\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u0430: ${e}`),this.notificationService=new ut,this.statusBarService=new Dt(this),this.processingService=new Nt(this.app,this.statusBarService,this.loggingService),this.loggingService.info("Plugin","\u041E\u0441\u043D\u043E\u0432\u043D\u044B\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u044B \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u043D\u044B"),this.fileWatcherService=new Pt(this.app,this.processingService,this.notificationService,()=>this.settingsManager.getAllSettings(),this.statusBarService),this.addSettingTab(new wt(this.app,this)),this.addCommand({id:"import-krisp-zip-manually",name:this.localizationService.t("commands.importZip"),callback:()=>{this.loggingService.info("Commands","\u0417\u0430\u043F\u0443\u0449\u0435\u043D\u0430 \u043A\u043E\u043C\u0430\u043D\u0434\u0430 \u0440\u0443\u0447\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430 ZIP-\u0444\u0430\u0439\u043B\u0430"),new Zt(this.app,async n=>{if(n&&n.trim()!==""){let r=n.trim();this.loggingService.info("Commands",`\u041D\u0430\u0447\u0438\u043D\u0430\u044E \u0440\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u0444\u0430\u0439\u043B\u0430: ${r}`),this.statusBarService&&this.statusBarService.setProcessing(r.split("/").pop()||r);try{await this.processingService.processZipFile(r,this.settingsManager.getAllSettings())}catch(l){this.statusBarService&&this.statusBarService.getCurrentStatus()!=="error"&&this.statusBarService.setError("\u041E\u0448\u0438\u0431\u043A\u0430 \u0440\u0443\u0447\u043D\u043E\u0433\u043E \u0438\u043C\u043F\u043E\u0440\u0442\u0430")}finally{this.statusBarService&&(this.settingsManager.getSetting("autoScanEnabled")&&this.fileWatcherService.isCurrentlyWatching()?this.statusBarService.setWatching(this.fileWatcherService.getWatchedPath()):this.statusBarService.setIdle("\u0420\u0443\u0447\u043D\u043E\u0439 \u0438\u043C\u043F\u043E\u0440\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043D"))}}else this.loggingService.warn("Commands","\u041F\u043E\u043F\u044B\u0442\u043A\u0430 \u0438\u043C\u043F\u043E\u0440\u0442\u0430 \u0441 \u043F\u0443\u0441\u0442\u044B\u043C \u043F\u0443\u0442\u0435\u043C \u043A \u0444\u0430\u0439\u043B\u0443"),new R.Notice("File path cannot be empty.")},this.localizationService).open()}}),this.addCommand({id:"start-auto-watching",name:this.localizationService.t("commands.startWatching"),callback:async()=>{let n=this.settingsManager.getSetting("watchedFolderPath");n&&n.trim()!==""?(this.statusBarService.setWatching(n),await this.fileWatcherService.startWatching(n)):(this.statusBarService.setError("No watched folder specified"),new R.Notice("Please set the watched folder path in settings first."))}}),this.addCommand({id:"stop-auto-watching",name:this.localizationService.t("commands.stopWatching"),callback:async()=>{this.statusBarService.setIdle("\u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043E"),await this.fileWatcherService.stopWatching()}}),this.addCommand({id:"scan-existing-files",name:this.localizationService.t("commands.scanExisting"),callback:async()=>{await this.fileWatcherService.scanExistingFiles()}}),this.addCommand({id:"debug-settings",name:this.localizationService.t("commands.debugSettings"),callback:()=>{let n=this.settingsManager.getAllSettings();console.log("[Krisp Importer] Current settings:",n),new R.Notice(`Settings logged to console. deleteZipAfterImport: ${n.deleteZipAfterImport}`,5e3)}}),this.addCommand({id:"check-watching-status",name:this.localizationService.t("commands.checkStatus"),callback:()=>{let n=this.fileWatcherService.isCurrentlyWatching(),r=this.fileWatcherService.getWatchedPath(),l=this.settingsManager.getSetting("autoScanEnabled");console.log("[Krisp Importer] Watching status:",{isWatching:n,watchedPath:r,autoScanEnabled:l});let a=n?`\u2705 \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u0430\u043A\u0442\u0438\u0432\u043D\u043E: ${r}`:`\u274C \u041E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u0435 \u043D\u0435\u0430\u043A\u0442\u0438\u0432\u043D\u043E. AutoScan \u0432 \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430\u0445: ${l?"\u0432\u043A\u043B\u044E\u0447\u0435\u043D":"\u0432\u044B\u043A\u043B\u044E\u0447\u0435\u043D"}`;new R.Notice(a,7e3)}});let s=this.settingsManager.getSetting("autoScanEnabled"),i=this.settingsManager.getSetting("watchedFolderPath");s&&i&&i.trim()!==""?(this.loggingService.info("Plugin",`\u0410\u0432\u0442\u043E\u0437\u0430\u043F\u0443\u0441\u043A \u043E\u0442\u0441\u043B\u0435\u0436\u0438\u0432\u0430\u043D\u0438\u044F \u043F\u0430\u043F\u043A\u0438: ${i}`),this.statusBarService.setWatching(i),await this.fileWatcherService.startWatching(i)):this.statusBarService.setIdle("\u0413\u043E\u0442\u043E\u0432 \u043A \u0440\u0430\u0431\u043E\u0442\u0435"),this.loggingService.info("Plugin","\u041F\u043B\u0430\u0433\u0438\u043D Krisp Notes Importer \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043D \u0443\u0441\u043F\u0435\u0448\u043D\u043E"),console.log("Krisp Notes Importer plugin loaded successfully.")}onunload(){this.fileWatcherService&&this.fileWatcherService.stopWatching(),this.statusBarService&&this.statusBarService.destroy(),this.loggingService&&(this.loggingService.info("Plugin","\u0412\u044B\u0433\u0440\u0443\u0436\u0430\u044E \u043F\u043B\u0430\u0433\u0438\u043D Krisp Notes Importer"),this.loggingService.destroy()),console.log("Unloading Krisp Notes Importer plugin.")}},Zt=class extends R.Modal{constructor(e,s,i){super(e);this.inputEl=null;this.keypressHandler=null;this.onSubmitCallback=s,this.localization=i}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:this.localization.t("modal.importZip.title")}),new R.Setting(e).setName(this.localization.t("modal.importZip.pathLabel")).setDesc(this.localization.t("modal.importZip.pathDesc")).addText(s=>{s.setPlaceholder("/path/to/your/krisp_meeting.zip"),s.onChange(i=>{this.filePath=i}),s.inputEl.style.width="100%",this.keypressHandler=i=>{i.key==="Enter"&&(i.preventDefault(),this.submitForm())},s.inputEl.addEventListener("keypress",this.keypressHandler),this.inputEl=s.inputEl}),new R.Setting(e).addButton(s=>s.setButtonText(this.localization.t("modal.importZip.importButton")).setCta().onClick(()=>{this.submitForm()}))}submitForm(){this.filePath&&this.filePath.trim()!==""?(this.onSubmitCallback(this.filePath.trim()),this.close()):new R.Notice(this.localization.t("modal.importZip.emptyPathError"))}onClose(){let{contentEl:e}=this;e.empty(),this.inputEl&&this.inputEl.removeEventListener("keypress",this.keypressHandler)}};
/*! Bundled license information:

node-stream-zip/node_stream_zip.js:
  (**
   * @license node-stream-zip | (c) 2020 Antelle | https://github.com/antelle/node-stream-zip/blob/master/LICENSE
   * Portions copyright https://github.com/cthackers/adm-zip | https://raw.githubusercontent.com/cthackers/adm-zip/master/LICENSE
   *)
*/
